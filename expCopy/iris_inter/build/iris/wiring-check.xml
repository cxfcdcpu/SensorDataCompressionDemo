<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f10e87af1c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f10e8b2ccb0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f10e8b2ccb0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f10e8b29dd0"/></to>
    </wire>
    <wire loc="85:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f10e87ae6d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e8649bd0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e8649bd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e8613140"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f10e87aaa80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e7a6a710"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e7a6a710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e79f74e0"/></to>
    </wire>
    <wire loc="88:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f10e87a9020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e7a677f0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f10e7a677f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e7a5eb40"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f10e8737250"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e7a642b0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f10e7a642b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e79ff720"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f10e87262c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e7a63020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f10e7a63020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e7a00020"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e8738020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e8646ca0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f10e8646ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e86121d0"/></to>
    </wire>
    <wire loc="93:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e871fe40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e8644020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e8644020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e86113f0"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f10e8725a70"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f10e8644c00"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f10e8644c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f10e8610020"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e8724170"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e86418f0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f10e86418f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e860db40"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f10e8721020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e86405f0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f10e86405f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e860c910"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="time" scoped="" ref="0x7f10e871d250"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e76a2bd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e76a2bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f10e7ea6320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f10e87020d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f10e8679bd0"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f10e8679bd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f10e8672620"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f10e77f3d80"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f10e77eece0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e781b020"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e79fae60"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e704b420"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e7e31b60"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e805e540"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8126dc0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e71b5e60"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e82443b0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e71e7560"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e72a8b40"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f10e8964470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f10e8c6f020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f10e8c6f020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f10e8b6d8a0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8962020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f10e7d24680"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8962020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f10e7e31020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8962020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8b27b10"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e8b27b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8b1d0c0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8962720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f10e8b25d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e76d7c60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f10e8b25d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e7b6bb50"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e8b25020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e8983690"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f10e8b1c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8983020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f10e8b1d7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e864e2e0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f10e8b1d7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8b1f9e0"/></to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8b1f9e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8b14530"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f10e8b17110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f10e8b25d50"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f10e8b0dad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f10e8b02060"/></to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f10e8b02060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f10e8a76da0"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f10e8b13cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f10e8b17110"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f10e8acccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e89db160"/></to>
    </wire>
    <wire loc="165:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f10e8ae84e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f10e8a4a2b0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f10e8a4a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7509e20"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f10e8adb350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f10e8a398f0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f10e8a398f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74973f0"/></to>
    </wire>
    <wire loc="185:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f10e8ad2cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f10e8a29c10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f10e8a29c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e742a3f0"/></to>
    </wire>
    <wire loc="196:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f10e8ac5060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e89c16d0"/></to>
    </wire>
    <wire loc="143:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f10e8b00670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f10e8a722b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f10e8a722b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7639e20"/></to>
    </wire>
    <wire loc="183:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f10e8ad4670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f10e8a2b8f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f10e8a2b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7431e20"/></to>
    </wire>
    <wire loc="146:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f10e8afecb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f10e8a6ba20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f10e8a6ba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75e2c90"/></to>
    </wire>
    <wire loc="157:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f10e8af1cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f10e8a58020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f10e8a58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75700a0"/></to>
    </wire>
    <wire loc="168:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f10e8ae5e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f10e8a47760"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f10e8a47760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74ff6d0"/></to>
    </wire>
    <wire loc="179:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f10e8ad8cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f10e8a35da0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f10e8a35da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e748de20"/></to>
    </wire>
    <wire loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f10e8b06800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f10e8a798f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f10e8a798f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e764ae20"/></to>
    </wire>
    <wire loc="149:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f10e8af9670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f10e8a66020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f10e8a66020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75d83f0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f10e8aed670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f10e8a555d0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f10e8a555d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75669b0"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f10e8ae1670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f10e8a43c10"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f10e8a43c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74f40a0"/></to>
    </wire>
    <wire loc="188:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f10e8ace670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f10e8a252b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f10e8a252b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7420e20"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f10e8ac8b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e89cb160"/></to>
    </wire>
    <wire loc="174:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f10e8adfcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f10e8a3b5d0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f10e8a3b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e749ee20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f10e8a76da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e763f6d0"/></to>
    </wire>
    <wire loc="152:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f10e8af5020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f10e8a635d0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f10e8a635d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75cee20"/></to>
    </wire>
    <wire loc="192:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f10e8aca4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e89d7c90"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f10e8af3670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f10e8a5bd30"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f10e8a5bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7577c90"/></to>
    </wire>
    <wire loc="166:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f10e8ae7800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f10e8a49440"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f10e8a49440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75050a0"/></to>
    </wire>
    <wire loc="177:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f10e8ada670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f10e8a37a80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f10e8a37a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74946d0"/></to>
    </wire>
    <wire loc="186:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f10e8ad0020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f10e8a28da0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f10e8a28da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74276d0"/></to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f10e8aff990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f10e8a71440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f10e8a71440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e76350a0"/></to>
    </wire>
    <wire loc="147:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f10e8afc020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f10e8a6ac10"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f10e8a6ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75dfe20"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f10e8aef020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f10e8a572b0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f10e8a572b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e756d3f0"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f10e8ae3060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f10e8a468f0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f10e8a468f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74fb9b0"/></to>
    </wire>
    <wire loc="180:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f10e8ad6020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f10e8a33020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f10e8a33020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74890a0"/></to>
    </wire>
    <wire loc="139:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f10e8b05b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f10e8a78a80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f10e8a78a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e76460a0"/></to>
    </wire>
    <wire loc="150:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f10e8af8990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f10e8a652b0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f10e8a652b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75d46d0"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f10e8aec990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f10e8a54760"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f10e8a54760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7563e20"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f10e8acd990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f10e8a24440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f10e8a24440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e741c0a0"/></to>
    </wire>
    <wire loc="164:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f10e8ae9020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f10e8a4b020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f10e8a4b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e750cc90"/></to>
    </wire>
    <wire loc="175:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f10e8adc020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f10e8a3a760"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f10e8a3a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e749a0a0"/></to>
    </wire>
    <wire loc="184:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f10e8ad3990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f10e8a2aa80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f10e8a2aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e742d0a0"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f10e8ac7e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e89c7c90"/></to>
    </wire>
    <wire loc="142:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f10e8b01350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f10e8a73020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f10e8a73020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e763c9b0"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f10e8af4350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f10e8a62760"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f10e8a62760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75ca0a0"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f10e8ad5350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f10e8a2d7a0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f10e8a2d7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7434c90"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f10e8af2990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f10e8a5ae60"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f10e8a5ae60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e7574e20"/></to>
    </wire>
    <wire loc="167:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f10e8ae6b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f10e8a485d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f10e8a485d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75023f0"/></to>
    </wire>
    <wire loc="178:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f10e8ad9990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f10e8a36c10"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f10e8a36c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74919b0"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f10e8acf350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f10e8a26020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f10e8a26020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74249b0"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f10e8b15550"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f10e8a7a6b0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f10e8a7a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e764d9b0"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f10e8afb350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f10e8a68da0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f10e8a68da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75db0a0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f10e8aee350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f10e8a56440"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f10e8a56440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e756a6d0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f10e8ae2350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f10e8a45a80"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f10e8a45a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74f8e20"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f10e8ac9800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e89d16d0"/></to>
    </wire>
    <wire loc="173:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f10e8ae0990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f10e8a3c3f0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f10e8a3c3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e74a1c90"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f10e8aebcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f10e8a538f0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f10e8a538f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e755f0a0"/></to>
    </wire>
    <wire loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f10e8b04e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f10e8a77c10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f10e8a77c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e76433f0"/></to>
    </wire>
    <wire loc="151:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f10e8af7cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f10e8a64440"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f10e8a64440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f10e75d19b0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8b6c850"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f10e8b6bde0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f10e8c27a30"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f10e8b4b690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f10e7fa5a70"/></to>
    </wire>
    <wire loc="144:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f10e86f25d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e864e2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8672020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f10e8671d20"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f10e86739e0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f10e86739e0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f10e8b05b20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f10e866f020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f10e8651ce0"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f10e8651ce0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f10e8b06800"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f10e866e340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f10e864f020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f10e864f020"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f10e8b15550"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e8613140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e85eb600"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f10e86412e0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f10e8610bb0"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f10e8610bb0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f10e85e5020"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f10e860db40"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f10e85e1880"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f10e86121d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e85e8640"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f10e8610020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f10e85e6430"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e862f5b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e860a9c0"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e860a9c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e85c8cf0"/></to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e86113f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e85e7810"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e86379f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e860a020"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e860a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e85c8350"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f10e8629880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f10e8609600"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f10e8609600"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f10e85c7810"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f10e860c910"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e85e2020"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f10e8625650"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f10e86082f0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f10e86082f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f10e85c6610"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f10e861b7c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e85f7e60"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e85f7e60"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e85bad80"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e861a880"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e85ef020"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e85ef020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e85b5270"/></to>
    </wire>
    <wire loc="215:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e85eb600"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e81e20e0"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e85fc1c0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e85bfc40"/></to>
    </wire>
    <wire loc="305:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e85bfc40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e7e503b0"/></to>
    </wire>
    <wire loc="270:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e85b5270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e7e9ed00"/></to>
    </wire>
    <wire loc="124:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f10e85e5020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f10e840c420"/></to>
    </wire>
    <wire loc="126:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f10e85e1880"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e84108b0"/></to>
    </wire>
    <wire loc="121:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f10e85e8640"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e840f6c0"/></to>
    </wire>
    <wire loc="123:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f10e85e6430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f10e840ec90"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e8600c90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e85c2730"/></to>
    </wire>
    <wire loc="303:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e85c2730"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e7e54e80"/></to>
    </wire>
    <wire loc="216:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e85c8cf0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e81dfa40"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e85e7810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e840e530"/></to>
    </wire>
    <wire loc="269:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e85bad80"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7e9bbb0"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e85f4960"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e85bb880"/></to>
    </wire>
    <wire loc="307:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e85bb880"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e46a40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e8601630"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e85c5200"/></to>
    </wire>
    <wire loc="304:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e85c5200"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e7e4ae70"/></to>
    </wire>
    <wire loc="248:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e85c8350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e80e0b60"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e860f8f0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e85e5c70"/></to>
    </wire>
    <wire loc="128:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e85e5c70"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e840cb80"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f10e85c7810"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f10e8202ba0"/></to>
    </wire>
    <wire loc="125:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f10e85e2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e8411280"/></to>
    </wire>
    <wire loc="224:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f10e85c6610"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f10e816b700"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e85f6c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e85bb020"/></to>
    </wire>
    <wire loc="306:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e85bb020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e7e461e0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e860d530"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e85e48c0"/></to>
    </wire>
    <wire loc="129:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e85e48c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e840b3e0"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e81e20e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f10e81de630"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e7e503b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e7e290d0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f10e85df8c0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f10e8358d30"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f10e85d2e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e838d390"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f10e838d390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e72a5210"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f10e840c420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f10e7300b00"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f10e840f6c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f10e7302e20"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f10e840ec90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f10e73003e0"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e85d6080"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e8281c40"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e8281c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e72392e0"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f10e85d1570"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e8387e00"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e7e54e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e7e2db90"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e81dfa40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e71bdda0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f10e84108b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f10e73020e0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e840e530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e7301ba0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7e9bbb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7126630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e46a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7d29060"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e7e4ae70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e7e23c80"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f10e85d8420"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f10e8359a50"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e840cb80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e72ff3e0"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f10e8202ba0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f10e81fc020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f10e816b700"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f10e71b33d0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f10e8411280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f10e7304ac0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e7e9ed00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e71296f0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f10e85df190"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f10e8358760"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e7e461e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e7e1f020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e840b3e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e72ffb40"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8568470"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8284b20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8284b20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e723c100"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e8562340"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e84fe6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e8561ab0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7e9bbb0"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f10e855b960"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e55d90"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e55d90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e2eaa0"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e84c2820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e7e45dd0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e7e45dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e7d2ec80"/></to>
    </wire>
    <wire loc="116:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e84098c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f10e8584b70"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e840a8f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f10e8401550"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e84092b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f10e8317770"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e840ba70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f10e8317d80"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f10e83f2910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e838d390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e83f2020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f10e8319e00"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8357390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8284b20"/></to>
    </wire>
    <wire loc="154:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e83532b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f10e831a0a0"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e8353be0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f10e831a9d0"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e8354470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e8319020"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e8316c40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e82132f0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f10e82132f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e71e84a0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e83155d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e82025d0"/></to>
    </wire>
    <wire loc="114:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e82025d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e81ff120"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e8315be0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e827e020"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e827e020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7237590"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e827ee60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e82018b0"/></to>
    </wire>
    <wire loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e82018b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e81ff730"/></to>
    </wire>
    <wire loc="181:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e82115a0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f10e859a730"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e82124a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e820cbb0"/></to>
    </wire>
    <wire loc="113:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f10e820cbb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e82007c0"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e81fd590"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e80e0b60"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e82007c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e81e2ba0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f10e81e2ba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e81dd120"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e81ff120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e81e05d0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e81e05d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e81dda50"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e81ff730"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e81e0ba0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e81e0ba0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e81dc0a0"/></to>
    </wire>
    <wire loc="211:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f10e81de630"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e816dcc0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e816dcc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e71b53a0"/></to>
    </wire>
    <wire loc="212:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e81dd120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e816c7e0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f10e816c7e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e71b44a0"/></to>
    </wire>
    <wire loc="213:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e81dda50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e816b130"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e816b130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e71b4dd0"/></to>
    </wire>
    <wire loc="214:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e81dc0a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e977e0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e977e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e71223b0"/></to>
    </wire>
    <wire loc="221:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e816ae20"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e8163db0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e8163db0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e7176140"/></to>
    </wire>
    <wire loc="222:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e8169730"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e8213be0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e8213be0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e71e8d90"/></to>
    </wire>
    <wire loc="223:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f10e816a080"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f10e7e68c20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f10e7e68c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f10e7e62410"/></to>
    </wire>
    <wire loc="228:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e8212dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e81126f0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e81126f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7176a30"/></to>
    </wire>
    <wire loc="237:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e8110d30"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f10e8599020"/></to>
    </wire>
    <wire loc="238:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e8111020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e8109ac0"/></to>
    </wire>
    <wire loc="239:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e8111950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e80e0400"/></to>
    </wire>
    <wire loc="240:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e81100e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e84fe6b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f10e80db5d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f10e7e8e9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e80dd780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e84fe6b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e80dc440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f10e859f380"/></to>
    </wire>
    <wire loc="253:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e80df630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e80bf720"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e80bf720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e80b9020"/></to>
    </wire>
    <wire loc="254:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e80dd020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e80be060"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e80be060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e80b9950"/></to>
    </wire>
    <wire loc="259:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e80b6760"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f10e8582860"/></to>
    </wire>
    <wire loc="260:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e80b9020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e67a40"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e67a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e7e60440"/></to>
    </wire>
    <wire loc="261:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e80b9950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e66400"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e66400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e7e60d70"/></to>
    </wire>
    <wire loc="262:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f10e80b7120"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e555c0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e555c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e2e2d0"/></to>
    </wire>
    <wire loc="267:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e95760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e46a40"/></to>
    </wire>
    <wire loc="268:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e94800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e8d590"/></to>
    </wire>
    <wire loc="271:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f10e7e93760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f10e7e8e9b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e6d4a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e55d90"/></to>
    </wire>
    <wire loc="286:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e7e5eb40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f10e8582860"/></to>
    </wire>
    <wire loc="287:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e7e60440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e56460"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e56460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e2f120"/></to>
    </wire>
    <wire loc="288:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e7e60d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e56dd0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e56dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e2fa90"/></to>
    </wire>
    <wire loc="289:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f10e7e62410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f10e7e59610"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f10e7e59610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f10e7e302e0"/></to>
    </wire>
    <wire loc="301:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e7e401f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f10e85a81c0"/></to>
    </wire>
    <wire loc="302:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e7e3f2e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7e9bbb0"/></to>
    </wire>
    <wire loc="309:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f10e7e3b110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f10e7e8e9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f10e7e3bca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f10e7e8e9b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f10e7e3a8d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f10e7e8e9b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7e39470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e84fe6b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e84fe6b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e732d8a0"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e732c830"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e84c2820"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f10e7328940"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f10e84cb130"/></to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <from><interface-ref name="tasklet" scoped="" ref="0x7f10e84ca740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e72fa0f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e84285a0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e72fe310"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e840ba70"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e72fc120"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e840a8f0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e72fca50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e84092b0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e72fb0a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f10e84098c0"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e838c150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e72a4020"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e838c8d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e72a47a0"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e72a20d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e838a1f0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f10e72a2890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f10e72a72b0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f10e72a1480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e7236460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e84285a0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e7235020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e827ee60"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f10e71e57e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f10e8248e30"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f10e8248e30"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f10e8244a00"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e71e4410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e71e2d40"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e71e2d40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e8241d10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e71e7bd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e82124a0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e71e65d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e8212dd0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f10e71e6d30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f10e82115a0"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f10e81fccb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e81fd590"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f10e71b3d20"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f10e816a080"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f10e71b2b00"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f10e84cb130"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f10e71b15a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f10e816ae20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f10e71af020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f10e8169730"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f10e71ae020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f10e71ae800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f10e71af800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e7175310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f10e8111020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e7173800"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f10e8110d30"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e7175c40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f10e8111950"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7174400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e81100e0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f10e7173060"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f10e8127850"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f10e8127850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f10e8121850"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f10e7171480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f10e81256a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f10e81226c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e812c710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8126dc0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e80c3d60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f10e80bc4b0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f10e80be7c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f10e80b7120"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f10e80c1840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f10e80ba020"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e80bd020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e80b78c0"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f10e80bde00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f10e80b6760"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f10e80c1270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f10e80bb950"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f10e80c2880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f10e80bb020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f10e711d2b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e94800"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7120020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e95760"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f10e711e1e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f10e8062a60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f10e8062a60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f10e80557d0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f10e7121310"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f10e7e93760"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f10e80557d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f10e7eba790"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f10e805a320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7ec8150"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e805e540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e8050020"/></to>
    </wire>
    <wire loc="35:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e8050020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e7f46080"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f10e7ec2640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7f17cf0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e7f111d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f10e8050a10"/></to>
    </wire>
    <wire loc="36:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f10e8050a10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e7f46890"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7eb9a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f10e804a060"/></to>
    </wire>
    <wire loc="37:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f10e804a060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e7f43bc0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7f43bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e70f8b80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e7f46080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e70fc020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e7f46890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e70fc830"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e70f5dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7fc1c70"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e7fc1c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7faf020"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e70ef190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7fb9020"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7fb9020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7faa2b0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e70ee3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f10e7fb8520"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7fb8520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f10e7fa86b0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f10e70ea780"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f10e7fb4a40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f10e7fb4a40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f10e7fa3230"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f10e7f0d490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f10e7ebda00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f10e7ea6320"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f10e805a320"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e7e6a2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f10e7e64920"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e66b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f10e7e5f5a0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e65400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e5fd40"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f10e7e642b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f10e7e5eb40"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f10e7e68650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f10e7e63d70"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f10e7e6ad30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f10e7e63440"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e7d2ec80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e7b216e0"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f10e7e4d940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f10e7e26630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7d29060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f10e7b193a0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f10e7e0d340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f10e7e401f0"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f10e7e0c110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f10e7e3b110"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f10e7e0cca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f10e7e3bca0"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f10e7e0b8d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f10e7e3a8d0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e7e0a780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e7e3f2e0"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f10e7e0f1a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7d29060"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7e042e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7e39470"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f10e7e1f760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f10e7d36e10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f10e7d36e10"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f10e8afecb0"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f10e7e1eb50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f10e7d32060"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f10e7d32060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e7d05850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7e17aa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7d32ce0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7d32ce0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7d06020"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f10e7e1c670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f10e7d31880"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f10e7d31880"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f10e8af4350"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f10e7e1b980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f10e7d30b10"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f10e7d30b10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f10e8b00670"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f10e7e11550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f10e7d2fe30"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f10e7d2fe30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f10e7d27a10"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f10e7e066b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f10e84cb130"/></to>
    </wire>
    <wire loc="112:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f10e7e0ed20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f10e7ac79a0"/></to>
    </wire>
    <wire loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f10e7d758b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f10e7b216e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f10e701a610"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7d06020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7cf8480"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f10e7b193a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f10e7ad2b60"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f10e7d183d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f10e8ae2350"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f10e7d17680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f10e8ae5e40"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f10e7d1b7f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f10e7c1c530"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f10e7c1c530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f10e7c00850"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f10e7cfcae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f10e7cf7020"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f10e7d04840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f10e7cf9e00"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e7d071f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e7cf97e0"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f10e7d05850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e7cf7d20"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f10e7cd9430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e7c2f210"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f10e7c2f210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f10e70499d0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7cd7130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7c2e7a0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7c2e7a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7047020"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f10e7cf5020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f10e7c8a3e0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f10e7c8a3e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f10e7c83350"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f10e7cd7920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f10e8b4e020"/></to>
    </wire>
    <wire loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f10e7cb6190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f10e7c7ae50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f10e8b4e020"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f10e7c7f390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f10e8afecb0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f10e7c7e650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f10e8afc020"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f10e7c7c800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f10e8afb350"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f10e7c7bb10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f10e8af9670"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e7c2e020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e7048850"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e7047910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e7c2d0d0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f10e7046120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f10e704ba30"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f10e7046c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7c14d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7c01020"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e7c25b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7c0ab90"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7c0f650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f10e7bfb5a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7c0f650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f10e7bf8ba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7c0f650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f10e7bf2120"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f10e7017a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7c25b20"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f10e7012db0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f10e7c0f650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e7b5e410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7c25b20"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7ad1e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e7af3cf0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f10e7ad60f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e7b15200"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7b15200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e7b0f020"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e7afc280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e7c25b20"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f10e79f74e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f10e79cfb70"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e7a66b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e7a019e0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e7a62800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e79fe400"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f10e79fae60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f10e79cf520"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f10e79f4940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f10e7a61300"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f10e79fed90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e79f5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f10e79fda50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e79f64c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f10e79f4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f10e76b11e0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f10e79f5020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f10e789ede0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f10e79f64c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f10e789e6c0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f10e789cc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f10e79f4020"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f10e79c7430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f10e79f4940"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f10e789a920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f10e79f4940"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f10e7891cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f10e79f4940"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f10e789b590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f10e79cc080"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f10e789be80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f10e79c9a40"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f10e79be410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f10e7896e10"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f10e79b9530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f10e786c150"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f10e786c150"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f10e7864020"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f10e7888d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f10e786c960"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f10e786c960"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f10e7863080"/></to>
    </wire>
    <wire loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f10e7968e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f10e799fd50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f10e796a400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f10e79630c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f10e7898020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f10e7898800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f10e7866d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f10e7864820"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f10e7864820"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f10e781bdd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f10e7863080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f10e781a5a0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f10e7864020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f10e781b630"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7862360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e778abb0"/></to>
    </wire>
    <wire loc="33:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e778abb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e76c2cd0"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7816cc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e7862360"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f10e7819610"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f10e77f8480"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f10e77f8480"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f10e77f0550"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f10e7819df0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f10e77f8d20"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f10e77f8d20"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f10e77f0e30"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f10e7818620"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f10e77f75f0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f10e77f75f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f10e77ef730"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f10e77f5dd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f10e77eb650"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f10e77f6b80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f10e77ec470"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f10e77f5540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f10e77ecd50"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e77eab30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e8b25020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f10e77e9980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f10e8b4e020"/></to>
    </wire>
    <wire loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f10e76bf0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e7785c50"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f10e7785c50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f10e76ce3c0"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e76cb660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e777fb30"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e777fb30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e776bb90"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7778dc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7763020"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f10e7776530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f10e7762850"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7771650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f10e775d5a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7771650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f10e7759ba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f10e7771650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f10e7754120"/></to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f10e76d5410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f10e777fb30"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="63:BaseStationP.nc" safe="">
      <documentation loc="596:ZCompression_new.h">
        <short>*</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f10e8041120"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f10e8b72410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f10e8b72410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f10e8b727b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f10e8b727b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f10e8b700d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.t1" loc="44(BaseStationC.t1):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f10e8ac15a0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f10e8ac1910" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f10e8ac1c80" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f10e8ab39f0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f10e8ab3d80" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f10e8aaf170" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f10e8aaf4c0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f10e8a1b0d0" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f10e8a1b460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f10e8a1b7f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f10e8a1bb40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f10e83ec210" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f10e83e2cc0" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f10e8041120" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f10e8041120"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f10e8041430" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f10e8038d30" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f10e8038d30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f10e8035060" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e7f3c430" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e7f3c430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e7f0b880" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e7f0b880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f10e7f0bbb0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e7ebbde0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e7ebbde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f10e7b6a290" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e7b6a290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f10e7b6a600" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f10e7b6ed60" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f10e7b6ed60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f10e7b55580" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e7b55580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f10e7b558a0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f10e7b11920" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f10e7b11920"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f10e7b0e120" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e7b0e120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f10e7af2600" loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f10e7af2600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f10e7af2dd0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f10e7af2dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f10e7af1220" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f10e7af1220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f10e7af1a00" loc="58:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f10e7af1a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f10e7af1dd0" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f10e7af0630" loc="60:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f10e7af0630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f10e8b28210" loc="58:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8b28210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b28590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f10e8b2ccb0" loc="57:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f10e8b2ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f10e8b2b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f10e8b25d50" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f10e8b25d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b24100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e8b27b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e8b27b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f10e8b25020" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e8b25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f10e8b253a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f10e8b25530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f10e8b256c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f10e8b25850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f10e8b259e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f10e8b1d7a0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f10e8b1d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b1db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e8b1d0c0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e8b1d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b1d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f10e8b1c020" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f10e8b1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f10e8b17110" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f10e8b17110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b17490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f10e8b1f9e0" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8b1f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b1fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f10e8b13cd0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f10e8b13cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b120a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f10e8b0dad0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f10e8b0dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b0de50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b13020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b13340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b13660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b137f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f10e8b14530" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8b14530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b148b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f10e8acccb0" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f10e8acccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8acb610"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8acb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8acb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8acbac0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8acbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8acbde0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aca020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f10e8ae84e0" loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f10e8ae84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae8860"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae89f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae8b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae8d10"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae71b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae7340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f10e8adb350" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f10e8adb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8adb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8adb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8adb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8adbb80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8adbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ada020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ada1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ada340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f10e8ad2cb0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f10e8ad2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad1550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad1870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f10e8ac5060" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f10e8ac5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ac53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ac5570"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ac5700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ac5890"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ac5a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ac5bb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ac5d40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ac4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f10e8b00670" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f10e8b00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b009f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b00b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b00d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8aff020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8aff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8aff340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f10e8ad4670" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f10e8ad4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad3020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad3340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f10e8afecb0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f10e8afecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8afd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8afd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8afd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8afd550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8afd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8afd870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8afda00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8afdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f10e8af1cb0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f10e8af1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af0550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af0870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f10e8ae5e40" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f10e8ae5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae41e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae4370"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae4500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae4690"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae4820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae49b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae4b40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f10e8ad8cb0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f10e8ad8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad7550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad7870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f10e8b06800" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f10e8b06800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b06b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b06d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b05020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b051b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b05340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b054d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b05660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b057f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f10e8af9670" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f10e8af9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af8020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af8340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f10e8aed670" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f10e8aed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8aed9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aedb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8aedd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8aec020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8aec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8aec340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f10e8ae1670" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f10e8ae1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae0020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae0340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f10e8ace670" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f10e8ace670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ace9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aceb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8aced10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8acd020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8acd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8acd340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8acd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8acd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f10e8ac8b20" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f10e8ac8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ac7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ac71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ac7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ac74d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ac7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ac77f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ac7980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ac7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f10e8adfcb0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f10e8adfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8add0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8add230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8add3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8add550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8add6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8add870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8adda00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8addb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f10e8b02060" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f10e8b02060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b023e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b02570"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b02700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b02890"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b02a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b02bb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b02d40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f10e8af5020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f10e8af5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af5850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af5b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f10e8aca4e0" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f10e8aca4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8aca860"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aca9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8acab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8acad10"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ac9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ac91b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ac9340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ac94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f10e8af3670" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f10e8af3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af2020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af2340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f10e8ae7800" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f10e8ae7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae7b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae7d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae61b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae64d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae6660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f10e8ada670" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f10e8ada670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ada9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8adab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8adad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad9020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad9340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f10e8ad0020" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f10e8ad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad0850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad0b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8acf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f10e8aff990" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f10e8aff990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8affd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8afe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8afe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8afe340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8afe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8afe660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8afe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8afe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f10e8afc020" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f10e8afc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8afc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8afc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8afc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8afc850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8afc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8afcb70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8afcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8afb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f10e8aef020" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f10e8aef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8aef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aef530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8aef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8aef850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8aef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8aefb70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aefd00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f10e8ae3060" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f10e8ae3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae33e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae3570"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae3700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae3890"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae3a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae3bb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae3d40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f10e8ad6020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f10e8ad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad6850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad6b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f10e8b05b20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f10e8b05b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b04020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b04340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b044d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b04660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b047f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b04980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b04b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f10e8af8990" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f10e8af8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af8e10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af7340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af7660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f10e8aec990" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f10e8aec990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8aecd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aeb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8aeb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8aeb340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8aeb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8aeb660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aeb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aeb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f10e8acd990" loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f10e8acd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8acdd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8acc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8acc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8acc340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8acc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8acc660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8acc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8acc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f10e8ae9020" loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f10e8ae9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae95a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae9730"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae98c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae9a50"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae9be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae9d70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae8020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f10e8adc020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f10e8adc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8adc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8adc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8adc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8adc850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8adc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8adcb70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8adcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8adb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f10e8ad3990" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f10e8ad3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad2340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad2660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f10e8ac7e40" loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f10e8ac7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ac61e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ac6370"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ac6500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ac6690"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ac6820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ac69b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ac6b40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ac6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f10e8b01350" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f10e8b01350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b016d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b01860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b019f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b01b80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b01d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b00020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b001b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f10e8af4350" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f10e8af4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af4b80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af3020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f10e8ad5350" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f10e8ad5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad5b80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad4020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f10e8af2990" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f10e8af2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af1340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af1660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f10e8ae6b20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f10e8ae6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae54d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae57f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae5980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f10e8ad9990" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f10e8ad9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ad9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ad8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ad81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ad8340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ad84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ad8660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ad87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ad8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f10e8acf350" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f10e8acf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8acf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8acf860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8acf9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8acfb80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8acfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ace020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ace1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ace340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f10e8b15550" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f10e8b15550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b158d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b15a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b15bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b15d80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b06020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b061b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b06340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f10e8afb350" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f10e8afb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8afb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8afb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8afb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8afbb80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8afbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af9020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f10e8aee350" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f10e8aee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8aee6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aee860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8aee9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8aeeb80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8aeed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8aed020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f10e8ae2350" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f10e8ae2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ae2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ae29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ae2b80"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ae2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ae1020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ae11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ae1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f10e8ac9800" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f10e8ac9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ac9b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8ac9d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8ac8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8ac81b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8ac8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8ac84d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8ac8660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8ac87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f10e8ae0990" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f10e8ae0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8ae0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8adf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8adf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8adf340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8adf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8adf660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8adf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8adf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f10e8aebcb0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f10e8aebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8aea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8aea230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8aea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8aea550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8aea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8aea870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8aeaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8aeab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f10e8b04e40" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f10e8b04e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8b031e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8b03370"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8b03500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8b03690"/>
        <function-ref name="get" scoped="" ref="0x7f10e8b03820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8b039b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8b03b40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8b03cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f10e8af7cb0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f10e8af7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8af60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8af6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8af63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8af6550"/>
        <function-ref name="get" scoped="" ref="0x7f10e8af66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8af6870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8af6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8af6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f10e8a78a80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f10e8a78a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a78e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a77340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a77660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f10e8a73020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f10e8a73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a73530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a736c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a73850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a739e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a73b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a73d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f10e8a7a6b0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f10e8a7a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a7aa30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a7abc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a7ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a79020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a79340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f10e8a77c10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f10e8a77c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a76020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a761b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a76340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a764d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a76660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a767f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a76980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a76b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f10e8a722b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f10e8a722b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a72630"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a727c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a72950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a72ae0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a72c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a72e00"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a71020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f10e8a798f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f10e8a798f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a79c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a79e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a78020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a781b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a78340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a784d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a78660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a787f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f10e8a76da0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f10e8a76da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a74180"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a74310"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a744a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a74630"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a747c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a74950"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a74ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a74c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f10e8a71440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f10e8a71440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a717c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a71950"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a71ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a71c70"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a71e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a70020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a701b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e764d9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e764d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e764dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e764c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e764c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e764c340"/>
        <function-ref name="get" scoped="" ref="0x7f10e764c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e764c660"/>
        <function-ref name="set" scoped="" ref="0x7f10e764c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e764c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e764ae20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e764ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e76491c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7649350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e76494e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7649670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7649800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7649990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7649b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7649cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e76460a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e76460a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7646420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e76465b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7646740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e76468d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7646a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7646bf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7646d80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7645020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e76433f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e76433f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7643770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7643900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7643a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7643c20"/>
        <function-ref name="get" scoped="" ref="0x7f10e7643db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7641020"/>
        <function-ref name="set" scoped="" ref="0x7f10e76411b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7641340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e763f6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e763f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e763fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e763fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e763fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e763e020"/>
        <function-ref name="get" scoped="" ref="0x7f10e763e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e763e340"/>
        <function-ref name="set" scoped="" ref="0x7f10e763e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e763e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e763c9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e763c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e763cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e763b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e763b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e763b340"/>
        <function-ref name="get" scoped="" ref="0x7f10e763b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e763b660"/>
        <function-ref name="set" scoped="" ref="0x7f10e763b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e763b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7639e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7639e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e76381c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7638350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e76384e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7638670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7638800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7638990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7638b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7638cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e76350a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e76350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7635420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e76355b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7635740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e76358d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7635a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7635bf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7635d80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7634020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f10e8a68da0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f10e8a68da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a67180"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a67310"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a674a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a67630"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a677c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a67950"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a67ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a67c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f10e8a64440" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f10e8a64440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a647c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a64950"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a64ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a64c70"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a64e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a63020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a63340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f10e8a6ba20" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f10e8a6ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a6bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a6a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a6a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a6a340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a6a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a6a660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a6a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a6a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f10e8a66020" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f10e8a66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a663a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a66530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a666c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a66850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a669e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a66b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a66d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f10e8a635d0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f10e8a635d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a63950"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a63ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a63c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a63e00"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a621b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a62340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f10e8a6ac10" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f10e8a6ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a68020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a681b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a68340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a684d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a68660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a687f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a68980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a68b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f10e8a652b0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f10e8a652b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a65630"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a657c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a65950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a65ae0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a65c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a65e00"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a64020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f10e8a62760" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f10e8a62760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a62ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a62c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a62e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a61020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a61340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75e2c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75e1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75e13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75e1550"/>
        <function-ref name="get" scoped="" ref="0x7f10e75e16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75e1870"/>
        <function-ref name="set" scoped="" ref="0x7f10e75e1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75e1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75dfe20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75dfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75de1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75de350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75de4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75de670"/>
        <function-ref name="get" scoped="" ref="0x7f10e75de800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75de990"/>
        <function-ref name="set" scoped="" ref="0x7f10e75deb20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75decb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75db0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75db420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75db5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75db740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75db8d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e75dba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75dbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e75dbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75d83f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75d8770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75d8900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75d8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75d8c20"/>
        <function-ref name="get" scoped="" ref="0x7f10e75d8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75d6020"/>
        <function-ref name="set" scoped="" ref="0x7f10e75d61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75d46d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75d46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75d4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75d4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75d3020"/>
        <function-ref name="get" scoped="" ref="0x7f10e75d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75d3340"/>
        <function-ref name="set" scoped="" ref="0x7f10e75d34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75d19b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75d19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75d1d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75d0340"/>
        <function-ref name="get" scoped="" ref="0x7f10e75d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75d0660"/>
        <function-ref name="set" scoped="" ref="0x7f10e75d07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75d0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75cee20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75cee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75cd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75cd350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75cd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75cd670"/>
        <function-ref name="get" scoped="" ref="0x7f10e75cd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75cd990"/>
        <function-ref name="set" scoped="" ref="0x7f10e75cdb20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75cdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75ca0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75ca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75ca420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75ca5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75ca740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75ca8d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e75caa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e75cabf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e75cad80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e75c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f10e8a58020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f10e8a58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a58530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a586c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a58850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a589e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a58b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a58d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f10e8a555d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f10e8a555d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a55950"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a55ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a55c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a55e00"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a54020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a541b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a54340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f10e8a5bd30" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f10e8a5bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a5a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a5a270"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a5a400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a5a590"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a5a720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a5a8b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a5aa40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a5abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f10e8a572b0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f10e8a572b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a57630"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a577c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a57950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a57ae0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a57c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a57e00"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a56020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f10e8a54760" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f10e8a54760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a54ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a54c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a54e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a53020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a53340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a534d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f10e8a5ae60" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f10e8a5ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a59210"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a593a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a59530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a596c0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a59850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a599e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a59b70"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a59d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f10e8a56440" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f10e8a56440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a567c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a56950"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a56ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a56c70"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a56e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a55020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a551b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f10e8a538f0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f10e8a538f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a53c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a53e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a52020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a521b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a52340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a524d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a52660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7577c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7577c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7576230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7576550"/>
        <function-ref name="get" scoped="" ref="0x7f10e75766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7576870"/>
        <function-ref name="set" scoped="" ref="0x7f10e7576a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7576b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7574e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7574e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75731c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7573350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75734e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7573670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7573800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7573990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7573b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7573cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75700a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7570420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75705b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7570740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75708d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7570a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7570bf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7570d80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e756f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e756d3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e756d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e756d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e756d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e756da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e756dc20"/>
        <function-ref name="get" scoped="" ref="0x7f10e756ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e756c020"/>
        <function-ref name="set" scoped="" ref="0x7f10e756c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e756c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e756a6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e756a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e756aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e756abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e756ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7568020"/>
        <function-ref name="get" scoped="" ref="0x7f10e75681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7568340"/>
        <function-ref name="set" scoped="" ref="0x7f10e75684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7568660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75669b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75669b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7566d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7565020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7565340"/>
        <function-ref name="get" scoped="" ref="0x7f10e75654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7565660"/>
        <function-ref name="set" scoped="" ref="0x7f10e75657f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7565980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7563e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7563e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75621c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7562350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75624e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7562670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7562800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7562990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7562b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7562cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e755f0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e755f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e755f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e755f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e755f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e755f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e755fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e755fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e755fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e755e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f10e8a49440" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f10e8a49440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a497c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a49950"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a49ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a49c70"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a49e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a48020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a481b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f10e8a468f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f10e8a468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a46c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a46e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a451b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a45340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a454d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a45660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f10e8a4b020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f10e8a4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a4b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a4b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a4b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a4b850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a4b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a4bb70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a4bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f10e8a485d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f10e8a485d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a48950"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a48ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a48c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a48e00"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a47020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a471b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a47340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f10e8a45a80" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f10e8a45a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a45e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a43020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a43340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a43660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a437f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a43980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f10e8a4a2b0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f10e8a4a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a4a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a4a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a4a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a4aae0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a4ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a4ae00"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a49020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f10e8a47760" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f10e8a47760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a47ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a47c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a47e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a46020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a46340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a464d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a46660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f10e8a43c10" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f10e8a43c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a42020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a42340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a424d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a42660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a427f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a42980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a42b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e750cc90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e750cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e750b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e750b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e750b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e750b550"/>
        <function-ref name="get" scoped="" ref="0x7f10e750b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e750b870"/>
        <function-ref name="set" scoped="" ref="0x7f10e750ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e750bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7509e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7509e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e75081c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7508350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e75084e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7508670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7508800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7508990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7508b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7508cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75050a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7505420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e75055b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7505740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e75058d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7505a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7505bf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7505d80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7504020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e75023f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e75023f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7502770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7502900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7502a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7502c20"/>
        <function-ref name="get" scoped="" ref="0x7f10e7502db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7501020"/>
        <function-ref name="set" scoped="" ref="0x7f10e75011b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7501340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74ff6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74ffa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e74ffbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74ffd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e74fd020"/>
        <function-ref name="get" scoped="" ref="0x7f10e74fd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e74fd340"/>
        <function-ref name="set" scoped="" ref="0x7f10e74fd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e74fd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74fb9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74fb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74fbd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e74fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e74fa340"/>
        <function-ref name="get" scoped="" ref="0x7f10e74fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e74fa660"/>
        <function-ref name="set" scoped="" ref="0x7f10e74fa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e74fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74f8e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74f8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74f71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e74f7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74f74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e74f7670"/>
        <function-ref name="get" scoped="" ref="0x7f10e74f7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e74f7990"/>
        <function-ref name="set" scoped="" ref="0x7f10e74f7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e74f7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74f40a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74f40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74f4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e74f45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74f4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e74f48d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e74f4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e74f4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e74f4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e74f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f10e8a3a760" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f10e8a3a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a3aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a3ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a3ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a39020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a39340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a394d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a39660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f10e8a36c10" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f10e8a36c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a35020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a351b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a35340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a354d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a35660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a357f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a35980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a35b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f10e8a3c3f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f10e8a3c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a3c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a3c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a3ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a3cc20"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a3cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a3b020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a3b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f10e8a398f0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f10e8a398f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a39c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a39e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a37020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a371b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a37340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a374d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a37660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f10e8a35da0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f10e8a35da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a34180"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a34310"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a344a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a34630"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a347c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a34950"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a34ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a34c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f10e8a3b5d0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f10e8a3b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a3b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a3bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a3bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a3be00"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a3a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a3a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a3a340"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f10e8a37a80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f10e8a37a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a37e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a36020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a36340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a36660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a367f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a36980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f10e8a33020" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f10e8a33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a33530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a336c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a33850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a339e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a33b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a33d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74a1c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74a1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74a00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e74a0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74a03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e74a0550"/>
        <function-ref name="get" scoped="" ref="0x7f10e74a06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e74a0870"/>
        <function-ref name="set" scoped="" ref="0x7f10e74a0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e74a0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e749ee20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e749ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e749d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e749d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e749d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e749d670"/>
        <function-ref name="get" scoped="" ref="0x7f10e749d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e749d990"/>
        <function-ref name="set" scoped="" ref="0x7f10e749db20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e749dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e749a0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e749a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e749a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e749a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e749a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e749a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e749aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e749abf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e749ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7499020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74973f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7497770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7497900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7497a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7497c20"/>
        <function-ref name="get" scoped="" ref="0x7f10e7497db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7496020"/>
        <function-ref name="set" scoped="" ref="0x7f10e74961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7496340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74946d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74946d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7494a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7494be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7494d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7493020"/>
        <function-ref name="get" scoped="" ref="0x7f10e74931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7493340"/>
        <function-ref name="set" scoped="" ref="0x7f10e74934d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7493660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74919b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74919b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7491d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e748f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e748f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e748f340"/>
        <function-ref name="get" scoped="" ref="0x7f10e748f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e748f660"/>
        <function-ref name="set" scoped="" ref="0x7f10e748f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e748f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e748de20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e748de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e748c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e748c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e748c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e748c670"/>
        <function-ref name="get" scoped="" ref="0x7f10e748c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e748c990"/>
        <function-ref name="set" scoped="" ref="0x7f10e748cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e748ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74890a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7489420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e74895b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7489740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e74898d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7489a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7489bf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7489d80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7488020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f10e8a2aa80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f10e8a2aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a2ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a29020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a29340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a29660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a297f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a29980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f10e8a26020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f10e8a26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a263a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a26530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a266c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a26850"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a269e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a26b70"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a26d00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f10e8a2d7a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f10e8a2d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a2db20"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a2dcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a2de40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a2b020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a2b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a2b340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a2b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a2b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f10e8a29c10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f10e8a29c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a28020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a281b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a28340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a284d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a28660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a287f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a28980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a28b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f10e8a252b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f10e8a252b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a25630"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a257c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a25950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a25ae0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a25c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a25e00"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a24020"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f10e8a2b8f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f10e8a2b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a2bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a2be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a2a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a2a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a2a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a2a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a2a660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f10e8a28da0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f10e8a28da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a27180"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a27310"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a274a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a27630"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a277c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a27950"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a27ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a27c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f10e8a24440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f10e8a24440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a247c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a24950"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a24ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a24c70"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a24e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a23020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a231b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a23340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7434c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7434c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7433230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7433550"/>
        <function-ref name="get" scoped="" ref="0x7f10e74336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7433870"/>
        <function-ref name="set" scoped="" ref="0x7f10e7433a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7433b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7431e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7431e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e74301c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7430350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74304e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7430670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7430800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7430990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7430b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7430cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e742d0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e742d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e742d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e742d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e742d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e742d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e742da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e742dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e742dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e742c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e742a3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e742a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e742a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e742a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e742aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e742ac20"/>
        <function-ref name="get" scoped="" ref="0x7f10e742adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7429020"/>
        <function-ref name="set" scoped="" ref="0x7f10e74291b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7429340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74276d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7427a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7427be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7427d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7426020"/>
        <function-ref name="get" scoped="" ref="0x7f10e74261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7426340"/>
        <function-ref name="set" scoped="" ref="0x7f10e74264d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7426660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e74249b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e74249b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7424d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7422020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e74221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7422340"/>
        <function-ref name="get" scoped="" ref="0x7f10e74224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7422660"/>
        <function-ref name="set" scoped="" ref="0x7f10e74227f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7422980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e7420e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e7420e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e741f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e741f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e741f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e741f670"/>
        <function-ref name="get" scoped="" ref="0x7f10e741f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e741f990"/>
        <function-ref name="set" scoped="" ref="0x7f10e741fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e741fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e741c0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e741c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e741c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e741c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e741c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e741c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e741ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e741cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e741cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f10e741b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e8a1ca20" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e8a1ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a1cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a06020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a06340"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a06660"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a067f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a06980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e8a016d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e8a016d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8a01a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8a01be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8a01d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8a00020"/>
        <function-ref name="get" scoped="" ref="0x7f10e8a001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8a00340"/>
        <function-ref name="set" scoped="" ref="0x7f10e8a004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8a00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89fb160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89fb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89fb4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89fb670"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89fb800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89fb990"/>
        <function-ref name="get" scoped="" ref="0x7f10e89fbb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89fbcb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e89fbe40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89f7c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89f7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89f6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89f63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89f6550"/>
        <function-ref name="get" scoped="" ref="0x7f10e89f66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89f6870"/>
        <function-ref name="set" scoped="" ref="0x7f10e89f6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89f6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89f16d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89f16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89f1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89f1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89f1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89f0020"/>
        <function-ref name="get" scoped="" ref="0x7f10e89f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89f0340"/>
        <function-ref name="set" scoped="" ref="0x7f10e89f04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89eb160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89eb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89eb4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89eb670"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89eb800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89eb990"/>
        <function-ref name="get" scoped="" ref="0x7f10e89ebb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89ebcb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e89ebe40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89e7c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89e7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89e60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89e6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89e63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89e6550"/>
        <function-ref name="get" scoped="" ref="0x7f10e89e66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89e6870"/>
        <function-ref name="set" scoped="" ref="0x7f10e89e6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89e6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89e16d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89e16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89e1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89e1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89e1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89e0020"/>
        <function-ref name="get" scoped="" ref="0x7f10e89e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89e0340"/>
        <function-ref name="set" scoped="" ref="0x7f10e89e04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89db160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89db160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89db4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89db670"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89db800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89db990"/>
        <function-ref name="get" scoped="" ref="0x7f10e89dbb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89dbcb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e89dbe40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89d7c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89d7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89d6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89d63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89d6550"/>
        <function-ref name="get" scoped="" ref="0x7f10e89d66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89d6870"/>
        <function-ref name="set" scoped="" ref="0x7f10e89d6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89d6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89d16d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89d16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89d1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89d1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89d0020"/>
        <function-ref name="get" scoped="" ref="0x7f10e89d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89d0340"/>
        <function-ref name="set" scoped="" ref="0x7f10e89d04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89cb160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89cb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89cb4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89cb670"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89cb800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89cb990"/>
        <function-ref name="get" scoped="" ref="0x7f10e89cbb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89cbcb0"/>
        <function-ref name="set" scoped="" ref="0x7f10e89cbe40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89c7c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89c7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89c60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89c6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89c63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89c6550"/>
        <function-ref name="get" scoped="" ref="0x7f10e89c66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89c6870"/>
        <function-ref name="set" scoped="" ref="0x7f10e89c6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89c6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f10e89c16d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f10e89c16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e89c1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e89c1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e89c1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e89c0020"/>
        <function-ref name="get" scoped="" ref="0x7f10e89c01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e89c0340"/>
        <function-ref name="set" scoped="" ref="0x7f10e89c04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e89c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e8983020" loc="61:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e8983020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e89833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f10e8983690" loc="62:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e8983690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f10e8983a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f10e8983ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f10e8983d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f10e8982020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f10e89821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f10e8962720" loc="60:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e8962720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8962aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f10e8b29dd0" loc="57:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f10e8b29dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f10e8964180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f10e8962020" loc="59:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f10e8962020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e89623a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f10e8964470" loc="58:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f10e8964470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e89647f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f10e8964980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f10e8964b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f10e8c1ee10" loc="48:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8c1ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e8c291c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e8c29350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f10e8c6f020" loc="47:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f10e8c6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8c6f3a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f10e8c6f530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f10e8c6f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f10e8b6c850" loc="56:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f10e8b6c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e8b6cbd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e8b6cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f10e8b6bde0" loc="57:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f10e8b6bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f10e8b6a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f10e8b6d8a0" loc="55:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f10e8b6d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8b6dc20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f10e8b6ddb0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f10e8b6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f10e8b4b690" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f10e8b4b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f10e8b4ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f10e8c27a30" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f10e8c27a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f10e8c27db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f10e8b4e020" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f10e8b4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f10e8b4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f10e87af1c0" loc="65:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f10e87af1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f10e87af540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f10e87aaa80" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f10e87aaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e87aae00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e87ae020"/>
        <function-ref name="start" scoped="" ref="0x7f10e87ae1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e87ae340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f10e8721020" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f10e8721020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e87213a0"/>
        <function-ref name="source" scoped="" ref="0x7f10e8721530"/>
        <function-ref name="address" scoped="" ref="0x7f10e87216c0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e8721850"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e87219e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e8721b70"/>
        <function-ref name="type" scoped="" ref="0x7f10e8721d00"/>
        <function-ref name="setType" scoped="" ref="0x7f10e871e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e871e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e871e340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e871e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f10e87ae6d0" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f10e87ae6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e87aea50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e87aebe0"/>
        <function-ref name="start" scoped="" ref="0x7f10e87aed70"/>
        <function-ref name="stop" scoped="" ref="0x7f10e87ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f10e8724170" loc="76:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e8724170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e87244f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8724680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e8724810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e87249a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8724b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f10e871fe40" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e871fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e87251e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f10e86f25d0" loc="144:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7f10e86f25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e86f2950"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e86f2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="time" ref="0x7f10e871d250" loc="81:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="time" scoped="" ref="0x7f10e871d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e87106e0"/>
        <function-ref name="fired" scoped="" ref="0x7f10e871cc90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e8712a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e87125f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e870f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e8710b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e8712170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e871de40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e87100d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e871c340"/>
        <function-ref name="stop" scoped="" ref="0x7f10e871c810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f10e8737250" loc="70:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7f10e8737250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e87375d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8737760"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e87378f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8737a80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8737c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f10e8738020" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e8738020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e87383a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e8738530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e87386c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8738850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e87389e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f10e87020d0" loc="82:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e87020d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e8702550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e87026e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e8702870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e8702a00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e8702b90"/>
        <function-ref name="get" scoped="" ref="0x7f10e8702d20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e870e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e870e660"/>
        <function-ref name="set" scoped="" ref="0x7f10e870e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e870e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e870e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f10e87a9020" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7f10e87a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e87a93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e87a9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e87a96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e87a9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e87a99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f10e87262c0" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7f10e87262c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e8726640"/>
        <function-ref name="source" scoped="" ref="0x7f10e87267d0"/>
        <function-ref name="address" scoped="" ref="0x7f10e8726960"/>
        <function-ref name="destination" scoped="" ref="0x7f10e8726af0"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e8726c80"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e8726e10"/>
        <function-ref name="type" scoped="" ref="0x7f10e8740020"/>
        <function-ref name="setType" scoped="" ref="0x7f10e87401b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e8740340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e87404d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e8740660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f10e8725a70" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7f10e8725a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8725df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f10e8679bd0" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e8679bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e8676020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e86761b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e8676340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e86764d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e8676660"/>
        <function-ref name="get" scoped="" ref="0x7f10e86767f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e8676980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e8675020"/>
        <function-ref name="set" scoped="" ref="0x7f10e8676b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e8676ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e8676e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f10e8671d20" loc="50:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f10e8671d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e86700e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8670270"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e8670400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8670590"/>
        <function-ref name="get" scoped="" ref="0x7f10e8670720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e86708b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8670a40"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8670bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e8672020" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e8672020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e86723a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f10e866f020" loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f10e866f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e866f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e866f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e866f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e866f850"/>
        <function-ref name="get" scoped="" ref="0x7f10e866f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e866fb70"/>
        <function-ref name="set" scoped="" ref="0x7f10e866fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e866e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f10e8672620" loc="47:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e8672620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e86729a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e8672b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e8672cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e8672e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e8671020"/>
        <function-ref name="get" scoped="" ref="0x7f10e86711b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e8671340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e8671980"/>
        <function-ref name="set" scoped="" ref="0x7f10e86714d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e8671660"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e86717f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f10e866e340" loc="52:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f10e866e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e866e6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e866e850"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e866e9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e866eb70"/>
        <function-ref name="get" scoped="" ref="0x7f10e866ed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e866d020"/>
        <function-ref name="set" scoped="" ref="0x7f10e866d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e866d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f10e86739e0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f10e86739e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e8673d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8651020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e86511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8651340"/>
        <function-ref name="get" scoped="" ref="0x7f10e86514d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8651660"/>
        <function-ref name="set" scoped="" ref="0x7f10e86517f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8651980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f10e8651ce0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f10e8651ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e86500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e8650230"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e86503c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e8650550"/>
        <function-ref name="get" scoped="" ref="0x7f10e86506e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e8650870"/>
        <function-ref name="set" scoped="" ref="0x7f10e8650a00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e8650b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f10e864e2e0" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e864e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e864e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f10e864f020" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f10e864f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e864f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e864f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e864f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e864f850"/>
        <function-ref name="get" scoped="" ref="0x7f10e864f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e864fb70"/>
        <function-ref name="set" scoped="" ref="0x7f10e864fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f10e864e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e8649bd0" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e8649bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e8646020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e86461b0"/>
        <function-ref name="start" scoped="" ref="0x7f10e8646340"/>
        <function-ref name="stop" scoped="" ref="0x7f10e86464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f10e86412e0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f10e86412e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e8641660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e86418f0" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e86418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e8641c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8641e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e8640020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e86401b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8640340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e8646ca0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e8646ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e86450a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e8645230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e86453c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8645550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e86456e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f10e8644c00" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f10e8644c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8642020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f10e862f5b0" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e862f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f10e862f930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f10e862fac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f10e862fc50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f10e862fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e8644020" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e8644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e86443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f10e86379f0" loc="51:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e86379f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e8637d70"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e863d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e863d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f10e8629880" loc="53:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f10e8629880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f10e8629c00"/>
        <function-ref name="setRetries" scoped="" ref="0x7f10e8629d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7f10e8636020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f10e86361b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f10e8636340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e86405f0" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e86405f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e8640970"/>
        <function-ref name="source" scoped="" ref="0x7f10e8640b00"/>
        <function-ref name="address" scoped="" ref="0x7f10e8640c90"/>
        <function-ref name="destination" scoped="" ref="0x7f10e8640e20"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e863e020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e863e1b0"/>
        <function-ref name="type" scoped="" ref="0x7f10e863e340"/>
        <function-ref name="setType" scoped="" ref="0x7f10e863e4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e863e660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e863e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e863e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f10e8625650" loc="54:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f10e8625650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f10e86259d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e8625b60"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e8625cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f10e861b7c0" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f10e861b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e8628d50"/>
        <function-ref name="clear" scoped="" ref="0x7f10e86234c0"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e8628620"/>
        <function-ref name="set" scoped="" ref="0x7f10e8623bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f10e861a880" loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e861a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e8618020"/>
        <function-ref name="clear" scoped="" ref="0x7f10e8618750"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e86197c0"/>
        <function-ref name="set" scoped="" ref="0x7f10e8618e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e8613140" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e8613140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e86134c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e8613650"/>
        <function-ref name="start" scoped="" ref="0x7f10e86137e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e8613970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f10e85fc1c0" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e85fc1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85fb910"/>
        <function-ref name="get" scoped="" ref="0x7f10e85fb3c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e85fcdf0"/>
        <function-ref name="set" scoped="" ref="0x7f10e85fbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f10e85ef020" loc="71:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e85ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e85ee5a0"/>
        <function-ref name="clear" scoped="" ref="0x7f10e85eecd0"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e85efe30"/>
        <function-ref name="set" scoped="" ref="0x7f10e85ed460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f10e8610bb0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f10e8610bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e860f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e860db40" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e860db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e860c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e860c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e860c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e860c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e860c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e86121d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e86121d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8612550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e86126e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8612870"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8612a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8612b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f10e8610020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f10e8610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e86103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f10e8600c90" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e8600c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85fe3c0"/>
        <function-ref name="get" scoped="" ref="0x7f10e85ffe30"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e85ff8e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e85fe910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f10e860a9c0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e860a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f10e860ad40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f10e8609020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f10e86091b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f10e8609340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e86113f0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e86113f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8611770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f10e85f7e60" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e85f7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e85f23f0"/>
        <function-ref name="clear" scoped="" ref="0x7f10e85f2b20"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e85f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f10e85f12a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f10e85f4960" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e85f4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e85f75e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f10e8601630" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e8601630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e8607e70"/>
        <function-ref name="get" scoped="" ref="0x7f10e8607920"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e86073d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e86003f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f10e860a020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e860a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e860a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e860a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e860a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f10e860f8f0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e860f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e860fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f10e8609600" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f10e8609600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f10e8609980"/>
        <function-ref name="setRetries" scoped="" ref="0x7f10e8609b10"/>
        <function-ref name="getRetries" scoped="" ref="0x7f10e8609ca0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f10e8609e30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f10e8608020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e860c910" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e860c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e860cc90"/>
        <function-ref name="source" scoped="" ref="0x7f10e860ce20"/>
        <function-ref name="address" scoped="" ref="0x7f10e860b020"/>
        <function-ref name="destination" scoped="" ref="0x7f10e860b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e860b340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e860b4d0"/>
        <function-ref name="type" scoped="" ref="0x7f10e860b660"/>
        <function-ref name="setType" scoped="" ref="0x7f10e860b7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e860b980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e860bb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e860bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f10e86082f0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f10e86082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f10e8608770"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e8608900"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e8608a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f10e85f6c70" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e85f6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f10e85f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f10e860d530" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e860d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e860d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e85eb600" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e85eb600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e85eb980"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e85ebb10"/>
        <function-ref name="start" scoped="" ref="0x7f10e85ebca0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e85ebe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f10e85bfc40" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e85bfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85bd3c0"/>
        <function-ref name="get" scoped="" ref="0x7f10e85bedf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e85be8a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e85bd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f10e85df8c0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f10e85df8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e85dfc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f10e85d2e50" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f10e85d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e85d7310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e85d74a0"/>
        <function-ref name="request" scoped="" ref="0x7f10e85d7630"/>
        <function-ref name="granted" scoped="" ref="0x7f10e85d77c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e85d7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f10e85e5020" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f10e85e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e85e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e85e8640" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e85e8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e85e89c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e85e8b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e85e8ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e85e8e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e85e7030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f10e85e6430" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f10e85e6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e85e67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f10e85d6080" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e85d6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f10e85d6400"/>
        <function-ref name="address" scoped="" ref="0x7f10e85d6590"/>
        <function-ref name="destination" scoped="" ref="0x7f10e85d6720"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e85d68b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e85d6a40"/>
        <function-ref name="pan" scoped="" ref="0x7f10e85d6bd0"/>
        <function-ref name="setPan" scoped="" ref="0x7f10e85d6d60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e85d1020"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e85d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f10e85d1570" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f10e85d1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85d18f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e85d1a80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e85d1c10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e85d1da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e85c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f10e85c2730" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e85c2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85c1e70"/>
        <function-ref name="get" scoped="" ref="0x7f10e85c1920"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e85c13d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e85bf3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f10e85c8cf0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e85c8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f10e85c70a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f10e85c7230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f10e85c73c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f10e85c7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f10e85e1880" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f10e85e1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85e1c00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e85e1d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e85e0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e85e01b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e85e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e85e7810" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e85e7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e85e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f10e85bad80" loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e85bad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e85b8750"/>
        <function-ref name="clear" scoped="" ref="0x7f10e85b8e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e85b8020"/>
        <function-ref name="set" scoped="" ref="0x7f10e85b65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f10e85bb880" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e85bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e85ba500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f10e85c5200" loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e85c5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e85c4910"/>
        <function-ref name="get" scoped="" ref="0x7f10e85c43c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e85c5e30"/>
        <function-ref name="set" scoped="" ref="0x7f10e85c4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f10e85c8350" loc="68:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e85c8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e85c86d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e85c8860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e85c89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f10e85d8420" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f10e85d8420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e85d87a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e85d8930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e85d8ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e85d8c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e85d8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f10e85e5c70" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e85e5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e85e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f10e85c7810" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f10e85c7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f10e85c7b90"/>
        <function-ref name="setRetries" scoped="" ref="0x7f10e85c7d20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f10e85c6020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f10e85c61b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f10e85c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f10e85c6610" loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f10e85c6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f10e85c6990"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e85c6b20"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e85c6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e85e2020" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e85e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e85e23a0"/>
        <function-ref name="source" scoped="" ref="0x7f10e85e2530"/>
        <function-ref name="address" scoped="" ref="0x7f10e85e26c0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e85e2850"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e85e29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e85e2b70"/>
        <function-ref name="type" scoped="" ref="0x7f10e85e2d00"/>
        <function-ref name="setType" scoped="" ref="0x7f10e85e1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e85e11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e85e1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e85e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f10e85b5270" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e85b5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e85b4800"/>
        <function-ref name="clear" scoped="" ref="0x7f10e85b2020"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e85b40d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e85b2750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f10e85df190" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f10e85df190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e85df510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f10e85bb020" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e85bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f10e85bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f10e85e48c0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e85e48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e85e4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f10e8582860" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f10e8582860"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f10e8582be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f10e85979f0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f10e85979f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f10e8597d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f10e8584b70" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f10e8584b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e8591020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f10e85911b0"/>
        <function-ref name="source" scoped="" ref="0x7f10e8591340"/>
        <function-ref name="destination" scoped="" ref="0x7f10e85914d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e8591660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e85917f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e8591980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f10e858c5d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f10e858c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f10e858c950"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f10e858cae0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f10e858cc70"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f10e858ce00"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f10e8595020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f10e8562340" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e8562340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e85626c0"/>
        <function-ref name="wait" scoped="" ref="0x7f10e8562850"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e85629e0"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e8562b70"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e8562d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f10e855b960" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f10e855b960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e855bce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e855be70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8561030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e85611c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e8561350"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e85614e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f10e8561ab0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e8561ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e855a170"/>
        <function-ref name="clear" scoped="" ref="0x7f10e855a8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e8560a00"/>
        <function-ref name="set" scoped="" ref="0x7f10e8558020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f10e85a81c0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f10e85a81c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e85a8540"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e85a86d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e85a8860"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f10e85a89f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f10e85a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f10e85983c0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f10e85983c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f10e8598740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f10e859f380" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f10e859f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f10e859f700"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f10e859f890"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f10e859fa20"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f10e859fbb0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f10e859fd40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f10e85ad020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f10e85ad1b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f10e85ad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f10e8568470" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8568470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f10e85687f0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f10e8568980"/>
        <function-ref name="setFCF" scoped="" ref="0x7f10e8568b10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f10e8568ca0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f10e8568e30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f10e8583020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f10e85831b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f10e8583340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f10e85834d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f10e8583660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f10e85837f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f10e8583980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f10e8583b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f10e8583da0"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e8581020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f10e85811b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f10e8581340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f10e85814d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f10e8581660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e85817f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f10e8581980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f10e8581b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f10e8581ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f10e8581e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f10e8567020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f10e859a730" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f10e859a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f10e859aab0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f10e859ac40"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f10e859add0"/>
        <function-ref name="getSender" scoped="" ref="0x7f10e85a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f10e8599020" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f10e8599020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f10e85993a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f10e8599530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f10e85996c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f10e8599850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f10e84fe6b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e84fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e84fea50"/>
        <function-ref name="wait" scoped="" ref="0x7f10e84febe0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e84fed70"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e84c2020"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e84c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f10e84c2820" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e84c2820"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f10e8765850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e84be090"/>
        <function-ref name="fired" scoped="" ref="0x7f10e84c0090"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e84c0a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e84c0550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e84be550"/>
        <function-ref name="start" scoped="" ref="0x7f10e84c16a0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e84c1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f10e732d8a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e732d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e732dc40"/>
        <function-ref name="wait" scoped="" ref="0x7f10e732ddd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e732c020"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e732c1b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e732c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f10e732c830" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e732c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f10e8765850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7328090"/>
        <function-ref name="fired" scoped="" ref="0x7f10e732a090"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e732aa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e732a550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e7328550"/>
        <function-ref name="start" scoped="" ref="0x7f10e732b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e732bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f10e7328940" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f10e7328940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f10e7328cc0"/>
        <function-ref name="suspend" scoped="" ref="0x7f10e7328e50"/>
        <function-ref name="resume" scoped="" ref="0x7f10e7327020"/>
        <function-ref name="run" scoped="" ref="0x7f10e73271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tasklet" ref="0x7f10e84ca740" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tasklet" scoped="" ref="0x7f10e84ca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e84caac0"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e84cac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f10e84cb130" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f10e84cb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f10e84cb4b0"/>
        <function-ref name="suspend" scoped="" ref="0x7f10e84cb640"/>
        <function-ref name="resume" scoped="" ref="0x7f10e84cb7d0"/>
        <function-ref name="run" scoped="" ref="0x7f10e84cb960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e840a8f0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e840a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e840ac70"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e840ae00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8409020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e84092b0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e84092b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8409630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f10e840c420" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f10e840c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e840c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e84108b0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e84108b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e8410c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8410dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e840f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e840f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e840f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e840f6c0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e840f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e840fa60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e840fbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e840fd80"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e840e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e840e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f10e840ec90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f10e840ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e840c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e840ba70" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e840ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e840bdf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e840a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e840a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e840a340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e840a4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e840a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e84098c0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e84098c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e8409c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f10e8409dd0"/>
        <function-ref name="source" scoped="" ref="0x7f10e8408020"/>
        <function-ref name="destination" scoped="" ref="0x7f10e84081b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e8408340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e84084d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e8408660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e840e530" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e840e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e840e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f10e840cb80" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e840cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e840b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e8411280" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e8411280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e8411600"/>
        <function-ref name="source" scoped="" ref="0x7f10e8411790"/>
        <function-ref name="address" scoped="" ref="0x7f10e8411920"/>
        <function-ref name="destination" scoped="" ref="0x7f10e8411ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e8411c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e8411dd0"/>
        <function-ref name="type" scoped="" ref="0x7f10e8410020"/>
        <function-ref name="setType" scoped="" ref="0x7f10e84101b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e8410340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e84104d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e8410660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f10e840b3e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e840b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e840b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e72fca50" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e72fca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e72fcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e72fc120" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e72fc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e72fc4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e72fc630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e72fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f10e7300b00" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f10e7300b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e72ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e73020e0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e73020e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7302460"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e73025f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e7302780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7302910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7302aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e7302e20" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e7302e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e73011e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e7301370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7301500"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7301690"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7301820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f10e73003e0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f10e73003e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7300780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7307d00" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7307d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e73040a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7304230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e73043c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7304550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e73046e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7304870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e72fb0a0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e72fb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e72fb520"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f10e72fb6b0"/>
        <function-ref name="source" scoped="" ref="0x7f10e72fb840"/>
        <function-ref name="destination" scoped="" ref="0x7f10e72fb9d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e72fbb60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e72fbcf0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e72fbe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f10e72fa0f0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e72fa0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f10e72fa470"/>
        <function-ref name="changed" scoped="" ref="0x7f10e72fa600"/>
        <function-ref name="amGroup" scoped="" ref="0x7f10e72fa790"/>
        <function-ref name="setAddress" scoped="" ref="0x7f10e72fa920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e72fe310" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e72fe310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e72fe690"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e72fe820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e72fe9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e72feb40"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e72fecd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e72fee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e7301ba0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e7301ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7300020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f10e72ff3e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f10e72ff3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e72ff780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e7304ac0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e7304ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e7304e40"/>
        <function-ref name="source" scoped="" ref="0x7f10e7303020"/>
        <function-ref name="address" scoped="" ref="0x7f10e73031b0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e7303340"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e73034d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e7303660"/>
        <function-ref name="type" scoped="" ref="0x7f10e73037f0"/>
        <function-ref name="setType" scoped="" ref="0x7f10e7303980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e7303b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e7303ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e7303e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f10e72ffb40" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f10e72ffb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e72fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f10e84285a0" loc="54:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e84285a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f10e8428920"/>
        <function-ref name="changed" scoped="" ref="0x7f10e8428ab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f10e8428c40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f10e8428dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e83f2020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e83f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e83f23a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e83f2530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e83f26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f10e83f2910" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e83f2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e83f2c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e83f2e20"/>
        <function-ref name="request" scoped="" ref="0x7f10e83f1020"/>
        <function-ref name="granted" scoped="" ref="0x7f10e83f11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e83f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f10e8401550" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f10e8401550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e84018d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8401a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8401bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f10e838c150" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e838c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f10e838c4f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f10e838c680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f10e838a1f0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e838a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f10e838a590"/>
        <function-ref name="configure" scoped="" ref="0x7f10e838a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f10e838d390" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e838d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e838d730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e838d8c0"/>
        <function-ref name="request" scoped="" ref="0x7f10e838da50"/>
        <function-ref name="granted" scoped="" ref="0x7f10e838dbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e838dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f10e838c8d0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e838c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f10e838cc50"/>
        <function-ref name="userId" scoped="" ref="0x7f10e838cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e72a8b40" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e72a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e72a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f10e72a72b0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f10e72a72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f10e72a7630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f10e72a77c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f10e72a7950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f10e72a7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f10e72a4020" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e72a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f10e72a43c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f10e72a4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f10e72a20d0" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e72a20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f10e72a2470"/>
        <function-ref name="configure" scoped="" ref="0x7f10e72a2600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f10e72a2890" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f10e72a2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f10e72a2c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f10e72a2da0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f10e72a1020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f10e72a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f10e72a5210" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e72a5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e72a55b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e72a5740"/>
        <function-ref name="request" scoped="" ref="0x7f10e72a58d0"/>
        <function-ref name="granted" scoped="" ref="0x7f10e72a5a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e72a5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f10e72a47a0" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e72a47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f10e72a4b20"/>
        <function-ref name="userId" scoped="" ref="0x7f10e72a4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f10e72a1480" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f10e72a1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e72a1800"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e72a1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e83532b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e83532b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8353630"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e83537c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8353950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e8353be0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e8353be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f10e8358d30" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f10e8358d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f10e83570e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e8387e00" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e8387e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e83591c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8359350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e83594e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8359670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8359800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f10e8354470" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e8354470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e83547f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8354980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8354b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8354ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e8354e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e8353020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f10e8357390" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8357390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f10e8357710"/>
        <function-ref name="getDSN" scoped="" ref="0x7f10e83578a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f10e8357a30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f10e8357bc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f10e8357d50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f10e8356020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f10e83561b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f10e8356340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f10e83564d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f10e8356660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f10e83567f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f10e8356980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f10e8356b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f10e8356da0"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e8355020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f10e83551b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f10e8355340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f10e83554d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f10e8355660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e83557f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f10e8355980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f10e8355b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f10e8355ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f10e8355e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f10e8354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f10e8359a50" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f10e8359a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8359dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e8358020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e83581b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8358340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e83584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f10e8358760" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f10e8358760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8358ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e8316c40" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e8316c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8315020"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e83151b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8315340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e83155d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e83155d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8315950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f10e8319020" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e8319020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e83193a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8319530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e83196c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8319850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e83199e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e8319b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f10e8317770" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f10e8317770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8317af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e8315be0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e8315be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e8314020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e83141b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8314340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e83144d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e8314660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e83147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f10e8319e00" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f10e8319e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e83171c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8317350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e83174e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f10e831a0a0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f10e831a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e831a420"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e831a5b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e831a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f10e831a9d0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f10e831a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e831ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f10e8317d80" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f10e8317d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e8316180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8316310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e83164a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e8316630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e83167c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e8316950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f10e8281c40" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e8281c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f10e827f020"/>
        <function-ref name="address" scoped="" ref="0x7f10e827f1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e827f340"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e827f4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e827f660"/>
        <function-ref name="pan" scoped="" ref="0x7f10e827f7f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f10e827f980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e827fb10"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e827fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e827e020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e827e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e827e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e827e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e827e6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e827e850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e827e9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e827eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f10e8284b20" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e8284b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f10e8283020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f10e82831b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f10e8283340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f10e82834d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f10e8283660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f10e82837f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f10e8283980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f10e8283b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f10e8283ca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f10e8283e30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f10e8282020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f10e82821b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f10e8282340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f10e82825d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e8282760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f10e82828f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f10e8282a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f10e8282c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f10e8282da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e8281020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f10e82811b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f10e8281340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f10e82814d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f10e8281660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f10e82817f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e827ee60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e827ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e827d210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e827d3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e827d530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e827d6c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e827d850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e827d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f10e72392e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f10e72392e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f10e7239660"/>
        <function-ref name="address" scoped="" ref="0x7f10e72397f0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e7239980"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e7239b10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e7239ca0"/>
        <function-ref name="pan" scoped="" ref="0x7f10e7239e30"/>
        <function-ref name="setPan" scoped="" ref="0x7f10e7237020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e72371b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e7237340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7237590" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7237590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7237910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7237aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7237c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7237dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7236020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e72361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f10e723c100" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f10e723c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f10e723c480"/>
        <function-ref name="getDSN" scoped="" ref="0x7f10e723c610"/>
        <function-ref name="setFCF" scoped="" ref="0x7f10e723c7a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f10e723c930"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f10e723cac0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f10e723cc50"/>
        <function-ref name="setDSN" scoped="" ref="0x7f10e723cde0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f10e723b020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f10e723b1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f10e723b340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f10e723b4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f10e723b660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f10e723b7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f10e723ba80"/>
        <function-ref name="localPan" scoped="" ref="0x7f10e723bc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f10e723bda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f10e723a020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f10e723a1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f10e723a340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e723a4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f10e723a660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f10e723a7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f10e723a980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f10e723ab10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f10e723aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f10e7236460" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f10e7236460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f10e72367e0"/>
        <function-ref name="changed" scoped="" ref="0x7f10e7236970"/>
        <function-ref name="amGroup" scoped="" ref="0x7f10e7236b00"/>
        <function-ref name="setAddress" scoped="" ref="0x7f10e7236c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e7235020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e7235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e72353a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7235530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e72356c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7235850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e72359e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7235b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e82124a0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e82124a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8212820"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e82129b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8212b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e8212dd0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e8212dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8211180"/>
        <function-ref name="header" scoped="" ref="0x7f10e8211310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e82132f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e82132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8213670"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8213800"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8213990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e82115a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e82115a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f10e8211920"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f10e8211ab0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f10e8211c40"/>
        <function-ref name="getSender" scoped="" ref="0x7f10e8211dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e8213be0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e8213be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8212020"/>
        <function-ref name="header" scoped="" ref="0x7f10e82121b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e71e7bd0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e71e7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e71e6020"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e71e61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e71e6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e71e65d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e71e65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e71e6950"/>
        <function-ref name="header" scoped="" ref="0x7f10e71e6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f10e71e4410" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e71e4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e71e4790"/>
        <function-ref name="clearAll" scoped="" ref="0x7f10e71e4920"/>
        <function-ref name="get" scoped="" ref="0x7f10e71e4ab0"/>
        <function-ref name="set" scoped="" ref="0x7f10e71e4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e71e84a0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e71e84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e71e8820"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e71e89b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e71e8b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f10e71e57e0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f10e71e57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f10e71e5b60"/>
        <function-ref name="insertNode" scoped="" ref="0x7f10e71e5cf0"/>
        <function-ref name="getNode" scoped="" ref="0x7f10e71e5e80"/>
        <function-ref name="evicted" scoped="" ref="0x7f10e71e4030"/>
        <function-ref name="getIndex" scoped="" ref="0x7f10e71e41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e71e8d90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e71e8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e71e7180"/>
        <function-ref name="header" scoped="" ref="0x7f10e71e7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e71e7560" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e71e7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e71e78e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f10e71e6d30" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f10e71e6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f10e71e50e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f10e71e5270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f10e71e5400"/>
        <function-ref name="getSender" scoped="" ref="0x7f10e71e5590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f10e8248e30" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f10e8248e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f10e82451e0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f10e8245370"/>
        <function-ref name="getNode" scoped="" ref="0x7f10e8245500"/>
        <function-ref name="evicted" scoped="" ref="0x7f10e8245690"/>
        <function-ref name="getIndex" scoped="" ref="0x7f10e8245820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f10e8241d10" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e8241d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e82400e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f10e8240270"/>
        <function-ref name="get" scoped="" ref="0x7f10e8240400"/>
        <function-ref name="set" scoped="" ref="0x7f10e8240590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f10e8244a00" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f10e8244a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f10e8244d80"/>
        <function-ref name="insertNode" scoped="" ref="0x7f10e8241020"/>
        <function-ref name="getNode" scoped="" ref="0x7f10e82411b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f10e8241340"/>
        <function-ref name="getIndex" scoped="" ref="0x7f10e82414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e82443b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e82443b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8244730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f10e71e2d40" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f10e71e2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e71e10e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f10e71e1270"/>
        <function-ref name="get" scoped="" ref="0x7f10e71e1400"/>
        <function-ref name="set" scoped="" ref="0x7f10e71e1590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e82007c0" loc="85:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e82007c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8200b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8200cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8200e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e81ff120" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e81ff120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e81ff4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f10e81fccb0" loc="93:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f10e81fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e81fb0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e81fb230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e81fb3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e820cbb0" loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e820cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8202020"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e82021b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e8202340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e82018b0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e82018b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e8201c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e8201dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e8200020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e82001b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e8200340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e82004d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e81ff730" loc="87:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e81ff730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e81ffab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e81ffc40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e81ffdd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e81fd020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e81fd1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e81fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f10e81fc020" loc="92:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f10e81fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f10e81fc3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f10e81fc530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f10e81fc6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f10e81fc850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f10e81fc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e82025d0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e82025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8202950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f10e81fd590" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e81fd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e81fd910"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e81fdaa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e81fdc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f10e8202ba0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f10e8202ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f10e8201020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f10e82011b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f10e8201340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f10e82014d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f10e8201660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e81e20e0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e81e20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e81e2460"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e81e25f0"/>
        <function-ref name="start" scoped="" ref="0x7f10e81e2780"/>
        <function-ref name="stop" scoped="" ref="0x7f10e81e2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e81dd120" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e81dd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e81dd4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e81dd630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e81dd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e81dda50" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e81dda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e81dddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e81e2ba0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e81e2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e81e0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e81e01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e81e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e81e0ba0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e81e0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e81df020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e81df1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e81df340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e81df4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e81df660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e81df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f10e81dfa40" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e81dfa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f10e81dfdc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f10e81de020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f10e81de1b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f10e81de340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f10e81de630" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f10e81de630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e81de9b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e81deb40"/>
        <function-ref name="start" scoped="" ref="0x7f10e81decd0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e81dee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e81e05d0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e81e05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e81e0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e81dc0a0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e81dc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e81dc420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e81dc5b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e81dc740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e81dc8d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e81dca60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e81dcbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f10e71bdda0" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f10e71bdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f10e71bc180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f10e71bc310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f10e71bc4a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f10e71bc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e816dcc0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e816dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e816c0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e816c230"/>
        <function-ref name="start" scoped="" ref="0x7f10e816c3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e816c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f10e816a080" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f10e816a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e816a400"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e816a590"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e816a720"/>
        <function-ref name="done" scoped="" ref="0x7f10e816a8b0"/>
        <function-ref name="standby" scoped="" ref="0x7f10e816aa40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e816abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e816c7e0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e816c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e816cb60"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e816ccf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e816ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f10e8169730" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e8169730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8169ab0"/>
        <function-ref name="header" scoped="" ref="0x7f10e8169c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e816b130" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e816b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e816b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f10e816ae20" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e816ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e81691c0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e8169350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e81694e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f10e816b700" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f10e816b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f10e816ba80"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e816bc10"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e816bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e71b53a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e71b53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e71b5720"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e71b58b0"/>
        <function-ref name="start" scoped="" ref="0x7f10e71b5a40"/>
        <function-ref name="stop" scoped="" ref="0x7f10e71b5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f10e71b5e60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e71b5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e71b4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f10e71b3d20" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f10e71b3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e71b20e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e71b2270"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e71b2400"/>
        <function-ref name="done" scoped="" ref="0x7f10e71b2590"/>
        <function-ref name="standby" scoped="" ref="0x7f10e71b2720"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e71b28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e71b44a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e71b44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e71b4820"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e71b49b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e71b4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f10e71ae020" loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f10e71ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e71ae3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e71ae530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f10e71af020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e71af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e71af3a0"/>
        <function-ref name="header" scoped="" ref="0x7f10e71af530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f10e71ae800" loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f10e71ae800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e71aeb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e71aed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e71b4dd0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e71b4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e71b3180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f10e71af800" loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f10e71af800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e71afb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e71afd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f10e71b15a0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e71b15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e71b1920"/>
        <function-ref name="ready" scoped="" ref="0x7f10e71b1ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e71b1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f10e71b33d0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f10e71b33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f10e71b3750"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e71b38e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e71b3a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f10e71b2b00" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f10e71b2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f10e71b2e80"/>
        <function-ref name="suspend" scoped="" ref="0x7f10e71b1030"/>
        <function-ref name="resume" scoped="" ref="0x7f10e71b11c0"/>
        <function-ref name="run" scoped="" ref="0x7f10e71b1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e8111020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e8111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e81113a0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e8111530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e81116c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e8111950" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e8111950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8111cd0"/>
        <function-ref name="header" scoped="" ref="0x7f10e8111e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f10e81100e0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e81100e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e8110460"/>
        <function-ref name="wait" scoped="" ref="0x7f10e81105f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e8110780"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e8110910"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e8110aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e8110d30" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e8110d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f10e810f0e0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f10e810f270"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f10e810f400"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f10e810f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e81126f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e81126f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e8112a70"/>
        <function-ref name="header" scoped="" ref="0x7f10e8112c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e8163db0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e8163db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8112180"/>
        <function-ref name="ready" scoped="" ref="0x7f10e8112310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e81124a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e7175310" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e7175310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7175690"/>
        <function-ref name="ready" scoped="" ref="0x7f10e7175820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e71759b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e7175c40" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e7175c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7174020"/>
        <function-ref name="header" scoped="" ref="0x7f10e71741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f10e7174400" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7174400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e7174780"/>
        <function-ref name="wait" scoped="" ref="0x7f10e7174910"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7174aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e7174c30"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e7174dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f10e7173060" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f10e7173060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f10e71733e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f10e7173570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e7173800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e7173800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f10e7173b80"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f10e7173d10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f10e7171020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f10e71711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e7176a30" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7176a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7176db0"/>
        <function-ref name="header" scoped="" ref="0x7f10e7175020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e7176140" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e7176140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e71764c0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e7176650"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e71767e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f10e7171480" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f10e7171480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7171800"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7171990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f10e8127850" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f10e8127850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f10e8127bd0"/>
        <function-ref name="rand32" scoped="" ref="0x7f10e8127d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f10e81256a0" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f10e81256a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8127390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e812c710" loc="44:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e812c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e812ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f10e8121850" loc="48:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f10e8121850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f10e8121bd0"/>
        <function-ref name="rand32" scoped="" ref="0x7f10e8121d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f10e81226c0" loc="47:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f10e81226c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8121390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e8126dc0" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e8126dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e8122180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e80df630" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e80df630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e80df9b0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e80dfb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e80dfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e80dd020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e80dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e80dd3a0"/>
        <function-ref name="header" scoped="" ref="0x7f10e80dd530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f10e80dd780" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e80dd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e80ddb00"/>
        <function-ref name="wait" scoped="" ref="0x7f10e80ddc90"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e80dde20"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e80dc020"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e80dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f10e80db5d0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f10e80db5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e80db950"/>
        <function-ref name="get" scoped="" ref="0x7f10e80dbae0"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e80dbc70"/>
        <function-ref name="set" scoped="" ref="0x7f10e80dbe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e80dc440" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e80dc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f10e80dc7c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f10e80dc950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f10e80dcae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f10e80dcc70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f10e80dce00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f10e80db020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f10e80db1b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f10e80db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e80e0400" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e80e0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e80e0780"/>
        <function-ref name="header" scoped="" ref="0x7f10e80e0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e8109ac0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e8109ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e8109e40"/>
        <function-ref name="ready" scoped="" ref="0x7f10e80e0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e80e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f10e80e0b60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e80e0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e80df020"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e80df1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e80df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e80c3d60" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e80c3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e80c2180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e80c2310"/>
        <function-ref name="start" scoped="" ref="0x7f10e80c24a0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e80c2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f10e80be7c0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f10e80be7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f10e80beb40"/>
        <function-ref name="request" scoped="" ref="0x7f10e80becd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e80b9020" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e80b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e80b93a0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e80b9530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e80b96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e80b9950" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e80b9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e80b9cd0"/>
        <function-ref name="header" scoped="" ref="0x7f10e80b9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f10e80c1840" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f10e80c1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e80c1bc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e80c1d50"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e80bf020"/>
        <function-ref name="done" scoped="" ref="0x7f10e80bf1b0"/>
        <function-ref name="standby" scoped="" ref="0x7f10e80bf340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e80bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e80bd020" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e80bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e80bd3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e80bd530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e80bd6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e80bd850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e80bd9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e80bdb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f10e80ba020" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f10e80ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e80ba4a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e80ba630"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e80ba7c0"/>
        <function-ref name="done" scoped="" ref="0x7f10e80ba950"/>
        <function-ref name="standby" scoped="" ref="0x7f10e80baae0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e80bac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f10e80bde00" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f10e80bde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f10e80bc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e80be060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e80be060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e80be3e0"/>
        <function-ref name="header" scoped="" ref="0x7f10e80be570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f10e80bb950" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f10e80bb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e80bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f10e80bc4b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f10e80bc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e80bc830"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e80bc9c0"/>
        <function-ref name="start" scoped="" ref="0x7f10e80bcb50"/>
        <function-ref name="stop" scoped="" ref="0x7f10e80bcce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e80b78c0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e80b78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e80b7c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e80b7dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e80b6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e80b61b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e80b6340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e80b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f10e80c1270" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f10e80c1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e80c15f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e80b6760" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e80b6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f10e80b6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f10e80bb020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f10e80bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e80bb3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e80bb530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e80bb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e80bf720" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e80bf720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e80bfaa0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e80bfc30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e80bfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f10e80b7120" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f10e80b7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f10e80b74a0"/>
        <function-ref name="request" scoped="" ref="0x7f10e80b7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f10e80c2880" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f10e80c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e80c2c00"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e80c2d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e80c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f10e7e93760" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f10e7e93760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e93ae0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e93c70"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e93e00"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7e977e0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e977e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e97b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e97cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e97e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e95030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e951c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e95350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e7e94800" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e94800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e94b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e94d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e93020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e931b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e93340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f10e7e9bbb0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7e9bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e7e98170"/>
        <function-ref name="clear" scoped="" ref="0x7f10e7e988a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e7e99a00"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e97020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f10e7e95760" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e95760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7e943d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f10e7e9ed00" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e7e9ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e7e9c2e0"/>
        <function-ref name="clear" scoped="" ref="0x7f10e7e9ca10"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e7e9db60"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e9b170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f10e7121310" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f10e7121310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7121690"/>
        <function-ref name="get" scoped="" ref="0x7f10e7121820"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e71219b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7121b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e71223b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e71223b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7122730"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e71228c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7122a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7122be0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7122d70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7121020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e711d2b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e711d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e711d630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e711d7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e711d950"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e711dae0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e711dc70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e711de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f10e7126630" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f10e7126630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e7124ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f10e7123460"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e71245b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7123b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f10e7120020" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7120020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7120c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f10e711e1e0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f10e711e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e711ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f10e71296f0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f10e71296f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e7128ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f10e7127460"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e71285b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7127b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f10e8062a60" loc="20:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f10e8062a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e805f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f10e805a320" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f10e805a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e8057870"/>
        <function-ref name="fired" scoped="" ref="0x7f10e8059e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e8058c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e8058780"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e80551e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e8057cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e8058300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e8059020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e8057260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e80594f0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e80599c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f10e80557d0" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f10e80557d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e8054440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e805e540" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e805e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e805e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f10e804a060" loc="29:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f10e804a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e804ae70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e8049820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e8049360"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e8049ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e8050020" loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e8050020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e80503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f10e8050a10" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f10e8050a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e804c2a0"/>
        <function-ref name="fired" scoped="" ref="0x7f10e804d2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e804dc20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e804d760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e804c760"/>
        <function-ref name="start" scoped="" ref="0x7f10e804e890"/>
        <function-ref name="stop" scoped="" ref="0x7f10e804eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f10e7f46890" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e7f46890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7f430d0"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7f440d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e7f44a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7f44590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e7f43590"/>
        <function-ref name="start" scoped="" ref="0x7f10e7f456e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7f45bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e7f46080" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e7f46080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f10e8c489c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f10e8c489c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7f46400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e7f43bc0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7f43bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7f41a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7f404e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7f40020"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7f409a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f10e70ef190" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e70ef190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e70ef510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e70ef6a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e70ef830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e70ef9c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e70efb50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e70efce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e70efe70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e70ee030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f10e70fc830" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e70fc830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e70f8090"/>
        <function-ref name="fired" scoped="" ref="0x7f10e70f9090"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e70f9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e70f9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e70f8550"/>
        <function-ref name="start" scoped="" ref="0x7f10e70fa6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e70fabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e70fc020" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e70fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e70fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e70f8b80" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e70f8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e70f69b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e70f5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e70f6e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e70f5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f10e70ea780" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f10e70ea780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f10e70eab00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f10e70eac90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f10e70eae20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f10e70e9020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f10e70e91b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f10e70e9340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f10e70e94d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f10e70e9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f10e70ee3e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f10e70ee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e70ece60"/>
        <function-ref name="fired" scoped="" ref="0x7f10e70eda60"/>
        <function-ref name="get" scoped="" ref="0x7f10e70ed090"/>
        <function-ref name="reset" scoped="" ref="0x7f10e70ec020"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e70ea350"/>
        <function-ref name="set" scoped="" ref="0x7f10e70ed550"/>
        <function-ref name="start" scoped="" ref="0x7f10e70ec4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e70ec9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f10e70f5dd0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e70f5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e70f0350"/>
        <function-ref name="test" scoped="" ref="0x7f10e70f29a0"/>
        <function-ref name="get" scoped="" ref="0x7f10e70f4ac0"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e70f0810"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e70f0d20"/>
        <function-ref name="reset" scoped="" ref="0x7f10e70f39f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e70f3530"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e70f2e60"/>
        <function-ref name="set" scoped="" ref="0x7f10e70f3020"/>
        <function-ref name="start" scoped="" ref="0x7f10e70f2020"/>
        <function-ref name="stop" scoped="" ref="0x7f10e70f24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f10e7fb9020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7fb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e7fb93a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e7fb9530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e7fb96c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e7fb9850"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e7fb99e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e7fb9b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e7fb9d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e7fb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f10e7fb4a40" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f10e7fb4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f10e7fb4dc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f10e7fb3020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f10e7fb31b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f10e7fb3340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f10e7fb34d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f10e7fb3660"/>
        <function-ref name="getAssr" scoped="" ref="0x7f10e7fb37f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f10e7fb3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f10e7fb8520" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f10e7fb8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7fb4020"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7fb7b80"/>
        <function-ref name="get" scoped="" ref="0x7f10e7fb71b0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7fb5090"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7fb44e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7fb7670"/>
        <function-ref name="start" scoped="" ref="0x7f10e7fb5550"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7fb5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e7fc1c70" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7fc1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7fba020"/>
        <function-ref name="test" scoped="" ref="0x7f10e7fbb610"/>
        <function-ref name="get" scoped="" ref="0x7f10e7fbe8e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7fba4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7fba9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7fbd7a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7fbd2e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7fbbad0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7fbeda0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7fbdc60"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7fbb150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f10e7faa2b0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7faa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e7faa630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e7faa7c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e7faa950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e7faaae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e7faac70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e7faae00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e7fa8020"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e7fa81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f10e7fa5a70" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f10e7fa5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f10e7fa5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f10e7fa3230" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f10e7fa3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f10e7fa35b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f10e7fa3740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f10e7fa38d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f10e7fa3a60"/>
        <function-ref name="countBusy" scoped="" ref="0x7f10e7fa3bf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f10e7fa3d80"/>
        <function-ref name="getAssr" scoped="" ref="0x7f10e7fa2020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f10e7fa21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f10e7fa86b0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f10e7fa86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7fa5110"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7fa7da0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7fa73d0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7fa62a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7fa55d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7fa7890"/>
        <function-ref name="start" scoped="" ref="0x7f10e7fa6760"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7fa6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e7faf020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7faf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7fab350"/>
        <function-ref name="test" scoped="" ref="0x7f10e7fac9a0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7fafc50"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7fab810"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7fabd20"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7fadb20"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7fad660"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7face60"/>
        <function-ref name="set" scoped="" ref="0x7f10e7fad150"/>
        <function-ref name="start" scoped="" ref="0x7f10e7fac020"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7fac4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f10e7f0d490" loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f10e7f0d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7f0d810"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7f0d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f10e7f111d0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e7f111d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7f0fb30"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7f109f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e7f0f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7f0f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e7f0d020"/>
        <function-ref name="start" scoped="" ref="0x7f10e7f10020"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7f10530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e7f17cf0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7f17cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7f12220"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7f157c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e7f14590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e7f14110"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e7f12b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e7f126a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7f15c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e7f16940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e7f14ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e7f16e10"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7f15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f10e7ebda00" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f10e7ebda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7ebdd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7ebc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f10e7ec2640" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f10e7ec2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7ebfc40"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7ec01e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e7ebf020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e7ec0ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e7ebd590"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e7ebd110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7ec0660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e7ec1390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e7ebf630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e7ec1860"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7ec1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e7ec8150" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7ec8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7ec4700"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7ec7c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e7ec5a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e7ec55b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e7ec2090"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e7ec4ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7ec5110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e7ec8d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e7ec40d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e7ec72a0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7ec7790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f10e7eba790" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f10e7eba790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7eb93f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f10e7eb9a60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7eb9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7eaf890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7eae260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7eafd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7eae720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f10e7ea6320" loc="49:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f10e7ea6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7ea2870"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7ea5e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e7ea4c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e7ea4780"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e7ea11e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e7ea2cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7ea4300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e7ea5020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e7ea2260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e7ea54f0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7ea59c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7e8d590" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e8d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e8d910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e8daa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e8dc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e8ddc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e6d020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e6d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e7e6d4a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e6d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e6d820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e6d9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e6db40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e6dcd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e6de60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f10e7e8e9b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f10e7e8e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e8ed50"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e8d020"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e8d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e7e6a2b0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e7e6a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e7e6a630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e7e6a7c0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7e6a950"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7e6aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f10e7e66b60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e66b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f10e7e65020"/>
        <function-ref name="request" scoped="" ref="0x7f10e7e651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e7e60440" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e7e60440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7e607c0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e7e60950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7e60ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e7e60d70" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e7e60d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7e5f180"/>
        <function-ref name="header" scoped="" ref="0x7f10e7e5f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f10e7e68c20" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f10e7e68c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e7e67020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e7e671b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e7e67340"/>
        <function-ref name="done" scoped="" ref="0x7f10e7e674d0"/>
        <function-ref name="standby" scoped="" ref="0x7f10e7e67660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e7e677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7e65400" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e65400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e65780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e65910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e65aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e65c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e65dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f10e7e62410" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f10e7e62410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e7e62890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e7e62a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e7e62bb0"/>
        <function-ref name="done" scoped="" ref="0x7f10e7e62d40"/>
        <function-ref name="standby" scoped="" ref="0x7f10e7e60020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e7e601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f10e7e642b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f10e7e642b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f10e7e64630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e7e66400" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e66400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7e66780"/>
        <function-ref name="header" scoped="" ref="0x7f10e7e66910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f10e7e63d70" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f10e7e63d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7e62180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f10e7e64920" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f10e7e64920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e7e64ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e7e64e30"/>
        <function-ref name="start" scoped="" ref="0x7f10e7e63020"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7e631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f10e7e5fd40" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f10e7e5fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e5e0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e5e270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e5e400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e5e590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e5e720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e5e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f10e7e68650" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f10e7e68650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7e689d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e7e5eb40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e7e5eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f10e7e5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f10e7e63440" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f10e7e63440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7e637c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7e63950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7e63ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e7e67a40" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e67a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7e67dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e7e66020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7e661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f10e7e5f5a0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f10e7e5f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f10e7e5f920"/>
        <function-ref name="request" scoped="" ref="0x7f10e7e5fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f10e7e6ad30" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f10e7e6ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7e680e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7e68270"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7e68400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f10e7e555c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e555c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f10e7e55940"/>
        <function-ref name="request" scoped="" ref="0x7f10e7e55ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f10e7e503b0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e7e503b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e4fac0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e4f570"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e4f020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e4d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f10e7e3bca0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f10e7e3bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e3a0a0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e3a230"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e3a3c0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e3a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f10e7e3f2e0" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e7e3f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e7e3e840"/>
        <function-ref name="clear" scoped="" ref="0x7f10e7e3c020"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e7e3e110"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e3c750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f10e7e59610" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f10e7e59610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e7e59990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e7e59b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e7e59cb0"/>
        <function-ref name="done" scoped="" ref="0x7f10e7e59e40"/>
        <function-ref name="standby" scoped="" ref="0x7f10e7e56020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e7e561b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f10e7e39470" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7e39470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e7e397f0"/>
        <function-ref name="wait" scoped="" ref="0x7f10e7e39980"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7e39b10"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e7e39ca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e7e39e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f10e7e54e80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e7e54e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e515e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e51090"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e53ad0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e51b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7e55d90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e55d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e54180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e54310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e544a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e54630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e547c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e54950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e7e401f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e7e401f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e40670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e40800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e40990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f10e7e40b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f10e7e40cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e7e56dd0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e56dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7e55180"/>
        <function-ref name="header" scoped="" ref="0x7f10e7e55310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f10e7e45dd0" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e7e45dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f10e8765850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7e416e0"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7e436b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e7e41090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7e43b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e7e41ba0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7e44ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7e431f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f10e7e4d940" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f10e7e4d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e4a090"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e4caf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e4c5a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e4a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f10e7e46a40" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7e46a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7e456b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e7e56460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e56460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7e567e0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e7e56970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7e56b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f10e7e4ae70" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e7e4ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e485e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e48090"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e49ad0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e48b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f10e7e3a8d0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f10e7e3a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e3ac50"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e3ade0"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e39020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f10e7e3b110" loc="63:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f10e7e3b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e3b490"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e3b620"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e3b7b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e3b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f10e7e461e0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e7e461e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f10e7e46560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f10e7e2e2d0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f10e7e2e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f10e7e2e650"/>
        <function-ref name="request" scoped="" ref="0x7f10e7e2e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f10e7e0ed20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f10e7e0ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f10e7e10b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f10e7e290d0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f10e7e290d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e277f0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e272a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e29d00"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e27d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f10e7e0cca0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f10e7e0cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e0b0a0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e0b230"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e0b3c0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e0b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f10e7e31b60" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f10e7e31b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7e30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f10e7e0a780" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f10e7e0a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f10e7e07020"/>
        <function-ref name="clear" scoped="" ref="0x7f10e7e07750"/>
        <function-ref name="isValid" scoped="" ref="0x7f10e7e087c0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e07e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f10e7e1b980" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f10e7e1b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7e1bd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7e16020"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7e161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7e16340"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7e16660"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e167f0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7e16980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f10e7e042e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f10e7e042e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f10e7e04660"/>
        <function-ref name="wait" scoped="" ref="0x7f10e7e047f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7e04980"/>
        <function-ref name="isFree" scoped="" ref="0x7f10e7e04b10"/>
        <function-ref name="getNow" scoped="" ref="0x7f10e7e04ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f10e7e302e0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f10e7e302e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f10e7e30660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f10e7e307f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f10e7e30980"/>
        <function-ref name="done" scoped="" ref="0x7f10e7e30b10"/>
        <function-ref name="standby" scoped="" ref="0x7f10e7e30ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f10e7e30e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f10e7e0f1a0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f10e7e0f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7e0fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f10e7e2db90" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f10e7e2db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e2a2e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e2cd40"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e2c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e2a830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f10e7e2eaa0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f10e7e2eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e2ee20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7e2d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e2d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7e2d340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e2d4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e2d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f10e7e1c670" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f10e7e1c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7e1c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7e1cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7e1cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7e1b020"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e1b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7e1b340"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e1b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7e1b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f10e7e0d340" loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f10e7e0d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7e0d6c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f10e7e0d850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f10e7e0d9e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f10e7e0db70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f10e7e0dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f10e7e2fa90" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f10e7e2fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7e2fe10"/>
        <function-ref name="header" scoped="" ref="0x7f10e7e2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f10e7d758b0" loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f10e7d758b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7d75c30"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7d75dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f10e7e26630" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f10e7e26630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e25e70"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e25920"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e253d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e233f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f10e7e31020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f10e7e31020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f10e8c48d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7e313a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f10e7e1eb50" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f10e7e1eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7e1d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7e1d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f10e7e1d340"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7e1d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e7e1d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f10e7e1f760" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f10e7e1f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7e1fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7e1fd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7e1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7e1e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e1e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7e1e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e1e660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7e1e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f10e7e23c80" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f10e7e23c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e203c0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e22e30"/>
        <function-ref name="isSet" scoped="" ref="0x7f10e7e228e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e20910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f10e7e2f120" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f10e7e2f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7e2f4a0"/>
        <function-ref name="ready" scoped="" ref="0x7f10e7e2f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7e2f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f10e7e11550" loc="72:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f10e7e11550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f10e7e118d0"/>
        <function-ref name="disable" scoped="" ref="0x7f10e7e11a60"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7e11bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f10e7e11d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f10e7e17aa0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7e17aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f10e7e17e20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f10e7e1c020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f10e7e1c1b0"/>
        <function-ref name="write" scoped="" ref="0x7f10e7e1c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f10e7e0b8d0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f10e7e0b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e0bc50"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e0bde0"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e0a020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f10e7e0c110" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f10e7e0c110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7e0c490"/>
        <function-ref name="get" scoped="" ref="0x7f10e7e0c620"/>
        <function-ref name="setValue" scoped="" ref="0x7f10e7e0c7b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7e0c940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f10e7e1f020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f10e7e1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f10e7e1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f10e7e066b0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f10e7e066b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f10e7e06a30"/>
        <function-ref name="suspend" scoped="" ref="0x7f10e7e06bc0"/>
        <function-ref name="resume" scoped="" ref="0x7f10e7e06d50"/>
        <function-ref name="run" scoped="" ref="0x7f10e7e04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f10e7d30b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f10e7d30b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7d2f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7d2f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7d2f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7d2f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7d2f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7d2f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7d2f980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7d2fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f10e7d31880" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f10e7d31880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7d31c00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7d31d90"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7d30020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7d301b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7d30340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7d304d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7d30660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7d307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f10e7d2ec80" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e7d2ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7d2a4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7d2b4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e7d2be60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7d2b9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e7d2a9a0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7d2dac0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7d2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f10e7d32060" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f10e7d32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7d323e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7d32570"/>
        <function-ref name="request" scoped="" ref="0x7f10e7d32700"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7d32890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e7d32a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f10e7d36e10" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f10e7d36e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7d331c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7d33350"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7d334e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7d33670"/>
        <function-ref name="get" scoped="" ref="0x7f10e7d33800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7d33990"/>
        <function-ref name="set" scoped="" ref="0x7f10e7d33b20"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7d33cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f10e7d2fe30" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f10e7d2fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f10e7d2e1e0"/>
        <function-ref name="disable" scoped="" ref="0x7f10e7d2e370"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7d2e500"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f10e7d2e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f10e7d32ce0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7d32ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f10e7d310a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f10e7d31230"/>
        <function-ref name="splitRead" scoped="" ref="0x7f10e7d313c0"/>
        <function-ref name="write" scoped="" ref="0x7f10e7d31550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f10e7d29060" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f10e7d29060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f10e8765420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7d29c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f10e7d183d0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f10e7d183d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7d18750"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7d188e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7d18a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7d18c00"/>
        <function-ref name="get" scoped="" ref="0x7f10e7d18d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7d17020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7d171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7d17340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f10e7d1b7f0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f10e7d1b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f10e7d19e60"/>
        <function-ref name="test" scoped="" ref="0x7f10e7d194e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7d224c0"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7d21020"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7d21530"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7d199a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7d22980"/>
        <function-ref name="start" scoped="" ref="0x7f10e7d219f0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7d19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f10e7d17680" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f10e7d17680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7d17a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7d17b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7d17d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7d16020"/>
        <function-ref name="get" scoped="" ref="0x7f10e7d161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7d16340"/>
        <function-ref name="set" scoped="" ref="0x7f10e7d164d0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7d16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f10e7d24680" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f10e7d24680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7d24a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f10e7d27a10" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f10e7d27a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f10e7d27d90"/>
        <function-ref name="disable" scoped="" ref="0x7f10e7d24020"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7d241b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f10e7d24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f10e7cfcae0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f10e7cfcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7cfce60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7d05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f10e7d04840" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f10e7d04840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f10e7d04bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e7d071f0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e7d071f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7d07570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f10e7d06020" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7d06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f10e7d063a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f10e7d06530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f10e7d066c0"/>
        <function-ref name="write" scoped="" ref="0x7f10e7d06850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f10e7d05850" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e7d05850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7d05bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7d05d60"/>
        <function-ref name="request" scoped="" ref="0x7f10e7d03020"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7d031b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e7d03340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f10e7cb6190" loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f10e7cb6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7cb6510"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7cb66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f10e7cf7020" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f10e7cf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7cf73a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7cf7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f10e7cd9430" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f10e7cd9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7cd97b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7cd9940"/>
        <function-ref name="request" scoped="" ref="0x7f10e7cd9ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7cd9c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e7cd9df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f10e7cf9e00" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f10e7cf9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f10e7cf81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e7cf97e0" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e7cf97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7cf9b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f10e7cf5020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f10e7cf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f10e7cf53a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f10e7cda980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f10e7cf56c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f10e7cdab10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f10e7cf59e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f10e7cf5b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f10e7cf5d00"/>
        <function-ref name="read" scoped="" ref="0x7f10e7cf4020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f10e7cf41b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f10e7cf4340"/>
        <function-ref name="setClock" scoped="" ref="0x7f10e7cf44d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f10e7cf4660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f10e7cf47f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f10e7cf4a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f10e7cf4c10"/>
        <function-ref name="write" scoped="" ref="0x7f10e7cf4da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f10e7cda020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f10e7cda1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f10e7cda340"/>
        <function-ref name="getClock" scoped="" ref="0x7f10e7cda4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f10e7cda660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f10e7cf5530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f10e7cf5850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f10e7cda7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f10e7cf8480" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f10e7cf8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f10e7cf8800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f10e7cf8990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f10e7cf8b20"/>
        <function-ref name="write" scoped="" ref="0x7f10e7cf8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f10e7cf7d20" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e7cf7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7cf60e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7cf6270"/>
        <function-ref name="request" scoped="" ref="0x7f10e7cf6400"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7cf6590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e7cf6720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f10e7cd7130" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7cd7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f10e7cd74b0"/>
        <function-ref name="userId" scoped="" ref="0x7f10e7cd7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f10e7cd7920" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f10e7cd7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f10e7cd7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f10e7c8a3e0" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f10e7c8a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f10e7c8a760"/>
        <function-ref name="sleep" scoped="" ref="0x7f10e7c88ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f10e7c8aa80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f10e7c88e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f10e7c8ada0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f10e7c89020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f10e7c891b0"/>
        <function-ref name="read" scoped="" ref="0x7f10e7c89340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f10e7c894d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f10e7c89660"/>
        <function-ref name="setClock" scoped="" ref="0x7f10e7c897f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f10e7c89980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f10e7c89b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f10e7c89da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f10e7c88020"/>
        <function-ref name="write" scoped="" ref="0x7f10e7c881b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f10e7c88340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f10e7c884d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f10e7c88660"/>
        <function-ref name="getClock" scoped="" ref="0x7f10e7c887f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f10e7c88980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f10e7c8a8f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f10e7c8ac10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f10e7c88b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f10e7c7bb10" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f10e7c7bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7c7a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7c7a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7c7a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7c7a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c7a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7c7a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c7a980"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7c7ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f10e7c7e650" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f10e7c7e650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7c7e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7c7eb60"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7c7ecf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7c7ee80"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c7c030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7c7c1c0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c7c350"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7c7c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f10e7c7f390" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f10e7c7f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7c7f710"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7c7f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7c7fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7c7fbc0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c7fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7c7e020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c7e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7c7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f10e7c7dac0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f10e7c7dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e7c7de40"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7c7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f10e7c7ae50" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f10e7c7ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f10e7c79210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f10e7c83350" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f10e7c83350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f10e7c836d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f10e7c81ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f10e7c839f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f10e7c81e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f10e7c83d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f10e7c82020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f10e7c821b0"/>
        <function-ref name="read" scoped="" ref="0x7f10e7c82340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f10e7c824d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f10e7c82660"/>
        <function-ref name="setClock" scoped="" ref="0x7f10e7c827f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f10e7c82980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f10e7c82b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f10e7c82da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f10e7c81020"/>
        <function-ref name="write" scoped="" ref="0x7f10e7c811b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f10e7c81340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f10e7c814d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f10e7c81660"/>
        <function-ref name="getClock" scoped="" ref="0x7f10e7c817f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f10e7c81980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f10e7c83860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f10e7c83b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f10e7c81b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f10e7c7c800" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f10e7c7c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f10e7c7cb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f10e7c7cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f10e7c7b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f10e7c7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c7b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f10e7c7b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c7b660"/>
        <function-ref name="clr" scoped="" ref="0x7f10e7c7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f10e7c2e020" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e7c2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f10e7c2e3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f10e7c2e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f10e7c2d0d0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e7c2d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f10e7c2d470"/>
        <function-ref name="configure" scoped="" ref="0x7f10e7c2d600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f10e7c2f210" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e7c2f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7c2f5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7c2f740"/>
        <function-ref name="request" scoped="" ref="0x7f10e7c2f8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7c2fa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e7c2fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f10e7c2e7a0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7c2e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f10e7c2eb20"/>
        <function-ref name="userId" scoped="" ref="0x7f10e7c2ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e704b420" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e704b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e704b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f10e704ba30" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f10e704ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f10e704bdb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f10e704a020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f10e704a1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f10e704a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f10e7048850" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f10e7048850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f10e7048bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f10e7048d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f10e7047910" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f10e7047910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f10e7047cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f10e7047e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f10e7046120" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f10e7046120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f10e70464a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f10e7046630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f10e70467c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f10e7046950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f10e70499d0" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f10e70499d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f10e7049d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f10e7048020"/>
        <function-ref name="request" scoped="" ref="0x7f10e70481b0"/>
        <function-ref name="granted" scoped="" ref="0x7f10e7048340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f10e70484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f10e7047020" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f10e7047020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f10e70473a0"/>
        <function-ref name="userId" scoped="" ref="0x7f10e7047530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f10e7046c20" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f10e7046c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7044020"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e70441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f10e7c14d80" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7c14d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f10e7c1d180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e7c1d310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e7c1d4a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e7c1d630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e7c1d7c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e7c1d950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e7c1dae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e7c1dc70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f10e7c1de00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e7c1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f10e7c1c530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f10e7c1c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f10e7c109a0"/>
        <function-ref name="test" scoped="" ref="0x7f10e7c10020"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c131b0"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7c13b80"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7c110d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7c104e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c13670"/>
        <function-ref name="start" scoped="" ref="0x7f10e7c11590"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7c11a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f10e7c0f650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f10e7c0f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7c0b110"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7c0eda0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c0e3d0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7c0c2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7c0b5d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c0e890"/>
        <function-ref name="start" scoped="" ref="0x7f10e7c0c760"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7c0cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e7c25b20" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7c25b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7c1fe60"/>
        <function-ref name="test" scoped="" ref="0x7f10e7c1f4e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c22790"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7c1e350"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7c1e860"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7c20670"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7c201b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7c1f9a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c22c50"/>
        <function-ref name="start" scoped="" ref="0x7f10e7c20b30"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7c1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f10e7c01020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7c01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f10e7c013a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e7c01530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e7c016c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e7c01850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e7c019e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e7c01b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e7c01d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e7c00020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f10e7c001b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e7c00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f10e7bfb5a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f10e7bfb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7bf8020"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7bfac10"/>
        <function-ref name="get" scoped="" ref="0x7f10e7bfa240"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7bf9110"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7bf84e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7bfa700"/>
        <function-ref name="start" scoped="" ref="0x7f10e7bf95d0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7bf9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f10e7c00850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f10e7c00850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f10e7bfde60"/>
        <function-ref name="test" scoped="" ref="0x7f10e7bfd4e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7bff4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7bfe020"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7bfe530"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7bfd9a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7bff980"/>
        <function-ref name="start" scoped="" ref="0x7f10e7bfe9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7bfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f10e7bf8ba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f10e7bf8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7bf4550"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7bf51f0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7bf67f0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7bf56b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7bf4a10"/>
        <function-ref name="set" scoped="" ref="0x7f10e7bf6cb0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7bf5b70"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7bf4090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f10e7bf2120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f10e7bf2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7bf0a90"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7bf1770"/>
        <function-ref name="get" scoped="" ref="0x7f10e7bf2d50"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7bf1c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7bef020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7bf1260"/>
        <function-ref name="start" scoped="" ref="0x7f10e7bf0110"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7bf05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e7c0ab90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7c0ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7c03020"/>
        <function-ref name="test" scoped="" ref="0x7f10e7c04550"/>
        <function-ref name="get" scoped="" ref="0x7f10e7c077f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7c034e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7c039f0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7c056b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7c051f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7c04a10"/>
        <function-ref name="set" scoped="" ref="0x7f10e7c07cb0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7c05b70"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7c04090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f10e7b216e0" loc="30:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e7b216e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f10e8b72410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7b1e020"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7b1f020"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e7b1f9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7b1f4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e7b1e4e0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7b205b0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7b20ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e7b6bb50" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e7b6bb50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f10e8c489c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f10e8c489c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e7b5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f10e7b5e410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7b5e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7b5b810"/>
        <function-ref name="test" scoped="" ref="0x7f10e7b5ce60"/>
        <function-ref name="get" scoped="" ref="0x7f10e7b5d090"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7b5bcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7b59260"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7b5c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7b5da60"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7b5b350"/>
        <function-ref name="set" scoped="" ref="0x7f10e7b5d550"/>
        <function-ref name="start" scoped="" ref="0x7f10e7b5c4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7b5c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f10e701a610" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f10e701a610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f10e8c48640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f10e8c48640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f10e8b72410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7017020"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7018020"/>
        <function-ref name="startAt" scoped="" ref="0x7f10e70189a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e70184e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f10e70174e0"/>
        <function-ref name="start" scoped="" ref="0x7f10e70195b0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7019ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f10e7012db0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f10e7012db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e700e9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f10e700f530"/>
        <function-ref name="get" scoped="" ref="0x7f10e7010a10"/>
        <function-ref name="reset" scoped="" ref="0x7f10e700f9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e700ee60"/>
        <function-ref name="set" scoped="" ref="0x7f10e700f020"/>
        <function-ref name="start" scoped="" ref="0x7f10e700e020"/>
        <function-ref name="stop" scoped="" ref="0x7f10e700e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f10e7017a30" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f10e7017a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7013e60"/>
        <function-ref name="test" scoped="" ref="0x7f10e70134e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e70156b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7012350"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7012860"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7014590"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e70140d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e70139a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7015b70"/>
        <function-ref name="start" scoped="" ref="0x7f10e7014a50"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7013020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f10e7b193a0" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f10e7b193a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7b18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e7b15200" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7b15200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f10e8b72410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7b14090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7b14a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7b14550"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7b13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e7b0f020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7b0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f10e8b72410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7b0fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7afd800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7afd340"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7afdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f10e7afc280" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e7afc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7af8810"/>
        <function-ref name="test" scoped="" ref="0x7f10e7af9e60"/>
        <function-ref name="get" scoped="" ref="0x7f10e7afb020"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7af8cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7af7260"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7af9020"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7afb9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7af8350"/>
        <function-ref name="set" scoped="" ref="0x7f10e7afb4e0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7af94e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7af99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f10e7ad60f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f10e7ad60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7ad4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7ad49a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7ad44e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7ad4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e7af3cf0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7af3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7ad8b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7ad7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7ad7090"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7ad7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f10e7ad2b60" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f10e7ad2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7ad17d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f10e7ad1e40" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7ad1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7acfca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7ace670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7ace1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7aceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f10e7ac79a0" loc="36:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f10e7ac79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f10e7ac47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e7a6a710" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e7a6a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e7a6aa90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e7a6ac20"/>
        <function-ref name="start" scoped="" ref="0x7f10e7a6adb0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7a67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e7a677f0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e7a677f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7a67b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e7a67d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7a66020"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7a661b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7a66340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e7a642b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e7a642b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e7a64630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e7a647c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e7a64950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7a64ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e7a64c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e7a66b20" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e7a66b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7a64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f10e7a61300" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e7a61300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e7a61680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e7a61810"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e7a619a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e7a61b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e7a61cc0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7a61e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e7a60020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e7a60660"/>
        <function-ref name="set" scoped="" ref="0x7f10e7a601b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e7a60340"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e7a604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f10e7a62800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e7a62800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e7a62b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e7a62d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e7a61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e7a63020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e7a63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e7a633a0"/>
        <function-ref name="source" scoped="" ref="0x7f10e7a63530"/>
        <function-ref name="address" scoped="" ref="0x7f10e7a636c0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e7a63850"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e7a639e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e7a63b70"/>
        <function-ref name="type" scoped="" ref="0x7f10e7a63d00"/>
        <function-ref name="setType" scoped="" ref="0x7f10e7a62020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e7a621b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e7a62340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e7a624d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f10e79fed90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f10e79fed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e79fd180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e79fd310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e79fd4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e79fd630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e79fd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f10e79fda50" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f10e79fda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e79fddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f10e7a5eb40" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f10e7a5eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7a01020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e7a011b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e7a01340"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e7a014d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7a01660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f10e79ff720" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f10e79ff720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f10e79ffaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f10e79ffc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e79ffdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e79fe020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f10e79fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e7a019e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e7a019e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e7a01d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f10e79fe400" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f10e79fe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f10e79fe780"/>
        <function-ref name="noAck" scoped="" ref="0x7f10e79fe910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f10e79feaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f10e7a00020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f10e7a00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f10e7a003a0"/>
        <function-ref name="source" scoped="" ref="0x7f10e7a00530"/>
        <function-ref name="address" scoped="" ref="0x7f10e7a006c0"/>
        <function-ref name="destination" scoped="" ref="0x7f10e7a00850"/>
        <function-ref name="setSource" scoped="" ref="0x7f10e7a009e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f10e7a00b70"/>
        <function-ref name="type" scoped="" ref="0x7f10e7a00d00"/>
        <function-ref name="setType" scoped="" ref="0x7f10e79ff020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f10e79ff1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f10e79ff340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f10e79ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e79f74e0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e79f74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e79f7860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e79f79f0"/>
        <function-ref name="start" scoped="" ref="0x7f10e79f7b80"/>
        <function-ref name="stop" scoped="" ref="0x7f10e79f7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e79f5020" loc="52:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e79f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f10e8951020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e79f53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e79f5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e79f56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e79f5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e79f59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e79fae60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e79fae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e79f7210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e79f64c0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e79f64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f10e8951020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e79f6840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f10e79f4940" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e79f4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e79f4cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e79f4e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e79f3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e79f31b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e79f3340"/>
        <function-ref name="get" scoped="" ref="0x7f10e79f34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e79f3660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e79f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f10e79f37f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e79f3980"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e79f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f10e79f4020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f10e79f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f10e8951020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f10e79f43a0"/>
        <function-ref name="offset" scoped="" ref="0x7f10e79f4530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f10e79f46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f10e79cfb70" loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f10e79cfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f10e79ce020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f10e79ce1b0"/>
        <function-ref name="start" scoped="" ref="0x7f10e79ce340"/>
        <function-ref name="stop" scoped="" ref="0x7f10e79ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f10e7968e40" loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f10e7968e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e79671e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7967370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f10e79b9530" loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f10e79b9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e79b98b0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e79b9a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f10e799fd50" loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f10e799fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e799e100"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e799e290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e79cf520" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e79cf520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e79cf8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f10e79b7130" loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f10e79b7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f10e79b74b0"/>
        <function-ref name="flush" scoped="" ref="0x7f10e79b7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f10e796a400" loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f10e796a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e796a780"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e796a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f10e79be410" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f10e79be410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f10e79be790"/>
        <function-ref name="resetSend" scoped="" ref="0x7f10e79be920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f10e79beab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f10e79bec40"/>
        <function-ref name="putData" scoped="" ref="0x7f10e79bedd0"/>
        <function-ref name="putDone" scoped="" ref="0x7f10e79c7020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f10e79c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f10e79c7430" loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e79c7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e79c77b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e79c7940"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e79c7ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e79c7c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e79c7df0"/>
        <function-ref name="get" scoped="" ref="0x7f10e79c4020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e79c41b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e79c47f0"/>
        <function-ref name="set" scoped="" ref="0x7f10e79c4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e79c44d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e79c4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f10e79630c0" loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f10e79630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7963440"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e79635d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f10e79c9a40" loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f10e79c9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f10e79c9dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f10e79cd020"/>
        <function-ref name="startSend" scoped="" ref="0x7f10e79cd1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f10e79cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f10e79cc080" loc="68:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f10e79cc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f10e79cc400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f10e79cc590"/>
        <function-ref name="endPacket" scoped="" ref="0x7f10e79cc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f10e7898020" loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f10e7898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e78983a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7898530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f10e789ede0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f10e789ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f10e8951020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e789c1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f10e789c350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f10e789c4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f10e789c670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e789c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f10e7898800" loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f10e7898800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f10e7898b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f10e7898d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f10e789e6c0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f10e789e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f10e8951020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f10e789ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f10e789cc20" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f10e789cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f10e8951020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f10e789b020"/>
        <function-ref name="offset" scoped="" ref="0x7f10e789b1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f10e789b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f10e789a920" loc="57:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e789a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e789aca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e789ae30"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e7899020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e78991b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e7899340"/>
        <function-ref name="get" scoped="" ref="0x7f10e78994d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e7899660"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e7899ca0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7899980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e78997f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e7899b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f10e789be80" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f10e789be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f10e789a220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f10e789a3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f10e789a540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f10e789a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f10e789b590" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f10e789b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f10e789b910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f10e789baa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f10e789bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f10e7888d20" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f10e7888d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e78910e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f10e7891270"/>
        <function-ref name="receive" scoped="" ref="0x7f10e7891400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f10e7891590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f10e7891720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f10e78918b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7891a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f10e7896e10" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f10e7896e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f10e78931c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f10e7893350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f10e78934e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f10e7893670"/>
        <function-ref name="putData" scoped="" ref="0x7f10e7893800"/>
        <function-ref name="putDone" scoped="" ref="0x7f10e7893990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f10e7893b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f10e7891cc0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f10e7891cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f10e78900a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f10e7890230"/>
        <function-ref name="led1On" scoped="" ref="0x7f10e78903c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f10e7890550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f10e78906e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e7890870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f10e7890a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f10e78861b0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7890b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f10e7890d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f10e7886020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f10e7866d50" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f10e7866d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e786a100"/>
        <function-ref name="receive" scoped="" ref="0x7f10e786a290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f10e786c960" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f10e786c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e786cce0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f10e786ce70"/>
        <function-ref name="receive" scoped="" ref="0x7f10e786b030"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f10e786b1c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f10e786b350"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f10e786b4e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e786b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f10e786c150" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f10e786c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e786c4d0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e786c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f10e7864820" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f10e7864820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7864ba0"/>
        <function-ref name="receive" scoped="" ref="0x7f10e7864d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f10e7863080" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f10e7863080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e7863400"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f10e7863590"/>
        <function-ref name="receive" scoped="" ref="0x7f10e7863720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f10e78638b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f10e7863a40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f10e7863bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7863d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f10e7862360" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7862360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e78611b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7861b30"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7861670"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e785f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f10e7864020" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f10e7864020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e78643a0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7864530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f10e781bdd0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f10e781bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e781a180"/>
        <function-ref name="receive" scoped="" ref="0x7f10e781a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f10e7819610" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f10e7819610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e7819990"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7819b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e781b020" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e781b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e781b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f10e781a5a0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f10e781a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f10e781a920"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f10e781aab0"/>
        <function-ref name="receive" scoped="" ref="0x7f10e781ac40"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f10e781add0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f10e7819020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f10e78191b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f10e7819340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f10e7816cc0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7816cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7815b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e7814550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7814090"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e7814a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f10e7818620" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f10e7818620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f10e78189a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f10e7818b30"/>
        <function-ref name="rxDone" scoped="" ref="0x7f10e7818cc0"/>
        <function-ref name="txDone" scoped="" ref="0x7f10e7818e50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f10e7816020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f10e78161b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f10e7816340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f10e78164d0"/>
        <function-ref name="tx" scoped="" ref="0x7f10e7816660"/>
        <function-ref name="rx" scoped="" ref="0x7f10e78167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f10e781b630" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f10e781b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e781b9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e781bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f10e7819df0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f10e7819df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e78181c0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7818350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f10e77f75f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f10e77f75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f10e77f7970"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f10e77f7b00"/>
        <function-ref name="rxDone" scoped="" ref="0x7f10e77f7c90"/>
        <function-ref name="txDone" scoped="" ref="0x7f10e77f7e20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f10e77f6020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f10e77f61b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f10e77f6340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f10e77f64d0"/>
        <function-ref name="tx" scoped="" ref="0x7f10e77f6660"/>
        <function-ref name="rx" scoped="" ref="0x7f10e77f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f10e77f5dd0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f10e77f5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f10e77f4180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f10e77f4310"/>
        <function-ref name="rxDone" scoped="" ref="0x7f10e77f44a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f10e77f4630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f10e77f47c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f10e77f4950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f10e77f4ae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f10e77f4c70"/>
        <function-ref name="tx" scoped="" ref="0x7f10e77f4e00"/>
        <function-ref name="rx" scoped="" ref="0x7f10e77f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f10e77f8d20" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f10e77f8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77f70e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77f7270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f10e77f6b80" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f10e77f6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77f5020"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f10e77f5540" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f10e77f5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77f58c0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77f5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f10e77f8480" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f10e77f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77f8800"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77f8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f10e77f3d80" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f10e77f3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e77f0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f10e77ef730" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f10e77ef730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f10e77efab0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f10e77efc40"/>
        <function-ref name="rxDone" scoped="" ref="0x7f10e77efdd0"/>
        <function-ref name="txDone" scoped="" ref="0x7f10e77ee020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f10e77ee1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f10e77ee340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f10e77ee4d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f10e77ee660"/>
        <function-ref name="tx" scoped="" ref="0x7f10e77ee7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f10e77ee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f10e77eece0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f10e77eece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e77ec0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f10e77eb650" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f10e77eb650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f10e77eb9d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f10e77ebb60"/>
        <function-ref name="rxDone" scoped="" ref="0x7f10e77ebcf0"/>
        <function-ref name="txDone" scoped="" ref="0x7f10e77ebe80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f10e77ea030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f10e77ea1c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f10e77ea350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f10e77ea4e0"/>
        <function-ref name="tx" scoped="" ref="0x7f10e77ea670"/>
        <function-ref name="rx" scoped="" ref="0x7f10e77ea800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f10e77f0e30" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f10e77f0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77ef1e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77ef370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f10e77ec470" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f10e77ec470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77ec7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f10e77ecd50" loc="121:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f10e77ecd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77eb100"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77eb290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f10e77eab30" loc="124:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f10e77eab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f10e77e9020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f10e77e91b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f10e77e9340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f10e77e94d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f10e77e9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f10e77e9980" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f10e77e9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f10e77e9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f10e77f0550" loc="115:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f10e77f0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f10e77f08d0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77f0a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e778abb0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e778abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7787a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e77864e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7786020"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e77869a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e7785c50" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e7785c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f10e8b727b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e7781a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e77804e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e7780020"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e77809a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f10e7778dc0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7778dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f10e7777180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e7777310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e77774a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e7777630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e77777c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e7777950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e7777ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e7777c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f10e7777e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e7776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f10e7776530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f10e7776530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f10e77729a0"/>
        <function-ref name="test" scoped="" ref="0x7f10e7772020"/>
        <function-ref name="get" scoped="" ref="0x7f10e77751b0"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7775b80"/>
        <function-ref name="reset" scoped="" ref="0x7f10e77730d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e77724e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7775670"/>
        <function-ref name="start" scoped="" ref="0x7f10e7773590"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7773a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f10e7771650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f10e7771650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e776d110"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7770da0"/>
        <function-ref name="get" scoped="" ref="0x7f10e77703d0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e776e2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e776d5d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7770890"/>
        <function-ref name="start" scoped="" ref="0x7f10e776e760"/>
        <function-ref name="stop" scoped="" ref="0x7f10e776ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e777fb30" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e777fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7779e60"/>
        <function-ref name="test" scoped="" ref="0x7f10e77794e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e777c790"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e7778350"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e7778860"/>
        <function-ref name="reset" scoped="" ref="0x7f10e777b670"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e777b1b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e77799a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e777cc50"/>
        <function-ref name="start" scoped="" ref="0x7f10e777bb30"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7779020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f10e7763020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f10e7763020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f10e77633a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f10e7763530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f10e77636c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f10e7763850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f10e77639e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f10e7763b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f10e7763d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f10e7762020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f10e77621b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f10e7762340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f10e775d5a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f10e775d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7759020"/>
        <function-ref name="fired" scoped="" ref="0x7f10e775cc10"/>
        <function-ref name="get" scoped="" ref="0x7f10e775c240"/>
        <function-ref name="reset" scoped="" ref="0x7f10e775b110"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e77594e0"/>
        <function-ref name="set" scoped="" ref="0x7f10e775c700"/>
        <function-ref name="start" scoped="" ref="0x7f10e775b5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e775ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f10e7762850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f10e7762850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f10e775ee60"/>
        <function-ref name="test" scoped="" ref="0x7f10e775e4e0"/>
        <function-ref name="get" scoped="" ref="0x7f10e77614c0"/>
        <function-ref name="captured" scoped="" ref="0x7f10e7760020"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7760530"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e775e9a0"/>
        <function-ref name="set" scoped="" ref="0x7f10e7761980"/>
        <function-ref name="start" scoped="" ref="0x7f10e77609f0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e775e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f10e7759ba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f10e7759ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7756550"/>
        <function-ref name="fired" scoped="" ref="0x7f10e77571f0"/>
        <function-ref name="get" scoped="" ref="0x7f10e77587f0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e77576b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7756a10"/>
        <function-ref name="set" scoped="" ref="0x7f10e7758cb0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7757b70"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7756090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f10e7754120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f10e7754120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f10e7752a90"/>
        <function-ref name="fired" scoped="" ref="0x7f10e7753770"/>
        <function-ref name="get" scoped="" ref="0x7f10e7754d50"/>
        <function-ref name="reset" scoped="" ref="0x7f10e7753c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7750020"/>
        <function-ref name="set" scoped="" ref="0x7f10e7753260"/>
        <function-ref name="start" scoped="" ref="0x7f10e7752110"/>
        <function-ref name="stop" scoped="" ref="0x7f10e77525d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e776bb90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e776bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e7764020"/>
        <function-ref name="test" scoped="" ref="0x7f10e7766550"/>
        <function-ref name="get" scoped="" ref="0x7f10e77687f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e77644e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e77649f0"/>
        <function-ref name="reset" scoped="" ref="0x7f10e77676b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e77671f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e7766a10"/>
        <function-ref name="set" scoped="" ref="0x7f10e7768cb0"/>
        <function-ref name="start" scoped="" ref="0x7f10e7767b70"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7766090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f10e76d7c60" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f10e76d7c60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f10e8c489c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f10e8c489c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f10e76d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f10e76d5410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e76d5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e76d2810"/>
        <function-ref name="test" scoped="" ref="0x7f10e76d3e60"/>
        <function-ref name="get" scoped="" ref="0x7f10e76d4090"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e76d2cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e76d0260"/>
        <function-ref name="reset" scoped="" ref="0x7f10e76d3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e76d4a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e76d2350"/>
        <function-ref name="set" scoped="" ref="0x7f10e76d4550"/>
        <function-ref name="start" scoped="" ref="0x7f10e76d34e0"/>
        <function-ref name="stop" scoped="" ref="0x7f10e76d39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e76ce3c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e76ce3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f10e8b727b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e76cd240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e76cdbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e76cd700"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e76cb0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f10e76cb660" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e76cb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f10e76c7a90"/>
        <function-ref name="test" scoped="" ref="0x7f10e76c7110"/>
        <function-ref name="get" scoped="" ref="0x7f10e76ca3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f10e76c6020"/>
        <function-ref name="getScale" scoped="" ref="0x7f10e76c6530"/>
        <function-ref name="reset" scoped="" ref="0x7f10e76c92a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e76cada0"/>
        <function-ref name="isOn" scoped="" ref="0x7f10e76c75d0"/>
        <function-ref name="set" scoped="" ref="0x7f10e76ca890"/>
        <function-ref name="start" scoped="" ref="0x7f10e76c9760"/>
        <function-ref name="stop" scoped="" ref="0x7f10e76c9c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f10e76bf0f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f10e76bf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f10e8b727b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e76bd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e76bd9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e76bd4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e76bde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f10e76c2cd0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f10e76c2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb6d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f10e8bb5180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f10e76c1b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f10e76c0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f10e76c0090"/>
        <function-ref name="overflow" scoped="" ref="0x7f10e76c0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f10e76b11e0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f10e76b11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f10e76b1560"/>
        <function-ref name="offset" scoped="" ref="0x7f10e76b16f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f10e76b1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f10e76a2bd0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.t1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f10e76a2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f10e8bb89b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f10e8bb8d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f10e7696110"/>
        <function-ref name="fired" scoped="" ref="0x7f10e76986a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f10e76974a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f10e7697020"/>
        <function-ref name="getdt" scoped="" ref="0x7f10e7696a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f10e7696590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f10e7698b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f10e769a860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f10e7697ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f10e769ad30"/>
        <function-ref name="stop" scoped="" ref="0x7f10e7698220"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f10e8b2bd00" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f10e8b2c8e0" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f10e8b20b70" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f10e8b208f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f10e8b23020" loc="31:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f10e8b23aa0" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f10e8b23820" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f10e8b225e0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f10e8b22360" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f10e8b20020" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f10e8b0f0e0" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f10e8b0f810" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f10e8b102b0" loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f10e8b0d760" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e8b109b0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f10e8b0d020" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8b114c0" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f10e8b11b90" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f10e95fbc40" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f10e8c28bf0" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f10e8c283e0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f10e8c20c50" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f10e8c1e4f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f10e8b6bac0" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f10e8b4b1f0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f10e8be2470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f10e8b83b80" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f10e87ab110" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f10e87ace40" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f10e87aa600" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f10e87aa380" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f10e87ac460" loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e87ab960" loc="130:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f10e87299f0" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e8729770" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f10e87346d0" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e8734450" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f10e8742ad0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f10e8735600" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e8735380" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f10e8731020" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e8730a00" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e8730d50" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f10e8733ac0" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e87334e0" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e8733830" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f10e872d4a0" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e872d220" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f10e872c850" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e872c2a0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f10e872c5c0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f10e8954c10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f10e872e2a0" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e872e020" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f10e872b020" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f10e87288c0" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f10e8728c10" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f10e872be40" loc="195:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f10e873f910" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e873f690" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f10e873d9d0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e873d750" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f10e8739020" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e873a910" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e873ac40" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f10e873a020" loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f10e873b020" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e873c8f0" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e873cc20" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f10e8722060" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
              <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e87236d0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f10e8723a20" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e8723d50" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e871b020" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e871b020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f10e8715c50" loc="136:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f10e87185b0" loc="83:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f10e8716360" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f10e8717d60" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f10e87160d0" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f10e87175b0" loc="98:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f10e8713ca0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f10e8713420" loc="144:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f10e8718d90" loc="92:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f10e871bb90" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f10e871b910" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f10e87152f0" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f10e8716d00" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f10e8715060" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f10e871a680" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f10e871a400" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e871ae80" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f10e87492c0" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f10e874b7e0" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f10e874bb60" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e8749020" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f10e8745970" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8745370" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e87456a0" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f10e8744a60" loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f10e8747630" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e87473b0" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e8746b80" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e87465a0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f10e87468f0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f10e8709070" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f10e8709820" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f10e8708030" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f10e8706020" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f10e87057d0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e8704020" loc="117:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f10e87087c0" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8704b90" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f10e8704910" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f10e870a8a0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f10e8706800" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f10e8705020" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f10e863f440" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f10e8642e10" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f10e863f1b0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f10e8633b50" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8633530" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f10e86338c0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f10e8631d00" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8631a80" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f10e8634c60" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f10e86342a0" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f10e8634020" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f10e863bad0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e863b850" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f10e8638cd0" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8638a50" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f10e8637020" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8639ce0" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f10e862a040" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e862bd90" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f10e862e040" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e863c9f0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f10e863cd80" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f10e862b020" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e862dc80" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f10e862d450" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e862edf0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f10e862d1c0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f10e8629020" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e862ad70" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f10e8626ab0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f10e86262a0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f10e8626020" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f10e8625350" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e8630510" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e8630510"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f10e8630750" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e8630750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f10e86215f0" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e8630750"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8621370" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f10e861f780" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e861f500" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f10e8622350" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e86220d0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e861ea90" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e8630750"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e861e4a0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f10e861e800" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e8630750"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f10e86051d0" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f10e86051d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f10e86022e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8602060" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e8604830" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f10e86051d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e86045b0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f10e8605d80" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8605b00" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8601050" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f10e86051d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8602a30" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f10e8602da0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f10e86051d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e85f8a70" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e85f8a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f10e85f43b0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f10e85f62a0" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85f6020" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f10e85d49c0" loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f10e85d5990" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f10e85d5020" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f10e85d41f0" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f10e85d2470" loc="128:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f10e85cfa30" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85cf7b0" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f10e85d05f0" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f10e85cf040" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85d0d90" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f10e85cc4c0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85cde80" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e85cc230" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f10e85cd790" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85cd170" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e85cd500" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f10e85cb860" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f10e87638a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85cb5e0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f10e85c9630" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f10e87638a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85c9020" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f10e85c93a0" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f10e87638a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f10e85cce50" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85ccbd0" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f10e85c9da0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f10e87638a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f10e85dd9b0" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f10e85dd060" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f10e85dd3e0" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e85dd710" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f10e85d8020" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85d9950" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e85d9c80" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f10e85d90e0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f10e85dc790" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85dc510" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e85db750" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85db170" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f10e85db4c0" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f10e8582570" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f10e8597720" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85974a0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f10e8586030" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8587d80" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f10e8584770" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85844f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f10e85887a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8588520" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f10e858a020" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8595d00" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f10e8587600" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8587020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e8587370" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f10e858ad60" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e858a780" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e858aad0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f10e8586d40" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8586760" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f10e8586ab0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f10e85905e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f10e858f020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f10e858c2e0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e858c060" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f10e858fb30" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e858f8b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f10e858d680" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e858d400" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f10e85637a0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f10e85648d0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f10e8765850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f10e8564650" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f10e8765850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f10e8563070" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f10e8567df0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f10e8562020" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f10e8765850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f10e855b550" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e855b2d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f10e855f820" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e855f5a0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f10e855d020" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f10e855e6b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e855e0d0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f10e855e420" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f10e8565c90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8565a10" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f10e855dab0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e855d830" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f10e85ace10" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f10e85ac5f0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85ac370" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f10e85aa9c0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85aa740" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f10e85a92b0" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f10e85a9e30" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85a9bb0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f10e8598020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85a7c90" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f10e859f020" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f10e85a1760" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e85a1150" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f10e85a14d0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f10e85a42a0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85a4020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f10e85a4db0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85a4b30" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f10e85a3d40" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e85a3730" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f10e85a3ab0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f10e85ae8a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f10e85a66f0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85a6150" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f10e85a6460" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f10e85a28e0" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85a2660" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f10e8573d60" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8573ae0" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f10e8574490" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8574210" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f10e8580c40" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8580670" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f10e85809b0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f10e857dd90" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e857db10" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f10e856dbd0" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e856d5f0" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e856d940" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f10e857d2a0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e857d020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f10e85732f0" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8574cf0" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f10e8573060" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f10e857b7d0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e857b1c0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f10e857b540" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f10e856fe20" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e856fba0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f10e857f730" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e857f4b0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f10e85782a0" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8578020" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f10e85796e0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e85790d0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f10e8579450" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f10e856a390" loc="178:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f10e8763cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f10e856c680" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e856c400" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f10e856bb70" loc="173:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f10e87638a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f10e856f3a0" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8570d90" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f10e856f110" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f10e857c910" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e857c690" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f10e85759d0" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8575400" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f10e8575740" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f10e8571b40" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8571570" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f10e85718b0" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f10e856adc0" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e856ab40" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f10e85770c0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8578aa0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f10e8578db0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f10e858be50" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e858bbd0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f10e856b2a0" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e856b020" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f10e85705f0" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8570370" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f10e8577bc0" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8577940" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f10e859cb90" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e859c5b0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f10e859c900" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f10e859a390" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f10e859d2e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e859d060" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f10e859dd70" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e859daf0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f10e8593930" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e85936b0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f10e859ed90" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e859eb10" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f10e85921f0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f10e8592cc0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8592a40" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e84fcd10" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e84fcd10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f10e84f9020" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f10e84f5c50" loc="109:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f10e84f8ba0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f10e84f52b0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f10e84f7bd0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f10e84f5020" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f10e84f73b0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f10e84f4480" loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f10e84f9b80" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f10e84f9900" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e84f9020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e84f83e0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f10e84e5780" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f10e84e40e0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f10e84e4a60" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f10e84e5020" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f10e84ae020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e84b1d50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f10e84adb40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e84ad8c0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e84ad020" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e84ae940" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f10e84aec90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f10e84aa630" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
              <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e84aa370" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f10e8497ba0" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f10e8495b10" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f10e84953b0" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f10e8497360" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f10e849ad00" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f10e8953020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f10e84970d0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f10e83e7540" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f10e83e7e70" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f10e83e1660" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f10e83e8db0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f10e83e9c80" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f10e83e4530" loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f10e83d8740" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f10e83e27a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f10e83d84c0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f10e83e27a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f10e83db750" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f10e83d92a0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f10e83e27a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f10e83d9020" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f10e83e27a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f10e83d9bb0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f10e83e27a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f10e8274790" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
              <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e82744d0" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f10e8277b20" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e82778a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f10e82612e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f10e8261060" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f10e8261a80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e8262020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f10e826ad50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8262960" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f10e82626e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f10e82670b0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f10e8268db0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f10e82665f0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f10e8266370" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f10e8267b80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f10e8267900" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f10e8265110" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f10e8266e20" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f10e82685b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f10e8268330" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f10e8953400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f10e81d3a50" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f10e81cfb70" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f10e81ce610" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f10e81ce390" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f10e81ced90" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f10e81cf350" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f10e81cd670" loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f10e81cb350" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e81cb0d0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f10e81c9850" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e81c9020" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f10e81cbc50" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f10e8155350" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f10e8158ae0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f10e956a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f10e8128360" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f10e8128360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f10e8125020" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f10e8128360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f10e8128c20" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f10e8128360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f10e80fe6c0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e80fe440" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e8101510" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8101290" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f10e81002f0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8101cd0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f10e8100060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8100cc0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e8100a40" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f10e80cc350" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f10e80cc0d0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f10e80d08b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e80484a0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e80484a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f10e80486e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e80486e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f10e8047030" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e80486e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f10e8046190" loc="76:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f10e80478b0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f10e80468f0" loc="82:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f10e8018b20" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f10e80198e0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f10e801c5a0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f10e8018350" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f10e80180d0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f10e8019110" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f10e801ae30" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f10e80175c0" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f10e8017340" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f10e801cd40" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f10e801a710" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f10e801a490" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f10e8007910" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f10e8009880" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f10e8008030" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f10e8008860" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f10e8005190" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f10e80070e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f10e800a5e0" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f10e8b9cda0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f10e8b9b230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f10e8009040" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f10e8b9cda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f10e8b9b230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f10e800ada0" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f10e8b9cda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f10e8b9b230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f10e80140d0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e80140d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f10e80119f0" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f10e8013bf0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e8014a10" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e80140d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f10e8012390" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f10e800f1f0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8013440" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e80140d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f10e80131c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e80140d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f10e8012b00" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e8011270" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f10e802a430" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e802a430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f10e8024020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f10e8025020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e802ad60" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e802a430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f10e8024a00" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f10e8024780" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f10e8023270" loc="110:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f10e80287b0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f10e8028020" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f10e80257e0" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e8029760" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e802a430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f10e80294e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f10e802a430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f10e8027020" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e8027770" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f10e7e14920" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f10e7e14920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f10e7e14b60" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7e14b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f10e7e0e6b0" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7e14b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f10e7e0e430" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7e14b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f10e7e12020" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f10e7e111f0" loc="66:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f10e7e129c0" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f10e7e12740" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f10e7e13760" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f10e7e1a810" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e7e1a590" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f10e7e19bf0" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e7e19970" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f10e7e190e0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f10e7e176c0" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e7e17440" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f10e7d23360" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7d23360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f10e7d1b2a0" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f10e7d1b020" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f10e7d1c020" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f10e7d23ca0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7d23360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f10e7d1f110" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7d23360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f10e7d20e10" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7d23360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f10e7d1f8c0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f10e7d1c7e0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f10e7d20670" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7d23360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f10e7d203f0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f10e7d23360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f10e7d1e070" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e7d1e7c0" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f10e7d012c0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f10e7d028b0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f10e7d02c40" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e7d01020" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e7d00800" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f10e7cffae0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f10e7cffe70" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e7d001e0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f10e7d00550" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f10e7d044c0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f10e7d04240" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f10e7cea560" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f10e7ce04d0" loc="126:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f10e7ce5dd0" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f10e7cdf020" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f10e7ce0c70" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f10e7cecd80" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f10e7ce39e0" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f10e7ce3760" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f10e7ce6510" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f10e7ce6290" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f10e7ce94e0" loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f10e7cdbc20" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f10e7cdb9a0" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f10e7ce6cb0" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f10e7cde2a0" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f10e7cde020" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f10e7cdc270" loc="136:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f10e7ce1c80" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f10e7ce1a00" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f10e7cdb270" loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f10e7ce47d0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f10e7ce4550" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f10e7ce8020" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e7ce9c40" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f10e7ce5670" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f10e7ce53f0" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f10e7ce1270" loc="123:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f10e7cdf790" loc="129:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f10e7cdea00" loc="132:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f10e7cdca20" loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f10e7ce3020" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f10e7ceacf0" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f10e7ce8a20" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e7ce87a0" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f10e7c80e10" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e7c7d6a0" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f10e7c19850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f10e7c17de0" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f10e7c1b8f0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f10e7c14020" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f10e7c15810" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f10e7c15590" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f10e7c18c40" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f10e7c189c0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f10e7c14a20" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f10e7c147a0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f10e7c190e0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f10e7c17610" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f10e7c17390" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f10e7c182a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f10e7c18020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f10e7a542f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e7a57ce0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e7a54060" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f10e7a50890" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e7a50290" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e7a505c0" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f10e7a4f9b0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f10e7a535f0" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e7a53370" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e7a52ac0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e7a524e0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f10e7a52830" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f10e79ef670" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e79ef060" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f10e79ef3e0" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f10e79f2820" loc="15:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f10e79f16d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f10e79f10d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f10e874e8e0"/>
                <typename><typedef-ref name="message_t" ref="0x7f10e874b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f10e79f1440" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f10e79bb760" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f10e79b9020" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f10e79b8e10" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f10e79b86a0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f10e79c3770" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f10e79c2be0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f10e79bf840" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e79bf5c0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f10e79c04a0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f10e79c2350" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e79c20d0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f10e79be0e0" loc="100:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f10e79c0d50" loc="85:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f10e79ca0e0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f10e79caa10" loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f10e79cb720" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f10e79cb4a0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f10e79c95c0" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f10e79c9340" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f10e79c6270" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f10e79c5020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e79c6c10" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f10e79c5af0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f10e79c5870" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f10e7892de0" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f10e7892810" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e7892b50" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f10e788cac0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f10e788c840" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f10e788a930" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f10e788a360" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e788a6a0" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f10e788b740" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f10e78882c0" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f10e7887920" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e7887c60" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f10e7888020" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f10e788c070" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f10e788e720" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f10e788fdb0" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f10e788e130" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f10e956b5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f10e788e480" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f10e78685b0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f10e7868330" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f10e7866430" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f10e7868e20" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f10e78661a0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f10e7853820" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f10e7855910" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f10e7850110" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e7851e60" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f10e7851070" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f10e78589b0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f10e7855190" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f10e78530e0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f10e8c22600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f10e7852020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f10e8c49020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f10e7852950" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f10e78526d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f10e7851790" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f10e956ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
