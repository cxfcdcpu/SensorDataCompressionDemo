<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9475911530"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9475c8ecb0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9475c8ecb0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9475c8bdd0"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f9475910be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f947577b0c0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f947577b0c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9475748300"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f9475910020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9474b9f710"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9474b9f710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9474b2c4e0"/></to>
    </wire>
    <wire loc="93:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f947590b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9474b9c7f0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9474b9c7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9474b93b40"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f947589ee30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9474b9ab20"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9474b9ab20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9474b369e0"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f9475895870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9474b992b0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9474b992b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9474b34720"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f94758859b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9474b98020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9474b98020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9474b35020"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f94758966e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f947577a1d0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f947577a1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9475747320"/></to>
    </wire>
    <wire loc="99:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f9475883a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f94757793f0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f94757793f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9475746510"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f94758826b0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f9475777020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f9475777020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f94757451d0"/></to>
    </wire>
    <wire loc="101:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f9475882d70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9475772ce0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9475772ce0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9475742cd0"/></to>
    </wire>
    <wire loc="102:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f9475881b40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9475776990"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9475776990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9475741990"/></to>
    </wire>
    <wire loc="103:BaseStationC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f947586b410"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f94743179c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f94743179c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f9473ad4790"/></to>
    </wire>
    <wire loc="104:BaseStationC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f947586fc70"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f9474315810"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f9474315810"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f9473ad25d0"/></to>
    </wire>
    <wire loc="105:BaseStationC.nc">
      <from><interface-ref name="vLight" scoped="" ref="0x7f947586a4e0"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7f947423d310"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x7f947423d310"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7f947381fb70"/></to>
    </wire>
    <wire loc="106:BaseStationC.nc">
      <from><interface-ref name="iLight" scoped="" ref="0x7f9475869d30"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7f947423cbc0"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x7f947423cbc0"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7f947381d370"/></to>
    </wire>
    <wire loc="110:BaseStationC.nc">
      <from><interface-ref name="time" scoped="" ref="0x7f9475874e10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94747d7bd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94747d7bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9474fdb320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f947585a0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f94757ab260"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f94757ab260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f94757a7bc0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f94737e83b0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f947384f400"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f94739093b0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f947393e590"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f94739a6cf0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f94739ff810"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f9474928d80"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f9474922ce0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9474950020"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9474b2fe60"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9473c00420"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9474f66b60"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9475193540"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f947525bdc0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9473d58e60"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f94753793b0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9473d8b560"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9473e4a3b0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9475ac6470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9475dd1020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9475dd1020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9475ccf8a0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9475ac4020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9474e59680"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9475ac4020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9474f66020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9475ac4020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9475c89b10"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9475c89b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9475c7f0c0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475ac4720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9475c87d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f947480bc60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9475c87d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9474ca0b50"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9475c87020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9475ae5690"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f9475c7e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9475ae5020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9475c7f7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9475783920"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9475c7f7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9475c819e0"/></to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9475c819e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9475c76530"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9475c79110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9475c87d50"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f9475c6fad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f9475c64060"/></to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9475c64060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9475bd8da0"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9475c75cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9475c79110"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9475c2ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9475b3d160"/></to>
    </wire>
    <wire loc="165:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9475c4a4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9475bac2b0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9475bac2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740ace20"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9475c3d350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9475b9b8f0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9475b9b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740383f0"/></to>
    </wire>
    <wire loc="185:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9475c34cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9475b8bc10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9475b8bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fcd3f0"/></to>
    </wire>
    <wire loc="196:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9475c27060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9475b236d0"/></to>
    </wire>
    <wire loc="143:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9475c62670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9475bd42b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9475bd42b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741e1e20"/></to>
    </wire>
    <wire loc="183:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9475c36670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9475b8d8f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9475b8d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fd4e20"/></to>
    </wire>
    <wire loc="146:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9475c60cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9475bcda20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9475bcda20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9474185c90"/></to>
    </wire>
    <wire loc="157:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9475c53cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9475bba020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9475bba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741130a0"/></to>
    </wire>
    <wire loc="168:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9475c47e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9475ba9760"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9475ba9760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740a26d0"/></to>
    </wire>
    <wire loc="179:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9475c3acb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9475b97da0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9475b97da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947402fe20"/></to>
    </wire>
    <wire loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9475c68800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9475bdb8f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9475bdb8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741f2e20"/></to>
    </wire>
    <wire loc="149:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9475c5b670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9475bc8020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9475bc8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947417b3f0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9475c4f670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9475bb75d0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9475bb75d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947410a9b0"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9475c43670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9475ba5c10"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9475ba5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740980a0"/></to>
    </wire>
    <wire loc="188:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9475c30670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9475b872b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9475b872b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fc4e20"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9475c2ab20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9475b2d160"/></to>
    </wire>
    <wire loc="174:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9475c41cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9475b9d5d0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9475b9d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947403fe20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9475bd8da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741e86d0"/></to>
    </wire>
    <wire loc="152:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9475c57020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9475bc55d0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9475bc55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9474172e20"/></to>
    </wire>
    <wire loc="192:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9475c2c4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9475b39c90"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9475c55670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9475bbdd30"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9475bbdd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947411ac90"/></to>
    </wire>
    <wire loc="166:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9475c49800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9475bab440"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9475bab440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740a80a0"/></to>
    </wire>
    <wire loc="177:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9475c3c670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9475b99a80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9475b99a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740356d0"/></to>
    </wire>
    <wire loc="186:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9475c32020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9475b8ada0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9475b8ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fca6d0"/></to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9475c61990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9475bd3440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9475bd3440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741dd0a0"/></to>
    </wire>
    <wire loc="147:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9475c5e020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9475bccc10"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9475bccc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9474182e20"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9475c51020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9475bb92b0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9475bb92b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741103f0"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9475c45060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9475ba88f0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9475ba88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947409f9b0"/></to>
    </wire>
    <wire loc="180:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9475c38020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9475b95020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9475b95020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947402b0a0"/></to>
    </wire>
    <wire loc="139:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9475c67b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9475bdaa80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9475bdaa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741ee0a0"/></to>
    </wire>
    <wire loc="150:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9475c5a990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9475bc72b0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9475bc72b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741786d0"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9475c4e990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9475bb6760"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9475bb6760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9474107e20"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9475c2f990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9475b86440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9475b86440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fc00a0"/></to>
    </wire>
    <wire loc="164:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9475c4b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9475bad020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9475bad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740afc90"/></to>
    </wire>
    <wire loc="175:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9475c3e020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9475b9c760"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9475b9c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947403b0a0"/></to>
    </wire>
    <wire loc="184:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9475c35990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9475b8ca80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9475b8ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fd00a0"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9475c29e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9475b29c90"/></to>
    </wire>
    <wire loc="142:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9475c63350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9475bd5020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9475bd5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741e59b0"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9475c56350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9475bc4760"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9475bc4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947416d0a0"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9475c37350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9475b8f7a0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9475b8f7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fd7c90"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9475c54990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9475bbce60"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9475bbce60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9474117e20"/></to>
    </wire>
    <wire loc="167:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9475c48b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9475baa5d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9475baa5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740a53f0"/></to>
    </wire>
    <wire loc="178:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9475c3b990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9475b98c10"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9475b98c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94740329b0"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9475c31350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9475b88020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9475b88020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9473fc79b0"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9475c77550"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9475bdc6b0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9475bdc6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741f5b00"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9475c5d350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9475bcada0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9475bcada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947417e0a0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9475c50350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9475bb8440"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9475bb8440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947410d6d0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9475c44350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9475ba7a80"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9475ba7a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f947409ce20"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9475c2b800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9475b336d0"/></to>
    </wire>
    <wire loc="173:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9475c42990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9475b9e3f0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9475b9e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9474042c90"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9475c4dcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9475bb58f0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9475bb58f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741020a0"/></to>
    </wire>
    <wire loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9475c66e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9475bd9c10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9475bd9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741eb3f0"/></to>
    </wire>
    <wire loc="151:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9475c59cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9475bc6440"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9475bc6440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f94741759b0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475cce850"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9475ccdde0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9475d89a30"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9475cad690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f94750daa70"/></to>
    </wire>
    <wire loc="146:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f947584c810"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f947584b730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9475783920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f94757a75c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f94757a53c0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f94757860f0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f94757860f0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f9475c67b20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f94757a4660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9475785380"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9475785380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f9475c68800"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f94757a3980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f94757846a0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f94757846a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f9475c77550"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9475748300"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f94757208f0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f94757726d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f9475745d60"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f9475745d60"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f947571a4d0"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9475742cd0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f9475716ba0"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9475747320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f947571d980"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f94757451d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f947571b900"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f94757668a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f947573fb40"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f947573fb40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f94756fc080"/></to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9475746510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f947571ccb0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f947576ce00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f947573f1a0"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f947573f1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475705670"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f947575ebf0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f947573e790"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f947573e790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f94756fcb70"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9475741990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9475718470"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f94757598e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f947573d480"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f947573d480"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f94756fb930"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f94757509e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9475728130"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9475728130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f94756ee130"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f947574faf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9475724270"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9475724270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f94756ea3f0"/></to>
    </wire>
    <wire loc="215:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f94757208f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f947532a880"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f94757313b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f94756f3020"/></to>
    </wire>
    <wire loc="305:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f94756f3020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f9474f853b0"/></to>
    </wire>
    <wire loc="270:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f94756ea3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9474fd3d00"/></to>
    </wire>
    <wire loc="124:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f947571a4d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f9475542420"/></to>
    </wire>
    <wire loc="126:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f9475716ba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f94755458b0"/></to>
    </wire>
    <wire loc="121:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f947571d980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f94755446c0"/></to>
    </wire>
    <wire loc="123:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f947571b900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f9475543c90"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f947573ae80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f94756f7a90"/></to>
    </wire>
    <wire loc="303:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f94756f7a90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f9474f89e80"/></to>
    </wire>
    <wire loc="216:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f94756fc080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f9475313270"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f947571ccb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9475543530"/></to>
    </wire>
    <wire loc="269:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f94756ee130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9474fd0bb0"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9475729b70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f94756f0bb0"/></to>
    </wire>
    <wire loc="307:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f94756f0bb0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474f7ba40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f94757368d0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f94756fa540"/></to>
    </wire>
    <wire loc="304:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f94756fa540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f9474f7fe70"/></to>
    </wire>
    <wire loc="248:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475705670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475215b60"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9475744a50"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f94757191d0"/></to>
    </wire>
    <wire loc="128:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f94757191d0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9475542b80"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f94756fcb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f9475337ba0"/></to>
    </wire>
    <wire loc="125:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9475718470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9475546280"/></to>
    </wire>
    <wire loc="224:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f94756fb930"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f94752a0700"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f947572be60"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f94756f0350"/></to>
    </wire>
    <wire loc="306:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f94756f0350"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9474f7b1e0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f94757426c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f9475719df0"/></to>
    </wire>
    <wire loc="129:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f9475719df0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f94755403e0"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f947532a880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f9475313d90"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f9474f853b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f9474f5e0d0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f9475713160"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f947548dd30"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f947570c2c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94754c2390"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f94754c2390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9473e489d0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f9475542420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f9473ea23a0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f94755446c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9473ea4530"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f9475543c90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f9473ea3b00"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f94756fd490"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f94753b6c40"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f94753b6c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f9473ddc470"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f9475706890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f94754bce00"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f9474f89e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f9474f62b90"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f9475313270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f9473d61da0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f94755458b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9473ea5720"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9475543530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9473ea33a0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9474fd0bb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9473cc9630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474f7ba40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474e5d060"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f9474f7fe70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f9474f58c80"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f947570dc10"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f947548ea50"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9475542b80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9473ea2b00"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f9475337ba0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f9475331020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f94752a0700"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f9473d563d0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9475546280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9473ea6020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9474fd3d00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9473ccd6f0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f94757149d0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f947548d760"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9474f7b1e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9474f54020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f94755403e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f9473ea13e0"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f947569d880"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f94753b9b20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f94753b9b20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f9473ddf3a0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f9475697780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f94756336b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f947569ae40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9474fd0bb0"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f9475690ce0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f8ad90"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f8ad90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f63aa0"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f94755f7820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9474f7add0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9474f7add0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9474e63c80"/></to>
    </wire>
    <wire loc="116:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f947553e8c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f94756b9e30"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f947553f8f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f9475536550"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f947553e2b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f947544c770"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9475540a70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f947544cd80"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9475527910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94754c2390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9475527020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f947544ee00"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f947548c390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f94753b9b20"/></to>
    </wire>
    <wire loc="154:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f94754882b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f947544f0a0"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9475488be0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f947544f9d0"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f9475489470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f947544e020"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f947544bc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f94753482f0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f94753482f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9473d8c4e0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f947544a5d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f94753375d0"/></to>
    </wire>
    <wire loc="114:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f94753375d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9475334120"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f947544abe0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f94753b3020"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f94753b3020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9473ddb720"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f94753b3e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f94753368b0"/></to>
    </wire>
    <wire loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f94753368b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f9475334730"/></to>
    </wire>
    <wire loc="181:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f94753465a0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f94756cf980"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f94753474a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9475342bb0"/></to>
    </wire>
    <wire loc="113:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9475342bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f94753357c0"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475332590"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475215b60"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f94753357c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9475316440"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9475316440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f94753128c0"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9475334120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9475316d70"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9475316d70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f94753112b0"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9475334730"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f94753143d0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f94753143d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f94753118c0"/></to>
    </wire>
    <wire loc="211:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f9475313d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f94752a2cc0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f94752a2cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9473d583a0"/></to>
    </wire>
    <wire loc="212:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f94753128c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f94752a17e0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f94752a17e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9473d574a0"/></to>
    </wire>
    <wire loc="213:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f94753112b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f94752a0130"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f94752a0130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9473d57dd0"/></to>
    </wire>
    <wire loc="214:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f94753118c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9474fcc7e0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f9474fcc7e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9473cc53b0"/></to>
    </wire>
    <wire loc="221:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f947529fe20"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f9475298db0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f9475298db0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f9473d19140"/></to>
    </wire>
    <wire loc="222:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f947529e730"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9475348be0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f9475348be0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9473d8cdd0"/></to>
    </wire>
    <wire loc="223:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f947529f080"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f9474f9dc20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f9474f9dc20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f9474f97410"/></to>
    </wire>
    <wire loc="228:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9475347dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f94752476f0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f94752476f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9473d19a30"/></to>
    </wire>
    <wire loc="237:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9475245d30"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f94756c6340"/></to>
    </wire>
    <wire loc="238:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9475246020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f947523eac0"/></to>
    </wire>
    <wire loc="239:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9475246950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9475215400"/></to>
    </wire>
    <wire loc="240:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f94752450e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f94756336b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f94752105d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f9474fc39b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f9475212780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f94756336b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9475211440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f94756d44f0"/></to>
    </wire>
    <wire loc="253:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9475214630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f94751f4720"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f94751f4720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f94751ee020"/></to>
    </wire>
    <wire loc="254:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9475212020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f94751f3060"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f94751f3060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f94751ee950"/></to>
    </wire>
    <wire loc="259:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f94751eb760"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f94756c0a40"/></to>
    </wire>
    <wire loc="260:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f94751ee020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f9474f9ca40"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f9474f9ca40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f9474f95440"/></to>
    </wire>
    <wire loc="261:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f94751ee950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f9b400"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f9b400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9474f95d70"/></to>
    </wire>
    <wire loc="262:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f94751ec120"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f8a5c0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f8a5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f632d0"/></to>
    </wire>
    <wire loc="267:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474fcb760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474f7ba40"/></to>
    </wire>
    <wire loc="268:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9474fc9800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9474fc2590"/></to>
    </wire>
    <wire loc="271:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f9474fc8760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f9474fc39b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9474fa24a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f8ad90"/></to>
    </wire>
    <wire loc="286:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9474f93b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f94756c0a40"/></to>
    </wire>
    <wire loc="287:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9474f95440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f9474f8b460"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f9474f8b460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f9474f64120"/></to>
    </wire>
    <wire loc="288:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9474f95d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f8bdd0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f8bdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f64a90"/></to>
    </wire>
    <wire loc="289:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f9474f97410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f9474f8e610"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f9474f8e610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f9474f652e0"/></to>
    </wire>
    <wire loc="301:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9474f751f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f94756dd350"/></to>
    </wire>
    <wire loc="302:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9474f742e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9474fd0bb0"/></to>
    </wire>
    <wire loc="309:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f9474f70110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f9474fc39b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f9474f70ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f9474fc39b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f9474f6f8d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f9474fc39b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f9474f6e470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f94756336b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f94756336b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f9473ec4c30"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9473ec3b50"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f94755f7820"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f9473ec0d90"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f9475600130"/></to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <from><interface-ref name="tasklet" scoped="" ref="0x7f94755ff740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9473e9da40"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f947555d5a0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9473ea1a70"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f9475540a70"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9473ea08f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f947553f8f0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9473e9f2b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f947553e2b0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9473e9f8c0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f947553e8c0"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f94754c1150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9473e47850"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94754c18d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9473e46020"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9473e46910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94754bf1f0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9473e45120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9473e4a9c0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9473e45c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9473dda5f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f947555d5a0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9473dd8120"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f94753b3e60"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f9473d887e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f947537de30"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f947537de30"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f9475379a00"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9473d87410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9473d85d40"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9473d85d40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9475376d10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9473d8bbd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f94753474a0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9473d895d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9475347dd0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f9473d89d30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f94753465a0"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f9475331cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475332590"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f9473d56d20"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f947529f080"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f9473d55b00"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f9475600130"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f9473d545a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f947529fe20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f9473d53020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f947529e730"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f9473d52020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f9473d52800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f9473d53800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9473d18310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f9475246020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9473d16800"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f9475245d30"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9473d18c40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9475246950"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f9473d17400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f94752450e0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f9473d16060"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f947525c850"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f947525c850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f9475256850"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f9473d15480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f947525a6a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f94752576c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9475261710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f947525bdc0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f94751f8d60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f94751f14b0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f94751f37c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f94751ec120"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f94751f6840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f94751ef020"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f94751f2020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f94751ec8c0"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f94751f2e00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f94751eb760"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f94751f6270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f94751f0950"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f94751f7880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f94751f0020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9473cc02b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f9474fc9800"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9473cc3020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474fcb760"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f9473cc21e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9475197a60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9475197a60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f947518b7d0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f9473cc4310"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f9474fc8760"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f947518b7d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9474fef790"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f947518f320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9474ffd150"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9475193540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9475185020"/></to>
    </wire>
    <wire loc="35:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9475185020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f947507b080"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9474ff7640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f947504ccf0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f94750461d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9475185a10"/></to>
    </wire>
    <wire loc="36:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9475185a10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f947507b890"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9474feea60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f947517f060"/></to>
    </wire>
    <wire loc="37:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f947517f060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9475078bc0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9475078bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9473c9bb80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f947507b080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9473c9f020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f947507b890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9473c9f830"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9473c99dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94750f6c70"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94750f6c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94750e4020"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9473c92190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f94750ee020"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f94750ee020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f94750df2b0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9473c913e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f94750ed520"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f94750ed520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f94750de6b0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f9473c8e780"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f94750e9a40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f94750e9a40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f94750d9230"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f9475042490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9474ff2a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9474fdb320"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f947518f320"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9474f9f2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f9474f99920"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f9bb60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f9474f945a0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f9a400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f9474f94d40"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f9474f992b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f9474f93b40"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f9474f9d650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f9474f98d70"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f9474f9fd30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f9474f98440"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9474e63c80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9474c566e0"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9474f82940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9474f5b630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474e5d060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9474c4e3a0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f9474f42340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f9474f751f0"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f9474f41110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f9474f70110"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f9474f41ca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f9474f70ca0"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f9474f408d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f9474f6f8d0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9474f3f780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9474f742e0"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9474f451a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474e5d060"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f9474f3a2e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f9474f6e470"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f9474f54760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f9474e6be10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f9474e6be10"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f9475c60cb0"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f9474f53b50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f9474e67060"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f9474e67060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474e3a850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474f4caa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e67ce0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e67ce0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e3b020"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f9474f51670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f9474e66880"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f9474e66880"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f9475c56350"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f9474f50980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f9474e65b10"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f9474e65b10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f9475c62670"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f9474f46550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f9474e64e30"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f9474e64e30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f9474e5ca10"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f9474f3b6b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f9475600130"/></to>
    </wire>
    <wire loc="112:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9474f43d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9474bfc9a0"/></to>
    </wire>
    <wire loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f9474eaa8b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9474c566e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9473bce610"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e3b020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e2d480"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9474c4e3a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9474c07b60"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f9474e4d3d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f9475c44350"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f9474e4c680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f9475c47e40"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f9474e507f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9474d50530"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f9474d50530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9474d35850"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f9474e31ae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f9474e2c020"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9474e39840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9474e2ee00"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9474e3c1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9474e2e7e0"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474e3a850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474e2cd20"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f9474e0e430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474d64210"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474d64210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9473bfd9d0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474e0c130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474d637a0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474d637a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9473bfb020"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f9474e2a020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f9474dbe3e0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f9474dbe3e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f9474db8350"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f9474e0c920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9475cb0020"/></to>
    </wire>
    <wire loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f9474deb190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f9474dafe50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9475cb0020"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f9474db4390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f9475c60cb0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f9474db3650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f9475c5e020"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f9474db1800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f9475c5d350"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f9474db0b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f9475c5b670"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9474d63020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9473bfc850"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9473bfb910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9474d620d0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9473bfa120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9473c00a30"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9473bfac20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9474d49d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9474d36020"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9474d5ab20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9474d3eb90"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9474d44650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f9474d305a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9474d44650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f9474d2cba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9474d44650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f9474d27120"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f9473bcba30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9474d5ab20"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f9473bb5db0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9474d44650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9474c93410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9474d5ab20"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9474c06e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9474c0ecf0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f9474c0a0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9474c4a200"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9474c4a200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9474c33020"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9474c31280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9474d5ab20"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9474b2c4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9474b04b70"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9474b97800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9474b33400"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9474b2fe60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9474b04520"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9474b29940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9474b96300"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9474b33d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9474b2a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9474b31a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9474b2b4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f9474b29020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f94747e61e0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9474b2a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f94749d3de0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9474b2b4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f94749d36c0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f94749d1c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f9474b29020"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9474afc430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9474b29940"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f94749cf920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9474b29940"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f94749c6cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9474b29940"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f94749d0590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f9474b01080"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f94749d0e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f9474afda40"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f9474af3410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f94749cbe10"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f9474aee530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f94749a0150"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f94749a0150"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9474999020"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f94749bdd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f94749a0960"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f94749a0960"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f9474998080"/></to>
    </wire>
    <wire loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f9474a9de40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f9474ad4d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f9474a9f400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f9474a980c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f94749cd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f94749cd800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f947499bd50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f9474999820"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f9474999820"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f9474950dd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f9474998080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f947494f5a0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f9474999020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9474950630"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9474997360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f94748bfbb0"/></to>
    </wire>
    <wire loc="33:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f94748bfbb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f94747f7cd0"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f947494bcc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9474997360"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f947494e610"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f947492d480"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f947492d480"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9474925550"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f947494edf0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f947492dd20"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f947492dd20"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9474925e30"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f947494c620"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f947492c5f0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f947492c5f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f9474923730"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f947492add0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f9474920650"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f947492bb80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f9474921470"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f947492a540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f9474921d50"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f947491fb30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9475c87020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f947491e980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9475cb0020"/></to>
    </wire>
    <wire loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f94747f30f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f94748b9c50"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f94748b9c50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f94748033c0"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9474800660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94748b4b30"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94748b4b30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94748a0b90"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f94748addc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9474898020"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f94748ab530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9474897850"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f94748a6650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f94748925a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f94748a6650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f947488eba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f94748a6650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f9474889120"/></to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f947480a410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94748b4b30"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f9474312020"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f9473ad3e30"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f94743150a0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f9473ad4020"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f9473ad1c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474776020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f9473ace7a0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f94747752c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f9473acf9b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474776020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f9473acdc50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f94747752c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f94747752c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f94746f7c90"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474776020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94746e21d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f94746e21d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474578210"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f94746f52f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f94746e1020"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f94746e1020"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f94746ceca0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f94746f4480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f94746e0370"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f94746e0370"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7f94746d74d0"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f94746f2610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f94746df730"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f94746df730"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f94746ca560"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94746f1240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94743286a0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94743286a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9474fdb320"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f94746ec450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f94757ab260"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f94746ea2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f94746ebac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f94746ca560"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f9474623b50"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7f94746d74d0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7f9475c51020"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f94746ceca0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f9475c38020"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474578210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94739fb020"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f94745fe190"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f94746ceca0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f94745fd380"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7f94746d74d0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f947460d110"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f94745ddc10"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94745ddc10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9474fdb320"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9474571a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f947460e460"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94745448b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474576400"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474576400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94739f9270"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474545b60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94745777a0"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94745777a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94739fa560"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f94745ff730"/></from>
      <to><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f94745398a0"/></to>
    </wire>
    <wire loc="124:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f94745398a0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f94743495d0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f9474606590"/></from>
      <to><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f9474538700"/></to>
    </wire>
    <wire loc="125:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f9474538700"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f94743482b0"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f9474602410"/></from>
      <to><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f9474534020"/></to>
    </wire>
    <wire loc="130:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f9474534020"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f94743402b0"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f94745fc630"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474530b70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f94746ccd00"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f947462a680"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7f94746c37b0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7f94746c0d10"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7f94746d4c90"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7f9475c4e990"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7f94746c5bf0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f94746bc1a0"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7f94746c2a00"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f94746bb020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f94746d0660"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f9475c3b990"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7f94746c76a0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f9475c48b20"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7f94746da020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f9475c54990"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7f94746d67e0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7f9475c50350"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7f94746c3e60"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f94746bd410"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7f94746c8380"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f9475c49800"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7f94746d2020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7f9475c4dcb0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f94746cc020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f947463cb50"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7f94746c1350"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f94746bb6d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f94746cf980"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f9475c3acb0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7f94746d9330"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7f9475c53cb0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7f94746d5980"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7f9475c4f670"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7f94746c5540"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f94746bdac0"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7f94746c2350"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f94746bc850"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f94746d1340"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f9475c3c670"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f94746cb900"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f9474626120"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7f94746c9130"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f9475c45060"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7f94746c1a00"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7f94746bbd80"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7f94746deca0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f9475c55670"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f947462d7a0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7f94746a5b70"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f94746a5b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9474657d60"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f94746292f0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7f94746a4b70"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f94746a4b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9474653c90"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f9474626c20"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f94746a3b70"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f94746a3b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f947464fc90"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f94746227a0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7f94746a2b70"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f94746a2b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f947464ac90"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f94746acd10"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9474664260"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f94746abc30"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f947465f0a0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f94746a7e20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f947467c3f0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f94746a6b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f947465b020"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f94746672f0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f947469ba00"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9474662100"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f947469d230"/></to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f947465e020"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f947469d9b0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f947465be40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f947469c150"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9474656c20"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f947469c8d0"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9474652b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f94746990b0"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f947464eb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f9474699830"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9474649b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f9474698020"/></to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9474577020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f94739fbd80"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94739f9b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9474576cd0"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f94739f8440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f94739ffe20"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f94739f57a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f94739c5b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9474571a10"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f94739c4720"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9474545590"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94739c4cf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474545b60"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94739c3930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94745448b0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f94739c1160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f94739c1940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f947453ce00"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f947434c020"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f947434c020"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f9473967970"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f947453d270"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f947434e5d0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f947434e5d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f94739680a0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f94743482b0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f9473964c70"/></to>
    </wire>
    <wire loc="129:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f9474535190"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f94743415d0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f94743415d0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f9473879ab0"/></to>
    </wire>
    <wire loc="121:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f947453bbe0"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f947434cc70"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f947434cc70"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f94739665e0"/></to>
    </wire>
    <wire loc="123:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7f947453aac0"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f947434a8f0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f947434a8f0"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f94739652b0"/></to>
    </wire>
    <wire loc="135:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7f94745318c0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f947433c5d0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f947433c5d0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7f94738749b0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f94743402b0"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7f9473878760"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f94743495d0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f9473964020"/></to>
    </wire>
    <wire loc="131:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelEepromPower" scoped="" ref="0x7f9474534da0"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f947433f020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f947433f020"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7f9473877440"/></to>
    </wire>
    <wire loc="127:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7f9474537560"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f9474343b90"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f9474343b90"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f947387a1f0"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f947453c060"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f947434d2b0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f947434d2b0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7f9473968cf0"/></to>
    </wire>
    <wire loc="115:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474530b70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f947452c020"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947452c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94739a3540"/></to>
    </wire>
    <wire loc="128:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Channel2PowerNull" scoped="" ref="0x7f94745363d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f94743428f0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f94743428f0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f947387ae40"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f947453e4c0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f947434f910"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f947434f910"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f94739693f0"/></to>
    </wire>
    <wire loc="132:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f9474533d00"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f947433fc70"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f947433fc70"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7f94738760c0"/></to>
    </wire>
    <wire loc="133:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f9474532aa0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f947433e8f0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f947433e8f0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7f9473876d10"/></to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f947452cd80"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f94739a23a0"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f947452b560"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94739a2b20"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f947452a270"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94739a18b0"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94739a0210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f947452ab40"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f94739a09d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f94739a5330"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f947399dc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f9473964020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f94739680a0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f94739665e0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f9473964c70"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f9473968cf0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f94739652b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f94739693f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f9473967970"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9473963a30"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9473959020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9473959020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9474490a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947395e7b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f947395a120"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947395a120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474491530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9473946790"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9473963a30"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9473941400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f947395e7b0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9473940060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f94757ab260"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f947393ebe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7f947393d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474491530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94744728b0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9474490a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f947443c820"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f94744376c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474488a80"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474488a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9473907c80"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f94744365a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f94743c7e30"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f94744312a0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f94743c2ba0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9474481020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f94743c7570"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474481d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474486020"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474486020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9473905270"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f94743c12f0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f94743b7500"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f94743b7500"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f94743b1020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f94743bfc50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9474374870"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f94743bd2f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9474374870"/></to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9474487850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9473906a60"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474486c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9473905e80"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9473904790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9474485570"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9473902020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f94739099c0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9473900160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f94743afb80"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f9475c4b020"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f94743aee50"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9475c4a4e0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7f9473876d10"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f947387ae40"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7f9473877440"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7f94738749b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7f9473879ab0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7f94738760c0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f947387a1f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7f9473878760"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f94738738a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f947386bd90"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f947386bd90"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9474490a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947386f550"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f947386b020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947386b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474491530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9473857540"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f94738738a0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9473852260"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f947386f550"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9473852e70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f94757ab260"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f947384fa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7f947384e2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLResource" scoped="" ref="0x7f947381baa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94742dfcb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLRead" scoped="" ref="0x7f94738195a0"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7f94742deb90"/></to>
    </wire>
    <wire loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="VLight" scoped="" ref="0x7f94742deb90"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7f94742add60"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRResource" scoped="" ref="0x7f947381a7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94742dfcb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRRead" scoped="" ref="0x7f9473818da0"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7f94742db480"/></to>
    </wire>
    <wire loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="IRLight" scoped="" ref="0x7f94742db480"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7f94742aa580"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f94742dfcb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f947429dc90"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947429dc90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474266510"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f94742a9d10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9474248b70"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9474248b70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9474490a20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f94742a4a50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474249dc0"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474249dc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474491530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f94742a37a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x7f94742a2800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f94742a2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474266510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f94737e5c80"/></to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f94742615b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9474299870"/></to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f947425e270"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94742648b0"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94742648b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94737e3e80"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474260630"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474265b20"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474265b20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94737e3270"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7f9474298580"/></from>
      <to><interface-ref name="ChannelLightPower" scoped="" ref="0x7f9474537560"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f947428c7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474530b70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f94742964d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f947425a3d0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f947425a3d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9474fdb320"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9474292ae0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9474253d90"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9474253d90"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9474490a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f947428d9b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474253020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9474253020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9474491530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x7f94742872a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7f94742882a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f94742653a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f94737e4a60"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94737e2790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94742631f0"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f94737e1020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f94737e89c0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f94737df160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f94737ae400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f94742615b0"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f94737aee80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9474260060"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94737ad470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474260630"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94737ac0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f947425e270"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f94737ac8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f94737ab100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="63:BaseStationP.nc" safe="">
      <documentation loc="596:ZCompression_new.h">
        <short>*</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9475176120"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f9475cd4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f9475cd4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f9475cd47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f9475cd47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f9475cd20d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.t1" loc="44(BaseStationC.t1):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.SensirionSht11C" loc="45(BaseStationC.SensirionSht11C):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP" loc="45(BaseStationC.SensirionSht11C.SensirionSht11ReaderP):/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715.h">
        <short>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.</short>
        <long>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to the mts420CA sensorboard and the adg715 that connects&#10; the communication wires.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC" loc="89(Adg715C.FcfsArbiterC):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Adg715.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Queue" loc="42(Adg715C.FcfsArbiterC.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Arbiter" loc="52(Adg715C.FcfsArbiterC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm" loc="41(Adg715C.Comm):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC" loc="42(Adg715C.Comm.Adg715ControlC):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Comm.Adg715ControlC.Adg715ControlP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm.Atm128I2CMasterC" loc="43(Adg715C.Comm.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Adg715C.Power" loc="41(Adg715C.Power):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC" loc="42(Adg715C.Power.Adg715ControlC):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Power.Adg715ControlC.Adg715ControlP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Power.Atm128I2CMasterC" loc="43(Adg715C.Power.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.Taos2550C" loc="36(BaseStationC.Taos2550C):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.Taos2550C.Taos2550ReaderP" loc="34(BaseStationC.Taos2550C.Taos2550ReaderP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalTaos2550C" loc="34:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Taos2550LogicP" loc="36(HalTaos2550C.Taos2550LogicP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTaos2550P" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter" loc="89(HplTaos2550C.Arbiter):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Taos2550.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Queue" loc="42(HplTaos2550C.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Arbiter" loc="52(HplTaos2550C.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC" loc="67(HplTaos2550C.SplitControlPowerManagerC):/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager" loc="58(HplTaos2550C.SplitControlPowerManagerC.PowerManager):/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Timer" loc="44(HplTaos2550C.Timer):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Atm128I2CMasterC" loc="43(HplTaos2550C.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Atm128I2CMasterC" loc="43(HalTaos2550C.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9475c235a0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9475c23910" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9475c23c80" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9475c159f0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9475c15d80" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9475c11170" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9475c114c0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9475b7d0d0" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9475b7d460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9475b7d7f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9475b7db40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9475521210" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f9475517cc0" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9475176120" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9475176120"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f9475176430" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f947516dd30" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f947516dd30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f947516a060" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9475071430" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9475071430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9475040880" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9475040880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f9475040bb0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9474ff0de0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9474ff0de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9474c9f290" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9474c9f290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f9474c9f600" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f9474ca3d60" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f9474ca3d60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f9474c8a580" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9474c8a580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f9474c8a8a0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f9474c46920" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f9474c46920"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f9474c43120" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9474c43120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f9474c27600" loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f9474c27600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f9474c27dd0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f9474c27dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f9474c26220" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f9474c26220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f9474c26a00" loc="58:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f9474c26a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f9474c26dd0" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f9474c25630" loc="60:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f9474c25630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f947467b3f0" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f947467b780" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f947467bb10" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f947467be60" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f94745d3110" loc="89:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f94745c6d90" loc="52:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAdg715C" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7f9474525020" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7f9474525370" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlC" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7f947451a370" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7f947451a6c0" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlP" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7f94744fe270" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA0High" ref="0x7f94744fe5c0" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550C" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc" abstract="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Taos2550ReaderP" loc="34:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc" abstract="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550LogicP" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc" abstract="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f9475c8a210" loc="58:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475c8a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c8a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9475c8ecb0" loc="57:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9475c8ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9475c8d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9475c87d50" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9475c87d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c86100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9475c89b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475c89b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9475c87020" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9475c87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9475c873a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9475c87530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9475c876c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9475c87850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9475c879e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9475c7f7a0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f9475c7f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c7fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9475c7f0c0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475c7f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c7f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f9475c7e020" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f9475c7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9475c79110" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9475c79110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c79490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9475c819e0" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9475c819e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c81d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9475c75cd0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9475c75cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c740a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f9475c6fad0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f9475c6fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c6fe50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c75020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c75340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c75660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c757f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c75980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9475c76530" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9475c76530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475c768b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9475c2ecb0" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9475c2ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c2d610"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c2d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c2d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c2dac0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c2dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c2dde0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c2c020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9475c4a4e0" loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9475c4a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c4a860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c4a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c4ab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c4ad10"/>
        <function-ref name="get" scoped="" ref="0x7f9475c49020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c491b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c49340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9475c3d350" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9475c3d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c3d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c3d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c3d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c3db80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c3dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c3c020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c3c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c3c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9475c34cb0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9475c34cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c33230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c33550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c33870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c33a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c33b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9475c27060" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9475c27060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c273e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c27570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c27700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c27890"/>
        <function-ref name="get" scoped="" ref="0x7f9475c27a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c27bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c27d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9475c62670" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9475c62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c629f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c62b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c62d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c61020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c61340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9475c36670" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9475c36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c369f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c36b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c36d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c35020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c35340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9475c60cb0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9475c60cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c5f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c5f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c5f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c5f550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c5f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c5f870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c5fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9475c53cb0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9475c53cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c52230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c523c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c52550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c526e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c52870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c52a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c52b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9475c47e40" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9475c47e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c461e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c46370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c46500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c46690"/>
        <function-ref name="get" scoped="" ref="0x7f9475c46820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c469b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c46b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c46cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9475c3acb0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9475c3acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c39230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c39550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c39870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c39a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9475c68800" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9475c68800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c68b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c68d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c67020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c671b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c67340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c674d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c67660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9475c5b670" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9475c5b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c5b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c5bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c5bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c5a020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c5a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c5a340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c5a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9475c4f670" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9475c4f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c4f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c4fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c4fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c4e020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c4e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c4e340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c4e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9475c43670" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9475c43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c439f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c43b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c43d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c42020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c42340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9475c30670" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9475c30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c309f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c30b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c30d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c2f020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c2f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c2f340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c2f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9475c2ab20" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9475c2ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c29020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c29340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c294d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c29660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c297f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c29980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c29b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9475c41cb0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9475c41cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c3f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c3f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c3f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c3f550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c3f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c3f870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c3fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c3fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9475c64060" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9475c64060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c643e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c64570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c64700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c64890"/>
        <function-ref name="get" scoped="" ref="0x7f9475c64a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c64bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c64d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9475c57020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9475c57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c57530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c57850"/>
        <function-ref name="get" scoped="" ref="0x7f9475c579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c57b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c57d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9475c2c4e0" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9475c2c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c2c860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c2c9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c2cb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c2cd10"/>
        <function-ref name="get" scoped="" ref="0x7f9475c2b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c2b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c2b340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9475c55670" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9475c55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c559f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c55b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c55d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c54020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c54340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c544d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c54660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9475c49800" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9475c49800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c49b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c49d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c48020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c481b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c48340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c484d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c48660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9475c3c670" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9475c3c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c3c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c3cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c3cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c3b020"/>
        <function-ref name="get" scoped="" ref="0x7f9475c3b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c3b340"/>
        <function-ref name="set" scoped="" ref="0x7f9475c3b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c3b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9475c32020" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9475c32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c32530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c326c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c32850"/>
        <function-ref name="get" scoped="" ref="0x7f9475c329e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c32b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c32d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9475c61990" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9475c61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c61d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c60340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c60660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c60980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9475c5e020" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9475c5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c5e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c5e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c5e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c5e850"/>
        <function-ref name="get" scoped="" ref="0x7f9475c5e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c5eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c5ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9475c51020" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9475c51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c51530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c516c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c51850"/>
        <function-ref name="get" scoped="" ref="0x7f9475c519e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c51b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c51d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9475c45060" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9475c45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c453e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c45570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c45700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c45890"/>
        <function-ref name="get" scoped="" ref="0x7f9475c45a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c45bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c45d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9475c38020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9475c38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c38530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c38850"/>
        <function-ref name="get" scoped="" ref="0x7f9475c389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c38b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c38d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9475c67b20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9475c67b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c66020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c661b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c66340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c664d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c66660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c667f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c66980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c66b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9475c5a990" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9475c5a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c5ae10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c59020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c59340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c59660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c597f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c59980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9475c4e990" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9475c4e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c4ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c4d340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c4d660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c4d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9475c2f990" loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9475c2f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c2fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c2e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c2e340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c2e660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c2e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c2e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9475c4b020" loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9475c4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c4b5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c4b730"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c4b8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c4ba50"/>
        <function-ref name="get" scoped="" ref="0x7f9475c4bbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c4bd70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c4a020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9475c3e020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9475c3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c3e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c3e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c3e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c3e850"/>
        <function-ref name="get" scoped="" ref="0x7f9475c3e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c3eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9475c3ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9475c35990" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9475c35990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c35d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c34020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c34340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c34660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c347f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c34980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9475c29e40" loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9475c29e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c281e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c28370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c28500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c28690"/>
        <function-ref name="get" scoped="" ref="0x7f9475c28820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c289b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c28b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c28cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9475c63350" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9475c63350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c636d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c63860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c639f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c63b80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c63d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c62020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c621b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9475c56350" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9475c56350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c566d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c56860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c569f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c56b80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c56d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c55020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c551b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9475c37350" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9475c37350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c376d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c37860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c379f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c37b80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c37d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c36020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c361b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9475c54990" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9475c54990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c54d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c53020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c53340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c53660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c53980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9475c48b20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9475c48b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c47020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c47340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c474d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c47660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c477f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c47980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c47b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9475c3b990" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9475c3b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c3bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c3a340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c3a660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c3a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9475c31350" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9475c31350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c316d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c31860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c319f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c31b80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c31d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c30020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c301b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c30340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9475c77550" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9475c77550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c778d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c77a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c77bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c77d80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c681b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c68340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9475c5d350" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9475c5d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c5d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c5d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c5d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c5db80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c5dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c5b020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c5b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9475c50350" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9475c50350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c506d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c50860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c509f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c50b80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c50d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c4f020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c4f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c4f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9475c44350" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9475c44350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c446d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c44860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c449f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c44b80"/>
        <function-ref name="get" scoped="" ref="0x7f9475c44d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c43020"/>
        <function-ref name="set" scoped="" ref="0x7f9475c431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9475c2b800" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9475c2b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c2bb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c2bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c2a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c2a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475c2a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c2a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c2a660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9475c42990" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9475c42990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c42d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c41020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c41340"/>
        <function-ref name="get" scoped="" ref="0x7f9475c414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c41660"/>
        <function-ref name="set" scoped="" ref="0x7f9475c417f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c41980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9475c4dcb0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9475c4dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c4c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c4c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c4c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c4c550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c4c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c4c870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c4ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c4cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9475c66e40" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9475c66e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c651e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c65370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c65500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c65690"/>
        <function-ref name="get" scoped="" ref="0x7f9475c65820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c659b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475c65b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c65cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9475c59cb0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9475c59cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475c580a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475c58230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475c583c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475c58550"/>
        <function-ref name="get" scoped="" ref="0x7f9475c586e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475c58870"/>
        <function-ref name="set" scoped="" ref="0x7f9475c58a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475c58b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9475bdaa80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9475bdaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bdae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bd9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bd91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bd9340"/>
        <function-ref name="get" scoped="" ref="0x7f9475bd94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bd9660"/>
        <function-ref name="set" scoped="" ref="0x7f9475bd97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bd9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9475bd5020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9475bd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bd53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bd5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bd56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bd5850"/>
        <function-ref name="get" scoped="" ref="0x7f9475bd59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bd5b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475bd5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9475bdc6b0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9475bdc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bdca30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bdcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bdcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bdb020"/>
        <function-ref name="get" scoped="" ref="0x7f9475bdb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bdb340"/>
        <function-ref name="set" scoped="" ref="0x7f9475bdb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9475bd9c10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9475bd9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bd8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bd81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bd8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bd84d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bd8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bd87f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bd8980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bd8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9475bd42b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9475bd42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bd4630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bd47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bd4950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bd4ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bd4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bd4e00"/>
        <function-ref name="set" scoped="" ref="0x7f9475bd3020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9475bdb8f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9475bdb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bdbc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bdbe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bda020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bda1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bda340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bda4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bda660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bda7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9475bd8da0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9475bd8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bd6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bd6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bd64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bd6630"/>
        <function-ref name="get" scoped="" ref="0x7f9475bd67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bd6950"/>
        <function-ref name="set" scoped="" ref="0x7f9475bd6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bd6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9475bd3440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9475bd3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bd37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bd3950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bd3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bd3c70"/>
        <function-ref name="get" scoped="" ref="0x7f9475bd3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bd2020"/>
        <function-ref name="set" scoped="" ref="0x7f9475bd21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741f5b00" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741f5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741f5e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741f4030"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741f41c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741f4350"/>
        <function-ref name="get" scoped="" ref="0x7f94741f44e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741f4670"/>
        <function-ref name="set" scoped="" ref="0x7f94741f4800"/>
        <function-ref name="clr" scoped="" ref="0x7f94741f4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741f2e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741f2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741f11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741f1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741f14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741f1670"/>
        <function-ref name="get" scoped="" ref="0x7f94741f1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741f1990"/>
        <function-ref name="set" scoped="" ref="0x7f94741f1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f94741f1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741ee0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741ee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741ee420"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741ee5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741ee740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741ee8d0"/>
        <function-ref name="get" scoped="" ref="0x7f94741eea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741eebf0"/>
        <function-ref name="set" scoped="" ref="0x7f94741eed80"/>
        <function-ref name="clr" scoped="" ref="0x7f94741ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741eb3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741eb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741eb770"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741eb900"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741eba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741ebc20"/>
        <function-ref name="get" scoped="" ref="0x7f94741ebdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741ea020"/>
        <function-ref name="set" scoped="" ref="0x7f94741ea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94741ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741e86d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741e86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741e8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741e8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741e8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741e7020"/>
        <function-ref name="get" scoped="" ref="0x7f94741e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741e7340"/>
        <function-ref name="set" scoped="" ref="0x7f94741e74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f94741e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741e59b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741e59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741e5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741e3340"/>
        <function-ref name="get" scoped="" ref="0x7f94741e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741e3660"/>
        <function-ref name="set" scoped="" ref="0x7f94741e37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f94741e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741e1e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741e1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741e01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741e0350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741e04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741e0670"/>
        <function-ref name="get" scoped="" ref="0x7f94741e0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741e0990"/>
        <function-ref name="set" scoped="" ref="0x7f94741e0b20"/>
        <function-ref name="clr" scoped="" ref="0x7f94741e0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741dd0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741dd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741dd420"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741dd5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741dd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741dd8d0"/>
        <function-ref name="get" scoped="" ref="0x7f94741dda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94741ddbf0"/>
        <function-ref name="set" scoped="" ref="0x7f94741ddd80"/>
        <function-ref name="clr" scoped="" ref="0x7f94741dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9475bcada0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9475bcada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bc9180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bc9310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bc94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bc9630"/>
        <function-ref name="get" scoped="" ref="0x7f9475bc97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bc9950"/>
        <function-ref name="set" scoped="" ref="0x7f9475bc9ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bc9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9475bc6440" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9475bc6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bc67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bc6950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bc6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bc6c70"/>
        <function-ref name="get" scoped="" ref="0x7f9475bc6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bc5020"/>
        <function-ref name="set" scoped="" ref="0x7f9475bc51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bc5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9475bcda20" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9475bcda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bcdda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bcc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bcc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bcc340"/>
        <function-ref name="get" scoped="" ref="0x7f9475bcc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bcc660"/>
        <function-ref name="set" scoped="" ref="0x7f9475bcc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bcc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9475bc8020" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9475bc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bc83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bc8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bc86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bc8850"/>
        <function-ref name="get" scoped="" ref="0x7f9475bc89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bc8b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475bc8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9475bc55d0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9475bc55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bc5950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bc5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bc5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bc5e00"/>
        <function-ref name="get" scoped="" ref="0x7f9475bc4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bc41b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bc4340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9475bccc10" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9475bccc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bca020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bca1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bca340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bca4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bca660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bca7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bca980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bcab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9475bc72b0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9475bc72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bc7630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bc77c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bc7950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bc7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bc7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bc7e00"/>
        <function-ref name="set" scoped="" ref="0x7f9475bc6020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9475bc4760" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9475bc4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bc4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bc4c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bc4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bc3020"/>
        <function-ref name="get" scoped="" ref="0x7f9475bc31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bc3340"/>
        <function-ref name="set" scoped="" ref="0x7f9475bc34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bc3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9474185c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9474185c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474184230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474184550"/>
        <function-ref name="get" scoped="" ref="0x7f94741846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474184870"/>
        <function-ref name="set" scoped="" ref="0x7f9474184a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9474184b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9474182e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9474182e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741811c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474181350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741814e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474181670"/>
        <function-ref name="get" scoped="" ref="0x7f9474181800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474181990"/>
        <function-ref name="set" scoped="" ref="0x7f9474181b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9474181cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947417e0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947417e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947417e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f947417e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f947417e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947417e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f947417ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947417ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f947417ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f947417d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947417b3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947417b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947417b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f947417b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f947417ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947417bc20"/>
        <function-ref name="get" scoped="" ref="0x7f947417bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947417a020"/>
        <function-ref name="set" scoped="" ref="0x7f947417a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f947417a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741786d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741786d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474178a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474178be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474178d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474177020"/>
        <function-ref name="get" scoped="" ref="0x7f94741771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474177340"/>
        <function-ref name="set" scoped="" ref="0x7f94741774d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474177660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741759b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741759b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474175d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474174020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474174340"/>
        <function-ref name="get" scoped="" ref="0x7f94741744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474174660"/>
        <function-ref name="set" scoped="" ref="0x7f94741747f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474174980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9474172e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9474172e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741701c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474170350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741704e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474170670"/>
        <function-ref name="get" scoped="" ref="0x7f9474170800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474170990"/>
        <function-ref name="set" scoped="" ref="0x7f9474170b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9474170cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947416d0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947416d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947416d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f947416d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f947416d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947416d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f947416da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947416dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f947416dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f947416c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9475bba020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9475bba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bba530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bba6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bba850"/>
        <function-ref name="get" scoped="" ref="0x7f9475bba9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bbab70"/>
        <function-ref name="set" scoped="" ref="0x7f9475bbad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9475bb75d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9475bb75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bb7950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bb7ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bb7c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bb7e00"/>
        <function-ref name="get" scoped="" ref="0x7f9475bb6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bb61b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bb6340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9475bbdd30" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9475bbdd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bbc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bbc270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bbc400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bbc590"/>
        <function-ref name="get" scoped="" ref="0x7f9475bbc720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bbc8b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bbca40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bbcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9475bb92b0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9475bb92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bb9630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bb97c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bb9950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bb9ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bb9c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bb9e00"/>
        <function-ref name="set" scoped="" ref="0x7f9475bb8020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9475bb6760" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9475bb6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bb6ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bb6c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bb6e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bb5020"/>
        <function-ref name="get" scoped="" ref="0x7f9475bb51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bb5340"/>
        <function-ref name="set" scoped="" ref="0x7f9475bb54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bb5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9475bbce60" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9475bbce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bbb210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bbb3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bbb530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bbb6c0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bbb850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bbb9e0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bbbb70"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bbbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9475bb8440" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9475bb8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bb87c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bb8950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bb8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bb8c70"/>
        <function-ref name="get" scoped="" ref="0x7f9475bb8e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bb7020"/>
        <function-ref name="set" scoped="" ref="0x7f9475bb71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bb7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9475bb58f0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9475bb58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bb5c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bb5e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bb4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bb41b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bb4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bb44d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475bb4660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bb47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947411ac90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947411ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474119230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741193c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474119550"/>
        <function-ref name="get" scoped="" ref="0x7f94741196e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474119870"/>
        <function-ref name="set" scoped="" ref="0x7f9474119a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9474119b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9474117e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9474117e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741161c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474116350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741164e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474116670"/>
        <function-ref name="get" scoped="" ref="0x7f9474116800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474116990"/>
        <function-ref name="set" scoped="" ref="0x7f9474116b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9474116cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741130a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741130a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474113420"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741135b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474113740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741138d0"/>
        <function-ref name="get" scoped="" ref="0x7f9474113a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474113bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9474113d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9474112020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741103f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474110770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474110900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474110a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474110c20"/>
        <function-ref name="get" scoped="" ref="0x7f9474110db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947410f020"/>
        <function-ref name="set" scoped="" ref="0x7f947410f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f947410f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947410d6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947410d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947410da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f947410dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f947410dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947410c020"/>
        <function-ref name="get" scoped="" ref="0x7f947410c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947410c340"/>
        <function-ref name="set" scoped="" ref="0x7f947410c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f947410c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947410a9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947410a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947410ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474109020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474109340"/>
        <function-ref name="get" scoped="" ref="0x7f94741094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474109660"/>
        <function-ref name="set" scoped="" ref="0x7f94741097f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474109980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9474107e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9474107e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94741051c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474105350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94741054e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474105670"/>
        <function-ref name="get" scoped="" ref="0x7f9474105800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474105990"/>
        <function-ref name="set" scoped="" ref="0x7f9474105b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9474105cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94741020a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94741020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474102420"/>
        <function-ref name="isInput" scoped="" ref="0x7f94741025b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474102740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94741028d0"/>
        <function-ref name="get" scoped="" ref="0x7f9474102a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474102bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9474102d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9474101020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9475bab440" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9475bab440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bab7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bab950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475babae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475babc70"/>
        <function-ref name="get" scoped="" ref="0x7f9475babe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475baa020"/>
        <function-ref name="set" scoped="" ref="0x7f9475baa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475baa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9475ba88f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9475ba88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475ba8c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475ba8e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475ba7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475ba71b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475ba7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475ba74d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475ba7660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475ba77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9475bad020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9475bad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bad3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bad530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bad6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bad850"/>
        <function-ref name="get" scoped="" ref="0x7f9475bad9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475badb70"/>
        <function-ref name="set" scoped="" ref="0x7f9475badd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9475baa5d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9475baa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475baa950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475baaae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475baac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475baae00"/>
        <function-ref name="get" scoped="" ref="0x7f9475ba9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475ba91b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475ba9340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475ba94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9475ba7a80" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9475ba7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475ba7e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475ba5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475ba51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475ba5340"/>
        <function-ref name="get" scoped="" ref="0x7f9475ba54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475ba5660"/>
        <function-ref name="set" scoped="" ref="0x7f9475ba57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475ba5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9475bac2b0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9475bac2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475bac630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475bac7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475bac950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475bacae0"/>
        <function-ref name="get" scoped="" ref="0x7f9475bacc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475bace00"/>
        <function-ref name="set" scoped="" ref="0x7f9475bab020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475bab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9475ba9760" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9475ba9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475ba9ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475ba9c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475ba9e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475ba8020"/>
        <function-ref name="get" scoped="" ref="0x7f9475ba81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475ba8340"/>
        <function-ref name="set" scoped="" ref="0x7f9475ba84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475ba8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9475ba5c10" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9475ba5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475ba4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475ba41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475ba4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475ba44d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475ba4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475ba47f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475ba4980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475ba4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740afc90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740afc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94740ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94740ae230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740ae3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94740ae550"/>
        <function-ref name="get" scoped="" ref="0x7f94740ae6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94740ae870"/>
        <function-ref name="set" scoped="" ref="0x7f94740aea00"/>
        <function-ref name="clr" scoped="" ref="0x7f94740aeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740ace20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740ace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94740ab1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94740ab350"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740ab4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94740ab670"/>
        <function-ref name="get" scoped="" ref="0x7f94740ab800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94740ab990"/>
        <function-ref name="set" scoped="" ref="0x7f94740abb20"/>
        <function-ref name="clr" scoped="" ref="0x7f94740abcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740a80a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94740a8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f94740a85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740a8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94740a88d0"/>
        <function-ref name="get" scoped="" ref="0x7f94740a8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94740a8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f94740a8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f94740a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740a53f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740a53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94740a5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f94740a5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740a5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94740a5c20"/>
        <function-ref name="get" scoped="" ref="0x7f94740a5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94740a4020"/>
        <function-ref name="set" scoped="" ref="0x7f94740a41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94740a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740a26d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740a26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94740a2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f94740a2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740a2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94740a1020"/>
        <function-ref name="get" scoped="" ref="0x7f94740a11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94740a1340"/>
        <function-ref name="set" scoped="" ref="0x7f94740a14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f94740a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947409f9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947409f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947409fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f947409e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f947409e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947409e340"/>
        <function-ref name="get" scoped="" ref="0x7f947409e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947409e660"/>
        <function-ref name="set" scoped="" ref="0x7f947409e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f947409e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947409ce20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947409ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947409b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f947409b350"/>
        <function-ref name="toggle" scoped="" ref="0x7f947409b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947409b670"/>
        <function-ref name="get" scoped="" ref="0x7f947409b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947409b990"/>
        <function-ref name="set" scoped="" ref="0x7f947409bb20"/>
        <function-ref name="clr" scoped="" ref="0x7f947409bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740980a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474098420"/>
        <function-ref name="isInput" scoped="" ref="0x7f94740985b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474098740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94740988d0"/>
        <function-ref name="get" scoped="" ref="0x7f9474098a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474098bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9474098d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9474096020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9475b9c760" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9475b9c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b9cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b9cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b9ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b9b020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b9b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b9b340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b9b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b9b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9475b98c10" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9475b98c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b97020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b971b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b97340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b974d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475b97660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b977f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b97980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b97b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9475b9e3f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9475b9e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b9e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b9e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b9ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b9ec20"/>
        <function-ref name="get" scoped="" ref="0x7f9475b9edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b9d020"/>
        <function-ref name="set" scoped="" ref="0x7f9475b9d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b9d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9475b9b8f0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9475b9b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b9bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b9be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b99020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b991b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475b99340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b994d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b99660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9475b97da0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9475b97da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b96180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b96310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b964a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b96630"/>
        <function-ref name="get" scoped="" ref="0x7f9475b967c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b96950"/>
        <function-ref name="set" scoped="" ref="0x7f9475b96ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b96c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9475b9d5d0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9475b9d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b9d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b9dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b9dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b9de00"/>
        <function-ref name="get" scoped="" ref="0x7f9475b9c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b9c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b9c340"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9475b99a80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9475b99a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b99e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b98020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b98340"/>
        <function-ref name="get" scoped="" ref="0x7f9475b984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b98660"/>
        <function-ref name="set" scoped="" ref="0x7f9475b987f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b98980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9475b95020" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9475b95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b95530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b956c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b95850"/>
        <function-ref name="get" scoped="" ref="0x7f9475b959e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b95b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475b95d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9474042c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9474042c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94740410a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474041230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740413c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474041550"/>
        <function-ref name="get" scoped="" ref="0x7f94740416e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474041870"/>
        <function-ref name="set" scoped="" ref="0x7f9474041a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9474041b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947403fe20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947403fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947403e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f947403e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f947403e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947403e670"/>
        <function-ref name="get" scoped="" ref="0x7f947403e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947403e990"/>
        <function-ref name="set" scoped="" ref="0x7f947403eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f947403ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947403b0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947403b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947403b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f947403b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f947403b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947403b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f947403ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947403bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f947403bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f947403a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740383f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740383f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474038770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474038900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474038a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474038c20"/>
        <function-ref name="get" scoped="" ref="0x7f9474038db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474037020"/>
        <function-ref name="set" scoped="" ref="0x7f94740371b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474037340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740356d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474035a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474035be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474035d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474034020"/>
        <function-ref name="get" scoped="" ref="0x7f94740341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474034340"/>
        <function-ref name="set" scoped="" ref="0x7f94740344d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474034660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f94740329b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f94740329b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474032d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474031020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94740311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474031340"/>
        <function-ref name="get" scoped="" ref="0x7f94740314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474031660"/>
        <function-ref name="set" scoped="" ref="0x7f94740317f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474031980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947402fe20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947402fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947402e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f947402e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f947402e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947402e670"/>
        <function-ref name="get" scoped="" ref="0x7f947402e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947402e990"/>
        <function-ref name="set" scoped="" ref="0x7f947402eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f947402ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f947402b0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f947402b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f947402b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f947402b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f947402b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f947402b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f947402ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f947402bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f947402bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9474029020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9475b8ca80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9475b8ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b8ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b8b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b8b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b8b340"/>
        <function-ref name="get" scoped="" ref="0x7f9475b8b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b8b660"/>
        <function-ref name="set" scoped="" ref="0x7f9475b8b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b8b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9475b88020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9475b88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b88530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b886c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b88850"/>
        <function-ref name="get" scoped="" ref="0x7f9475b889e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b88b70"/>
        <function-ref name="set" scoped="" ref="0x7f9475b88d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9475b8f7a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9475b8f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b8fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b8fcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b8fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b8d020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b8d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b8d340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b8d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9475b8bc10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9475b8bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b8a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b8a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b8a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b8a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9475b8a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b8a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b8a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b8ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9475b872b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9475b872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b87630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b877c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b87950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b87ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9475b87c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b87e00"/>
        <function-ref name="set" scoped="" ref="0x7f9475b86020"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9475b8d8f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9475b8d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b8dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b8de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b8c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9475b8c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b8c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b8c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b8c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9475b8ada0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9475b8ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b89180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b89310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b894a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b89630"/>
        <function-ref name="get" scoped="" ref="0x7f9475b897c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b89950"/>
        <function-ref name="set" scoped="" ref="0x7f9475b89ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b89c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9475b86440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9475b86440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b867c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b86950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b86ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b86c70"/>
        <function-ref name="get" scoped="" ref="0x7f9475b86e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b85020"/>
        <function-ref name="set" scoped="" ref="0x7f9475b851b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b85340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fd7c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fd7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fd60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fd6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fd63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fd6550"/>
        <function-ref name="get" scoped="" ref="0x7f9473fd66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fd6870"/>
        <function-ref name="set" scoped="" ref="0x7f9473fd6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fd6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fd4e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fd4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fd31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fd3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fd34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fd3670"/>
        <function-ref name="get" scoped="" ref="0x7f9473fd3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fd3990"/>
        <function-ref name="set" scoped="" ref="0x7f9473fd3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fd3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fd00a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fd00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fd0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fd05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fd0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fd08d0"/>
        <function-ref name="get" scoped="" ref="0x7f9473fd0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fd0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9473fd0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fcd3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fcd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fcd770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fcd900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fcda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fcdc20"/>
        <function-ref name="get" scoped="" ref="0x7f9473fcddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fcc020"/>
        <function-ref name="set" scoped="" ref="0x7f9473fcc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fca6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fcaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fcabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fcad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fc9020"/>
        <function-ref name="get" scoped="" ref="0x7f9473fc91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fc9340"/>
        <function-ref name="set" scoped="" ref="0x7f9473fc94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fc9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fc79b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fc79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fc7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fc6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fc61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fc6340"/>
        <function-ref name="get" scoped="" ref="0x7f9473fc64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fc6660"/>
        <function-ref name="set" scoped="" ref="0x7f9473fc67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fc6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fc4e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fc4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fc31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fc3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fc34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fc3670"/>
        <function-ref name="get" scoped="" ref="0x7f9473fc3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fc3990"/>
        <function-ref name="set" scoped="" ref="0x7f9473fc3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fc3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9473fc00a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9473fc00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9473fc0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9473fc05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9473fc0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9473fc08d0"/>
        <function-ref name="get" scoped="" ref="0x7f9473fc0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9473fc0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9473fc0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9473fbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b7ea20" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b7ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b7eda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b68020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b681b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b68340"/>
        <function-ref name="get" scoped="" ref="0x7f9475b684d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b68660"/>
        <function-ref name="set" scoped="" ref="0x7f9475b687f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b68980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b636d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b63a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b63be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b63d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b62020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b62340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b5d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b5d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b5d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b5d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b5d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b5d990"/>
        <function-ref name="get" scoped="" ref="0x7f9475b5db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b5dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b5de40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b59c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b59c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b580a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b58230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b583c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b58550"/>
        <function-ref name="get" scoped="" ref="0x7f9475b586e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b58870"/>
        <function-ref name="set" scoped="" ref="0x7f9475b58a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b58b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b536d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b536d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b53a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b53be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b53d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b52020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b52340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b524d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b52660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b4d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b4d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b4d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b4d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b4d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b4d990"/>
        <function-ref name="get" scoped="" ref="0x7f9475b4db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b4dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b4de40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b49c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b49c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b48230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b483c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b48550"/>
        <function-ref name="get" scoped="" ref="0x7f9475b486e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b48870"/>
        <function-ref name="set" scoped="" ref="0x7f9475b48a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b48b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b436d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b436d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b43a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b43be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b43d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b42020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b42340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b3d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b3d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b3d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b3d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b3d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b3d990"/>
        <function-ref name="get" scoped="" ref="0x7f9475b3db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b3dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b3de40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b39c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b39c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b380a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b38230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b383c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b38550"/>
        <function-ref name="get" scoped="" ref="0x7f9475b386e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b38870"/>
        <function-ref name="set" scoped="" ref="0x7f9475b38a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b38b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b336d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b33a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b33be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b33d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b32020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b32340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b2d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b2d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b2d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b2d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b2d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b2d990"/>
        <function-ref name="get" scoped="" ref="0x7f9475b2db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b2dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9475b2de40"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b29c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b29c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b28230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b28550"/>
        <function-ref name="get" scoped="" ref="0x7f9475b286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b28870"/>
        <function-ref name="set" scoped="" ref="0x7f9475b28a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b28b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9475b236d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9475b236d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475b23a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475b23be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475b23d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475b22020"/>
        <function-ref name="get" scoped="" ref="0x7f9475b221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475b22340"/>
        <function-ref name="set" scoped="" ref="0x7f9475b224d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475b22660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9475ae5020" loc="61:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475ae5020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9475daad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9475daad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475ae53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9475ae5690" loc="62:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9475ae5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9475ae5a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9475ae5ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9475ae5d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9475ae4020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9475ae41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9475ac4720" loc="60:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9475ac4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475ac4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9475c8bdd0" loc="57:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9475c8bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9475ac6180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9475ac4020" loc="59:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9475ac4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475ac43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9475ac6470" loc="58:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9475ac6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475ac67f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9475ac6980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9475ac6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9475d80e10" loc="48:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9475d80e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9475d8b1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9475d8b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9475dd1020" loc="47:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9475dd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475dd13a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9475dd1530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9475dd16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9475cce850" loc="56:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9475cce850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9475ccebd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9475cced60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9475ccdde0" loc="57:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9475ccdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9475ccc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9475ccf8a0" loc="55:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9475ccf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475ccfc20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9475ccfdb0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9475cce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9475cad690" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9475cad690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9475cada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9475d89a30" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9475d89a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9475d89db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9475cb0020" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9475cb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9475cb03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9475911530" loc="65:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9475911530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f94759118b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f9475910020" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f9475910020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f94759103a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9475910530"/>
        <function-ref name="start" scoped="" ref="0x7f94759106c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9475910850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f947589ee30" loc="70:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x7f947589ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94758a41e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f9475881b40" loc="78:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f9475881b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9475880020"/>
        <function-ref name="source" scoped="" ref="0x7f94758801b0"/>
        <function-ref name="address" scoped="" ref="0x7f9475880340"/>
        <function-ref name="destination" scoped="" ref="0x7f94758804d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f9475880660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f94758807f0"/>
        <function-ref name="type" scoped="" ref="0x7f9475880980"/>
        <function-ref name="setType" scoped="" ref="0x7f9475880b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9475880ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9475880e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f947587f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="vLight" ref="0x7f947586a4e0" loc="84:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="vLight" scoped="" ref="0x7f947586a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9475869110"/>
        <function-ref name="readDone" scoped="" ref="0x7f9475869590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f9475910be0" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f9475910be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f947590f020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f947590f1b0"/>
        <function-ref name="start" scoped="" ref="0x7f947590f340"/>
        <function-ref name="stop" scoped="" ref="0x7f947590f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f9475882d70" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9475882d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475881180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475881310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f94758814a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475881630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94758817c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x7f947586fc70" loc="83:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7f947586fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947586e8a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f947586ed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f9475883a50" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9475883a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475883dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="iLight" ref="0x7f9475869d30" loc="85:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="iLight" scoped="" ref="0x7f9475869d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9475867940"/>
        <function-ref name="readDone" scoped="" ref="0x7f9475867dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f947584c810" loc="146:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7f947584c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947584cb90"/>
        <function-ref name="runTask" scoped="" ref="0x7f947584cd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f947584b730" loc="147:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7f947584b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947584bab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f947584bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="time" ref="0x7f9475874e10" loc="81:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="time" scoped="" ref="0x7f9475874e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9475871410"/>
        <function-ref name="fired" scoped="" ref="0x7f947587d9e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9475872790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9475872310"/>
        <function-ref name="getdt" scoped="" ref="0x7f9475871d10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9475871890"/>
        <function-ref name="isRunning" scoped="" ref="0x7f947587de60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f947587eb80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9475872da0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f947587d090"/>
        <function-ref name="stop" scoped="" ref="0x7f947587d560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f9475895870" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7f9475895870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475895bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475895d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f94758a2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94758a21b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94758a2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f94758966e0" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f94758966e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475896a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9475896bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475896d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475883020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94758831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f947585a0d0" loc="89:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f947585a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f947585a450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f947585a5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f947585a770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f947585a900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f947585aa90"/>
        <function-ref name="get" scoped="" ref="0x7f947585ac20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f947585adb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94758654d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475865020"/>
        <function-ref name="led0On" scoped="" ref="0x7f94758651b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9475865340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f947590b020" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7f947590b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947590b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f947590b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947590b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f947590b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947590b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f94758859b0" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7f94758859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9475885d30"/>
        <function-ref name="source" scoped="" ref="0x7f947589f020"/>
        <function-ref name="address" scoped="" ref="0x7f947589f1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f947589f340"/>
        <function-ref name="setSource" scoped="" ref="0x7f947589f4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f947589f660"/>
        <function-ref name="type" scoped="" ref="0x7f947589f7f0"/>
        <function-ref name="setType" scoped="" ref="0x7f947589f980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f947589fb10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f947589fca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f947589fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f94758826b0" loc="76:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7f94758826b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475882a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7f947586b410" loc="82:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f947586b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947586f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f947586f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f94757ab260" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94757ab260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94757ab5e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94757ab770"/>
        <function-ref name="led1On" scoped="" ref="0x7f94757ab900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94757aba90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94757abc20"/>
        <function-ref name="get" scoped="" ref="0x7f94757abdb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94757aa020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94757aa660"/>
        <function-ref name="set" scoped="" ref="0x7f94757aa1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f94757aa340"/>
        <function-ref name="led2On" scoped="" ref="0x7f94757aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f94757a53c0" loc="50:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f94757a53c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94757a5740"/>
        <function-ref name="isInput" scoped="" ref="0x7f94757a58d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94757a5a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94757a5bf0"/>
        <function-ref name="get" scoped="" ref="0x7f94757a5d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94757a4020"/>
        <function-ref name="set" scoped="" ref="0x7f94757a41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94757a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f94757a75c0" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f94757a75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94757a7940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f94757a4660" loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f94757a4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94757a49e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94757a4b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f94757a4d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94757a3020"/>
        <function-ref name="get" scoped="" ref="0x7f94757a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94757a3340"/>
        <function-ref name="set" scoped="" ref="0x7f94757a34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f94757a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f94757a7bc0" loc="47:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94757a7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94757a6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94757a61b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f94757a6340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94757a64d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94757a6660"/>
        <function-ref name="get" scoped="" ref="0x7f94757a67f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94757a6980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94757a5020"/>
        <function-ref name="set" scoped="" ref="0x7f94757a6b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f94757a6ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f94757a6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f94757a3980" loc="52:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f94757a3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94757a3d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f94757a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94757a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94757a2340"/>
        <function-ref name="get" scoped="" ref="0x7f94757a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94757a2660"/>
        <function-ref name="set" scoped="" ref="0x7f94757a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f94757a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f94757860f0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f94757860f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475786470"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475786600"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475786790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475786920"/>
        <function-ref name="get" scoped="" ref="0x7f9475786ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475786c40"/>
        <function-ref name="set" scoped="" ref="0x7f9475786dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475785020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9475785380" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9475785380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475785700"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475785890"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475785a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475785bb0"/>
        <function-ref name="get" scoped="" ref="0x7f9475785d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475784020"/>
        <function-ref name="set" scoped="" ref="0x7f94757841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475784340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9475783920" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475783920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475783ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f94757846a0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f94757846a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9475784a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9475784bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9475784d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9475783020"/>
        <function-ref name="get" scoped="" ref="0x7f94757831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9475783340"/>
        <function-ref name="set" scoped="" ref="0x7f94757834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9475783660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f947577b0c0" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f947577b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f947577b440"/>
        <function-ref name="stopDone" scoped="" ref="0x7f947577b5d0"/>
        <function-ref name="start" scoped="" ref="0x7f947577b760"/>
        <function-ref name="stop" scoped="" ref="0x7f947577b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f94757726d0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f94757726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f9475772a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9475772ce0" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f9475772ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94757760a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475776230"/>
        <function-ref name="getPayload" scoped="" ref="0x7f94757763c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475776550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94757766e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f947577a1d0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f947577a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947577a550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f947577a6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947577a870"/>
        <function-ref name="cancel" scoped="" ref="0x7f947577aa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947577ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f9475777020" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f9475777020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94757773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f94757668a0" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f94757668a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9475766c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9475766db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f947576b020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f947576b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f94757793f0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f94757793f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475779770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f947576ce00" loc="51:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f947576ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f94757711c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f9475771350"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f94757714e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f947575ebf0" loc="53:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f947575ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f947576a020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f947576a1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f947576a340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f947576a4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f947576a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9475776990" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9475776990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9475776d10"/>
        <function-ref name="source" scoped="" ref="0x7f9475775020"/>
        <function-ref name="address" scoped="" ref="0x7f94757751b0"/>
        <function-ref name="destination" scoped="" ref="0x7f9475775340"/>
        <function-ref name="setSource" scoped="" ref="0x7f94757754d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9475775660"/>
        <function-ref name="type" scoped="" ref="0x7f94757757f0"/>
        <function-ref name="setType" scoped="" ref="0x7f9475775980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9475775b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9475775ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9475775e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f94757598e0" loc="54:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f94757598e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f9475759c60"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9475759df0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9475765020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f94757509e0" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f94757509e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9475758020"/>
        <function-ref name="clear" scoped="" ref="0x7f9475758750"/>
        <function-ref name="isValid" scoped="" ref="0x7f947575b890"/>
        <function-ref name="set" scoped="" ref="0x7f9475758e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f947574faf0" loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f947574faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f947574d210"/>
        <function-ref name="clear" scoped="" ref="0x7f947574d940"/>
        <function-ref name="isValid" scoped="" ref="0x7f947574ea80"/>
        <function-ref name="set" scoped="" ref="0x7f947574b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9475748300" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9475748300"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9475748680"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9475748810"/>
        <function-ref name="start" scoped="" ref="0x7f94757489a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9475748b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f94757313b0" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f94757313b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475730ac0"/>
        <function-ref name="get" scoped="" ref="0x7f9475730570"/>
        <function-ref name="isSet" scoped="" ref="0x7f9475730020"/>
        <function-ref name="set" scoped="" ref="0x7f947572f090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f9475724270" loc="71:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9475724270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9475723800"/>
        <function-ref name="clear" scoped="" ref="0x7f9475722020"/>
        <function-ref name="isValid" scoped="" ref="0x7f94757230d0"/>
        <function-ref name="set" scoped="" ref="0x7f9475722750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f9475745d60" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f9475745d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f9475744180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9475742cd0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f9475742cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94757410a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475741230"/>
        <function-ref name="getPayload" scoped="" ref="0x7f94757413c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475741550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94757416e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9475747320" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f9475747320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94757476a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9475747830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94757479c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475747b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475747ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f94757451d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f94757451d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475745550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f947573ae80" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f947573ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94757335e0"/>
        <function-ref name="get" scoped="" ref="0x7f9475733090"/>
        <function-ref name="isSet" scoped="" ref="0x7f9475734ad0"/>
        <function-ref name="set" scoped="" ref="0x7f9475733b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f947573fb40" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f947573fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f947573e020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f947573e1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f947573e340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f947573e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9475746510" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9475746510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475746890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f9475728130" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9475728130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9475727750"/>
        <function-ref name="clear" scoped="" ref="0x7f9475727e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f9475727020"/>
        <function-ref name="set" scoped="" ref="0x7f94757265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f9475729b70" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9475729b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f947572c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f94757368d0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f94757368d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947573a090"/>
        <function-ref name="get" scoped="" ref="0x7f947573baf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f947573b5a0"/>
        <function-ref name="set" scoped="" ref="0x7f947573a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f947573f1a0" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f947573f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f947573f520"/>
        <function-ref name="noAck" scoped="" ref="0x7f947573f6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f947573f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f9475744a50" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9475744a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475744dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f947573e790" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f947573e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f947573eb10"/>
        <function-ref name="setRetries" scoped="" ref="0x7f947573eca0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f947573ee30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f947573d020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f947573d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9475741990" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9475741990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9475741d10"/>
        <function-ref name="source" scoped="" ref="0x7f9475740020"/>
        <function-ref name="address" scoped="" ref="0x7f94757401b0"/>
        <function-ref name="destination" scoped="" ref="0x7f9475740340"/>
        <function-ref name="setSource" scoped="" ref="0x7f94757404d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9475740660"/>
        <function-ref name="type" scoped="" ref="0x7f94757407f0"/>
        <function-ref name="setType" scoped="" ref="0x7f9475740980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9475740b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9475740ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9475740e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f947573d480" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f947573d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f947573d900"/>
        <function-ref name="setChannel" scoped="" ref="0x7f947573da90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f947573dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f947572be60" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f947572be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f947572d210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f94757426c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f94757426c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475742a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f94757208f0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f94757208f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9475720c70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9475720e00"/>
        <function-ref name="start" scoped="" ref="0x7f947571d020"/>
        <function-ref name="stop" scoped="" ref="0x7f947571d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f94756f3020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f94756f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94756f2740"/>
        <function-ref name="get" scoped="" ref="0x7f94756f21f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f94756f3c50"/>
        <function-ref name="set" scoped="" ref="0x7f94756f2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f9475713160" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f9475713160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f94757134e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f947570c2c0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f947570c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947570c740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947570c8d0"/>
        <function-ref name="request" scoped="" ref="0x7f947570ca60"/>
        <function-ref name="granted" scoped="" ref="0x7f947570cbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947570cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f947571a4d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f947571a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f947571a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f947571d980" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f947571d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947571dd00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f947571c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947571c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f947571c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947571c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f947571b900" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f947571b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947571bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f94756fd490" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f94756fd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f94756fd810"/>
        <function-ref name="address" scoped="" ref="0x7f94756fd9a0"/>
        <function-ref name="destination" scoped="" ref="0x7f94756fdb30"/>
        <function-ref name="setSource" scoped="" ref="0x7f94756fdcc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f94756fde50"/>
        <function-ref name="pan" scoped="" ref="0x7f9475706020"/>
        <function-ref name="setPan" scoped="" ref="0x7f94757061b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9475706340"/>
        <function-ref name="localPan" scoped="" ref="0x7f94757064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f9475706890" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f9475706890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475706c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475706da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9475705020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94757051b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9475705340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f94756f7a90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f94756f7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94756f41f0"/>
        <function-ref name="get" scoped="" ref="0x7f94756f6c40"/>
        <function-ref name="isSet" scoped="" ref="0x7f94756f66f0"/>
        <function-ref name="set" scoped="" ref="0x7f94756f4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f94756fc080" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f94756fc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f94756fc400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f94756fc590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f94756fc720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f94756fc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f9475716ba0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f9475716ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475715020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94757151b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9475715340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94757154d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9475715660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f947571ccb0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f947571ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947571b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f94756ee130" loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f94756ee130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f94756ed8a0"/>
        <function-ref name="clear" scoped="" ref="0x7f94756eb020"/>
        <function-ref name="isValid" scoped="" ref="0x7f94756ed170"/>
        <function-ref name="set" scoped="" ref="0x7f94756eb750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f94756f0bb0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f94756f0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94756ef820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f94756fa540" loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f94756fa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94756f9c50"/>
        <function-ref name="get" scoped="" ref="0x7f94756f9700"/>
        <function-ref name="isSet" scoped="" ref="0x7f94756f91b0"/>
        <function-ref name="set" scoped="" ref="0x7f94756f71f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9475705670" loc="68:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475705670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f94757059f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f9475705b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9475705d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f947570dc10" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f947570dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475714020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f94757141b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475714340"/>
        <function-ref name="cancel" scoped="" ref="0x7f94757144d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475714660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f94757191d0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f94757191d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475719550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f94756fcb70" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f94756fcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f94756fb020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f94756fb1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f94756fb340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f94756fb4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f94756fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f94756fb930" loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f94756fb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f94756fbcb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f94756fbe40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f94756fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9475718470" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9475718470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f94757187f0"/>
        <function-ref name="source" scoped="" ref="0x7f9475718980"/>
        <function-ref name="address" scoped="" ref="0x7f9475718b10"/>
        <function-ref name="destination" scoped="" ref="0x7f9475718ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f9475718e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9475716020"/>
        <function-ref name="type" scoped="" ref="0x7f94757161b0"/>
        <function-ref name="setType" scoped="" ref="0x7f9475716340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f94757164d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9475716660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f94757167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f94756ea3f0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f94756ea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f94756e9970"/>
        <function-ref name="clear" scoped="" ref="0x7f94756e70d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f94756e9240"/>
        <function-ref name="set" scoped="" ref="0x7f94756e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f94757149d0" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f94757149d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475714d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f94756f0350" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f94756f0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f94756f06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f9475719df0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f9475719df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94757181c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f94756c0a40" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f94756c0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f94756c0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f94756ccc80" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f94756ccc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f94756d30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f94756b9e30" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f94756b9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f94756c51e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f94756c5370"/>
        <function-ref name="source" scoped="" ref="0x7f94756c5500"/>
        <function-ref name="destination" scoped="" ref="0x7f94756c5690"/>
        <function-ref name="setSource" scoped="" ref="0x7f94756c5820"/>
        <function-ref name="setDestination" scoped="" ref="0x7f94756c59b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f94756c5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f94756c18e0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f94756c18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f94756c1c60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f94756c1df0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f94756ca020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f94756ca1b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f94756ca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f9475697780" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f9475697780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9475697b00"/>
        <function-ref name="wait" scoped="" ref="0x7f9475697c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475697e20"/>
        <function-ref name="isFree" scoped="" ref="0x7f947569b020"/>
        <function-ref name="getNow" scoped="" ref="0x7f947569b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f9475690ce0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f9475690ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947569a0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f947569a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947569a3c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f947569a550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f947569a6e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f947569a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f947569ae40" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f947569ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f947568f500"/>
        <function-ref name="clear" scoped="" ref="0x7f947568fc30"/>
        <function-ref name="isValid" scoped="" ref="0x7f9475696da0"/>
        <function-ref name="set" scoped="" ref="0x7f947568d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f94756dd350" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f94756dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94756dd6d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f94756dd860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94756dd9f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f94756ddb80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f94756ddd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f94756cd640" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f94756cd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f94756cd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f94756d44f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f94756d44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f94756d4870"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f94756d4a00"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f94756d4b90"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f94756d4d20"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f94756e2020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f94756e21b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f94756e2340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f94756e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f947569d880" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f947569d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f947569dc00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f947569dd90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f94756b7020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f94756b71b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f94756b7340"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f94756b74d0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f94756b7660"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f94756b77f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f94756b7980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f94756b7b10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f94756b7ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f94756b7e30"/>
        <function-ref name="localAddr" scoped="" ref="0x7f94756b6020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f94756b62b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f94756b6440"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f94756b65d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f94756b6760"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f94756b68f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f94756b6a80"/>
        <function-ref name="isForMe" scoped="" ref="0x7f94756b6c10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f94756b6da0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f947569c020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f947569c1b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f947569c340"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f947569c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f94756cf980" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f94756cf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f94756cfd00"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f94756dc020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f94756dc1b0"/>
        <function-ref name="getSender" scoped="" ref="0x7f94756dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f94756c6340" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f94756c6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f94756c66c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f94756c6850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f94756c69e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f94756c6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f94756336b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f94756336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9475633a50"/>
        <function-ref name="wait" scoped="" ref="0x7f9475633be0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475633d70"/>
        <function-ref name="isFree" scoped="" ref="0x7f94755f7020"/>
        <function-ref name="getNow" scoped="" ref="0x7f94755f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f94755f7820" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f94755f7820"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9475daad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9475daad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f94758c7d90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f94755f3090"/>
        <function-ref name="fired" scoped="" ref="0x7f94755f5090"/>
        <function-ref name="startAt" scoped="" ref="0x7f94755f5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f94755f5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f94755f3550"/>
        <function-ref name="start" scoped="" ref="0x7f94755f66a0"/>
        <function-ref name="stop" scoped="" ref="0x7f94755f6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f9473ec4c30" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f9473ec4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9473ec3020"/>
        <function-ref name="wait" scoped="" ref="0x7f9473ec31b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473ec3340"/>
        <function-ref name="isFree" scoped="" ref="0x7f9473ec34d0"/>
        <function-ref name="getNow" scoped="" ref="0x7f9473ec3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f9473ec3b50" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9473ec3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f94758c7d90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9473ec04e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9473ec14e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9473ec1e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9473ec19a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9473ec09a0"/>
        <function-ref name="start" scoped="" ref="0x7f9473ec29b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9473ec1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f9473ec0d90" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f9473ec0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f9473ebe180"/>
        <function-ref name="suspend" scoped="" ref="0x7f9473ebe310"/>
        <function-ref name="resume" scoped="" ref="0x7f9473ebe4a0"/>
        <function-ref name="run" scoped="" ref="0x7f9473ebe630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tasklet" ref="0x7f94755ff740" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tasklet" scoped="" ref="0x7f94755ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94755ffac0"/>
        <function-ref name="runTask" scoped="" ref="0x7f94755ffc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f9475600130" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f9475600130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f94756004b0"/>
        <function-ref name="suspend" scoped="" ref="0x7f9475600640"/>
        <function-ref name="resume" scoped="" ref="0x7f94756007d0"/>
        <function-ref name="run" scoped="" ref="0x7f9475600960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f947553f8f0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f947553f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947553fc70"/>
        <function-ref name="cancel" scoped="" ref="0x7f947553fe00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947553e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f947553e2b0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f947553e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947553e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f9475542420" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f9475542420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f94755427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f94755458b0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f94755458b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475545c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475545dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9475544020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94755441b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9475544340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f94755446c0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f94755446c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475544a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9475544bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475544d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475543020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94755431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f9475543c90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f9475543c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94755420a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9475540a70" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9475540a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475540df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f947553f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947553f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f947553f340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f947553f4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f947553f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f947553e8c0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f947553e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f947553ec40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f947553edd0"/>
        <function-ref name="source" scoped="" ref="0x7f947553d020"/>
        <function-ref name="destination" scoped="" ref="0x7f947553d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f947553d340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f947553d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f947553d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9475543530" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9475543530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94755438d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f9475542b80" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9475542b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475540020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9475546280" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9475546280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9475546600"/>
        <function-ref name="source" scoped="" ref="0x7f9475546790"/>
        <function-ref name="address" scoped="" ref="0x7f9475546920"/>
        <function-ref name="destination" scoped="" ref="0x7f9475546ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f9475546c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9475546dd0"/>
        <function-ref name="type" scoped="" ref="0x7f9475545020"/>
        <function-ref name="setType" scoped="" ref="0x7f94755451b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9475545340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f94755454d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9475545660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f94755403e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f94755403e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475540780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9473e9f2b0" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9473e9f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473e9f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9473ea08f0" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9473ea08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473ea0c70"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473ea0e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473e9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f9473ea23a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f9473ea23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f9473ea2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9473ea5720" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f9473ea5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473ea5aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473ea5c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9473ea5dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473ea4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473ea41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9473ea4530" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f9473ea4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473ea48d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9473ea4a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473ea4bf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473ea4d80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473ea3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f9473ea3b00" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f9473ea3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9473ea81d0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9473ea81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473ea8550"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473ea86e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473ea8870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473ea8a00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9473ea8b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9473ea8d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9473e9f8c0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9473e9f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9473e9fd40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f9473e9d020"/>
        <function-ref name="source" scoped="" ref="0x7f9473e9d1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f9473e9d340"/>
        <function-ref name="setSource" scoped="" ref="0x7f9473e9d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9473e9d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9473e9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f9473e9da40" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9473e9da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f9473e9ddc0"/>
        <function-ref name="changed" scoped="" ref="0x7f9473e9c020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f9473e9c1b0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f9473e9c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9473ea1a70" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9473ea1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473ea1df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473ea0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473ea01b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473ea0340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9473ea04d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9473ea0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9473ea33a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9473ea33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473ea3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f9473ea2b00" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f9473ea2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473ea1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9473ea6020" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9473ea6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9473ea63a0"/>
        <function-ref name="source" scoped="" ref="0x7f9473ea6530"/>
        <function-ref name="address" scoped="" ref="0x7f9473ea66c0"/>
        <function-ref name="destination" scoped="" ref="0x7f9473ea6850"/>
        <function-ref name="setSource" scoped="" ref="0x7f9473ea69e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9473ea6b70"/>
        <function-ref name="type" scoped="" ref="0x7f9473ea6d00"/>
        <function-ref name="setType" scoped="" ref="0x7f9473ea5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9473ea51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9473ea5340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9473ea54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f9473ea13e0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f9473ea13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473ea1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f947555d5a0" loc="54:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f947555d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f947555d920"/>
        <function-ref name="changed" scoped="" ref="0x7f947555dab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f947555dc40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f947555ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9475527020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9475527020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94755273a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475527530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94755276c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9475527910" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9475527910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9475527c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9475527e20"/>
        <function-ref name="request" scoped="" ref="0x7f9475526020"/>
        <function-ref name="granted" scoped="" ref="0x7f94755261b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9475526340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f9475536550" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f9475536550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94755368d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475536a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475536bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f94754c1150" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f94754c1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f94754c14f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94754c1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f94754bf1f0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94754bf1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f94754bf590"/>
        <function-ref name="configure" scoped="" ref="0x7f94754bf720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94754c2390" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94754c2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94754c2730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94754c28c0"/>
        <function-ref name="request" scoped="" ref="0x7f94754c2a50"/>
        <function-ref name="granted" scoped="" ref="0x7f94754c2be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94754c2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f94754c18d0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94754c18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f94754c1c50"/>
        <function-ref name="userId" scoped="" ref="0x7f94754c1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9473e4a3b0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9473e4a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9473e4a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9473e4a9c0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9473e4a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9473e4ad40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9473e49020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9473e491b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9473e49340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9473e47850" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9473e47850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9473e47bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9473e47d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9473e46910" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9473e46910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9473e46cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f9473e46e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9473e45120" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9473e45120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9473e454a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9473e45630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9473e457c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9473e45950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9473e489d0" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9473e489d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9473e48d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473e47020"/>
        <function-ref name="request" scoped="" ref="0x7f9473e471b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9473e47340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473e474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9473e46020" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9473e46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9473e463a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9473e46530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9473e45c20" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9473e45c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9473e43020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473e431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f94754882b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f94754882b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475488630"/>
        <function-ref name="cancel" scoped="" ref="0x7f94754887c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475488950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9475488be0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9475488be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475486020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f947548dd30" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f947548dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f947548c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f94754bce00" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f94754bce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947548e1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f947548e350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f947548e4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947548e670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f947548e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f9475489470" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9475489470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94754897f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475489980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475489b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9475489ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9475489e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9475488020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f947548c390" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f947548c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f947548c710"/>
        <function-ref name="getDSN" scoped="" ref="0x7f947548c8a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f947548ca30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f947548cbc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f947548cd50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f947548b020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f947548b1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f947548b340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f947548b4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f947548b660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f947548b7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f947548b980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f947548bb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f947548bda0"/>
        <function-ref name="localPan" scoped="" ref="0x7f947548a020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f947548a1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f947548a340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f947548a4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f947548a660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f947548a7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f947548a980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f947548ab10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f947548aca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f947548ae30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f9475489020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f947548ea50" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f947548ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947548edd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f947548d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947548d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f947548d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947548d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f947548d760" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f947548d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947548dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f947544bc40" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f947544bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947544a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f947544a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947544a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f947544a5d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f947544a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947544a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f947544e020" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f947544e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947544e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f947544e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947544e6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f947544e850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f947544e9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f947544eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f947544c770" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f947544c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947544caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f947544abe0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f947544abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475449020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94754491b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475449340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94754494d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9475449660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94754497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f947544ee00" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f947544ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947544c1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f947544c350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947544c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f947544f0a0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f947544f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947544f420"/>
        <function-ref name="cancel" scoped="" ref="0x7f947544f5b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947544f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f947544f9d0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f947544f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947544fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f947544cd80" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f947544cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947544b180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f947544b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f947544b4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f947544b630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f947544b7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f947544b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f94753b6c40" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f94753b6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f94753b4020"/>
        <function-ref name="address" scoped="" ref="0x7f94753b41b0"/>
        <function-ref name="destination" scoped="" ref="0x7f94753b4340"/>
        <function-ref name="setSource" scoped="" ref="0x7f94753b44d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f94753b4660"/>
        <function-ref name="pan" scoped="" ref="0x7f94753b47f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f94753b4980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f94753b4b10"/>
        <function-ref name="localPan" scoped="" ref="0x7f94753b4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f94753b3020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f94753b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94753b33a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94753b3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94753b36c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94753b3850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f94753b39e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94753b3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f94753b9b20" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f94753b9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f94753b8020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f94753b81b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f94753b8340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f94753b84d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f94753b8660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f94753b87f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f94753b8980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f94753b8b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f94753b8ca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f94753b8e30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f94753b7020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f94753b71b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f94753b7340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f94753b75d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f94753b7760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f94753b78f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f94753b7a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f94753b7c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f94753b7da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f94753b6020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f94753b61b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f94753b6340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f94753b64d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f94753b6660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f94753b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f94753b3e60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f94753b3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94753b2210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94753b23a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94753b2530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94753b26c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f94753b2850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94753b29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f9473ddc470" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f9473ddc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f9473ddc7f0"/>
        <function-ref name="address" scoped="" ref="0x7f9473ddc980"/>
        <function-ref name="destination" scoped="" ref="0x7f9473ddcb10"/>
        <function-ref name="setSource" scoped="" ref="0x7f9473ddcca0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9473ddce30"/>
        <function-ref name="pan" scoped="" ref="0x7f9473ddb020"/>
        <function-ref name="setPan" scoped="" ref="0x7f9473ddb1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9473ddb340"/>
        <function-ref name="localPan" scoped="" ref="0x7f9473ddb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9473ddb720" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9473ddb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473ddbaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473ddbc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473ddbdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473dda020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9473dda1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9473dda340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f9473ddf3a0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f9473ddf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f9473ddf720"/>
        <function-ref name="getDSN" scoped="" ref="0x7f9473ddf8b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f9473ddfa40"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f9473ddfbd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f9473ddfd60"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f9473dde020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f9473dde1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f9473dde340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f9473dde4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f9473dde660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f9473dde7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f9473dde980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f9473ddeb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f9473ddeda0"/>
        <function-ref name="localPan" scoped="" ref="0x7f9473ddd020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f9473ddd1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f9473ddd340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f9473ddd4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f9473ddd660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9473ddd7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f9473ddd980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f9473dddb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f9473dddca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f9473ddde30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f9473ddc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f9473dda5f0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9473dda5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f9473dda970"/>
        <function-ref name="changed" scoped="" ref="0x7f9473ddab00"/>
        <function-ref name="amGroup" scoped="" ref="0x7f9473ddac90"/>
        <function-ref name="setAddress" scoped="" ref="0x7f9473ddae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9473dd8120" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9473dd8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473dd84a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473dd8630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473dd87c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473dd8950"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9473dd8ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9473dd8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f94753474a0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f94753474a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475347820"/>
        <function-ref name="cancel" scoped="" ref="0x7f94753479b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475347b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9475347dd0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9475347dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475346180"/>
        <function-ref name="header" scoped="" ref="0x7f9475346310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f94753482f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f94753482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475348670"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475348800"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475348990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f94753465a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f94753465a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f9475346920"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f9475346ab0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f9475346c40"/>
        <function-ref name="getSender" scoped="" ref="0x7f9475346dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9475348be0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9475348be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475347020"/>
        <function-ref name="header" scoped="" ref="0x7f94753471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9473d8bbd0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9473d8bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473d89020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473d891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473d89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9473d895d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9473d895d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473d89950"/>
        <function-ref name="header" scoped="" ref="0x7f9473d89ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f9473d87410" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9473d87410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473d87790"/>
        <function-ref name="clearAll" scoped="" ref="0x7f9473d87920"/>
        <function-ref name="get" scoped="" ref="0x7f9473d87ab0"/>
        <function-ref name="set" scoped="" ref="0x7f9473d87c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9473d8c4e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f9473d8c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473d8c860"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473d8c9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473d8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f9473d887e0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f9473d887e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f9473d88b60"/>
        <function-ref name="insertNode" scoped="" ref="0x7f9473d88cf0"/>
        <function-ref name="getNode" scoped="" ref="0x7f9473d88e80"/>
        <function-ref name="evicted" scoped="" ref="0x7f9473d87030"/>
        <function-ref name="getIndex" scoped="" ref="0x7f9473d871c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9473d8cdd0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9473d8cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473d8b180"/>
        <function-ref name="header" scoped="" ref="0x7f9473d8b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9473d8b560" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9473d8b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9473d8b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f9473d89d30" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f9473d89d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f9473d880e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f9473d88270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f9473d88400"/>
        <function-ref name="getSender" scoped="" ref="0x7f9473d88590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f947537de30" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f947537de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f947537a1e0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f947537a370"/>
        <function-ref name="getNode" scoped="" ref="0x7f947537a500"/>
        <function-ref name="evicted" scoped="" ref="0x7f947537a690"/>
        <function-ref name="getIndex" scoped="" ref="0x7f947537a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f9475376d10" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9475376d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94753750e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f9475375270"/>
        <function-ref name="get" scoped="" ref="0x7f9475375400"/>
        <function-ref name="set" scoped="" ref="0x7f9475375590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f9475379a00" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f9475379a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f9475379d80"/>
        <function-ref name="insertNode" scoped="" ref="0x7f9475376020"/>
        <function-ref name="getNode" scoped="" ref="0x7f94753761b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f9475376340"/>
        <function-ref name="getIndex" scoped="" ref="0x7f94753764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f94753793b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f94753793b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475379730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f9473d85d40" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f9473d85d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473d840e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f9473d84270"/>
        <function-ref name="get" scoped="" ref="0x7f9473d84400"/>
        <function-ref name="set" scoped="" ref="0x7f9473d84590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f94753357c0" loc="85:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f94753357c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475335b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475335cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475335e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9475334120" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9475334120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94753344a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f9475331cb0" loc="93:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f9475331cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f94753300a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f9475330230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f94753303c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9475342bb0" loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f9475342bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475337020"/>
        <function-ref name="cancel" scoped="" ref="0x7f94753371b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475337340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f94753368b0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f94753368b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475336c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475336dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475335020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94753351b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9475335340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94753354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9475334730" loc="87:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9475334730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475334ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475334c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475334dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9475332020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f94753321b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9475332340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f9475331020" loc="92:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f9475331020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f94753313a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f9475331530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f94753316c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f9475331850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f94753319e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f94753375d0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f94753375d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475337950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f9475332590" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475332590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9475332910"/>
        <function-ref name="noAck" scoped="" ref="0x7f9475332aa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9475332c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f9475337ba0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f9475337ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f9475336020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f94753361b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f9475336340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f94753364d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f9475336660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f947532a880" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f947532a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f947532ac00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f947532ad90"/>
        <function-ref name="start" scoped="" ref="0x7f9475316020"/>
        <function-ref name="stop" scoped="" ref="0x7f94753161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f94753128c0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f94753128c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475312c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475312dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475311020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f94753112b0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f94753112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475311630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9475316440" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f9475316440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94753167c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475316950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475316ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f94753143d0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f94753143d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475314750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94753148e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475314a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9475314c00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9475314d90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9475313020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9475313270" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9475313270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f94753135f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9475313780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9475313910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9475313aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f9475313d90" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f9475313d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9475312180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9475312310"/>
        <function-ref name="start" scoped="" ref="0x7f94753124a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9475312630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9475316d70" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9475316d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475314180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f94753118c0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f94753118c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475311c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9475311dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9475310020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94753101b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9475310340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94753104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9473d61da0" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9473d61da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9473d60180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9473d60310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9473d604a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9473d60630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f94752a2cc0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f94752a2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f94752a10a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f94752a1230"/>
        <function-ref name="start" scoped="" ref="0x7f94752a13c0"/>
        <function-ref name="stop" scoped="" ref="0x7f94752a1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f947529f080" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f947529f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f947529f400"/>
        <function-ref name="turnOn" scoped="" ref="0x7f947529f590"/>
        <function-ref name="setChannel" scoped="" ref="0x7f947529f720"/>
        <function-ref name="done" scoped="" ref="0x7f947529f8b0"/>
        <function-ref name="standby" scoped="" ref="0x7f947529fa40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f947529fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f94752a17e0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f94752a17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94752a1b60"/>
        <function-ref name="cancel" scoped="" ref="0x7f94752a1cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94752a1e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f947529e730" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f947529e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f947529eab0"/>
        <function-ref name="header" scoped="" ref="0x7f947529ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f94752a0130" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f94752a0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94752a04b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f947529fe20" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f947529fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947529e1c0"/>
        <function-ref name="ready" scoped="" ref="0x7f947529e350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947529e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f94752a0700" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f94752a0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f94752a0a80"/>
        <function-ref name="setChannel" scoped="" ref="0x7f94752a0c10"/>
        <function-ref name="getChannel" scoped="" ref="0x7f94752a0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9473d583a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9473d583a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9473d58720"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9473d588b0"/>
        <function-ref name="start" scoped="" ref="0x7f9473d58a40"/>
        <function-ref name="stop" scoped="" ref="0x7f9473d58bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f9473d58e60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9473d58e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9473d57210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f9473d56d20" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f9473d56d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f9473d550e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f9473d55270"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9473d55400"/>
        <function-ref name="done" scoped="" ref="0x7f9473d55590"/>
        <function-ref name="standby" scoped="" ref="0x7f9473d55720"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9473d558b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9473d574a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f9473d574a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473d57820"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473d579b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473d57b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f9473d52020" loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f9473d52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9473d523a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473d52530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f9473d53020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9473d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473d533a0"/>
        <function-ref name="header" scoped="" ref="0x7f9473d53530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f9473d52800" loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f9473d52800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9473d52b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473d52d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9473d57dd0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9473d57dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473d56180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f9473d53800" loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f9473d53800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9473d53b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473d53d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f9473d545a0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f9473d545a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473d54920"/>
        <function-ref name="ready" scoped="" ref="0x7f9473d54ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473d54c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f9473d563d0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f9473d563d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f9473d56750"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9473d568e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9473d56a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f9473d55b00" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f9473d55b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f9473d55e80"/>
        <function-ref name="suspend" scoped="" ref="0x7f9473d54030"/>
        <function-ref name="resume" scoped="" ref="0x7f9473d541c0"/>
        <function-ref name="run" scoped="" ref="0x7f9473d54350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9475246020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9475246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94752463a0"/>
        <function-ref name="ready" scoped="" ref="0x7f9475246530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94752466c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9475246950" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9475246950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475246cd0"/>
        <function-ref name="header" scoped="" ref="0x7f9475246e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f94752450e0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f94752450e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9475245460"/>
        <function-ref name="wait" scoped="" ref="0x7f94752455f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475245780"/>
        <function-ref name="isFree" scoped="" ref="0x7f9475245910"/>
        <function-ref name="getNow" scoped="" ref="0x7f9475245aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9475245d30" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9475245d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f94752440e0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f9475244270"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f9475244400"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f9475244590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f94752476f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f94752476f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475247a70"/>
        <function-ref name="header" scoped="" ref="0x7f9475247c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f9475298db0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f9475298db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9475247180"/>
        <function-ref name="ready" scoped="" ref="0x7f9475247310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94752474a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9473d18310" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9473d18310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473d18690"/>
        <function-ref name="ready" scoped="" ref="0x7f9473d18820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473d189b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9473d18c40" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9473d18c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473d17020"/>
        <function-ref name="header" scoped="" ref="0x7f9473d171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f9473d17400" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f9473d17400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9473d17780"/>
        <function-ref name="wait" scoped="" ref="0x7f9473d17910"/>
        <function-ref name="cancel" scoped="" ref="0x7f9473d17aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7f9473d17c30"/>
        <function-ref name="getNow" scoped="" ref="0x7f9473d17dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f9473d16060" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f9473d16060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f9473d163e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f9473d16570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9473d16800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9473d16800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f9473d16b80"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f9473d16d10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f9473d15020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f9473d151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9473d19a30" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9473d19a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9473d19db0"/>
        <function-ref name="header" scoped="" ref="0x7f9473d18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f9473d19140" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f9473d19140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9473d194c0"/>
        <function-ref name="ready" scoped="" ref="0x7f9473d19650"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9473d197e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f9473d15480" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f9473d15480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9473d15800"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473d15990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f947525c850" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f947525c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f947525cbd0"/>
        <function-ref name="rand32" scoped="" ref="0x7f947525cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f947525a6a0" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f947525a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f947525c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9475261710" loc="44:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475261710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475261a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f9475256850" loc="48:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f9475256850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f9475256bd0"/>
        <function-ref name="rand32" scoped="" ref="0x7f9475256d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f94752576c0" loc="47:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f94752576c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475256390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f947525bdc0" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f947525bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9475257180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9475214630" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9475214630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94752149b0"/>
        <function-ref name="ready" scoped="" ref="0x7f9475214b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9475214cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9475212020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9475212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94752123a0"/>
        <function-ref name="header" scoped="" ref="0x7f9475212530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f9475212780" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f9475212780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9475212b00"/>
        <function-ref name="wait" scoped="" ref="0x7f9475212c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f9475212e20"/>
        <function-ref name="isFree" scoped="" ref="0x7f9475211020"/>
        <function-ref name="getNow" scoped="" ref="0x7f94752111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f94752105d0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f94752105d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9475210950"/>
        <function-ref name="get" scoped="" ref="0x7f9475210ae0"/>
        <function-ref name="setValue" scoped="" ref="0x7f9475210c70"/>
        <function-ref name="set" scoped="" ref="0x7f9475210e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9475211440" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9475211440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f94752117c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f9475211950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f9475211ae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f9475211c70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f9475211e00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f9475210020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f94752101b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f9475210340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9475215400" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9475215400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9475215780"/>
        <function-ref name="header" scoped="" ref="0x7f9475215910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f947523eac0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f947523eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947523ee40"/>
        <function-ref name="ready" scoped="" ref="0x7f9475215020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94752151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9475215b60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9475215b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9475214020"/>
        <function-ref name="noAck" scoped="" ref="0x7f94752141b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9475214340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f94751f8d60" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f94751f8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f94751f7180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f94751f7310"/>
        <function-ref name="start" scoped="" ref="0x7f94751f74a0"/>
        <function-ref name="stop" scoped="" ref="0x7f94751f7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f94751f37c0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f94751f37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f94751f3b40"/>
        <function-ref name="request" scoped="" ref="0x7f94751f3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f94751ee020" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f94751ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94751ee3a0"/>
        <function-ref name="ready" scoped="" ref="0x7f94751ee530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94751ee6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f94751ee950" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f94751ee950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94751eecd0"/>
        <function-ref name="header" scoped="" ref="0x7f94751eee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f94751f6840" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f94751f6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f94751f6bc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f94751f6d50"/>
        <function-ref name="setChannel" scoped="" ref="0x7f94751f4020"/>
        <function-ref name="done" scoped="" ref="0x7f94751f41b0"/>
        <function-ref name="standby" scoped="" ref="0x7f94751f4340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f94751f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f94751f2020" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f94751f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94751f23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94751f2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94751f26c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94751f2850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f94751f29e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94751f2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f94751ef020" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f94751ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f94751ef4a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f94751ef630"/>
        <function-ref name="setChannel" scoped="" ref="0x7f94751ef7c0"/>
        <function-ref name="done" scoped="" ref="0x7f94751ef950"/>
        <function-ref name="standby" scoped="" ref="0x7f94751efae0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f94751efc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f94751f2e00" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f94751f2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f94751f11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f94751f3060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f94751f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94751f33e0"/>
        <function-ref name="header" scoped="" ref="0x7f94751f3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f94751f0950" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f94751f0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94751f0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f94751f14b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f94751f14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f94751f1830"/>
        <function-ref name="stopDone" scoped="" ref="0x7f94751f19c0"/>
        <function-ref name="start" scoped="" ref="0x7f94751f1b50"/>
        <function-ref name="stop" scoped="" ref="0x7f94751f1ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f94751ec8c0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f94751ec8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94751ecc40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f94751ecdd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94751eb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f94751eb1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f94751eb340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f94751eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f94751f6270" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f94751f6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94751f65f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f94751eb760" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f94751eb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f94751ebae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f94751f0020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f94751f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94751f03a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f94751f0530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94751f06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f94751f4720" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f94751f4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94751f4aa0"/>
        <function-ref name="ready" scoped="" ref="0x7f94751f4c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94751f4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f94751ec120" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f94751ec120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f94751ec4a0"/>
        <function-ref name="request" scoped="" ref="0x7f94751ec630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f94751f7880" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f94751f7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94751f7c00"/>
        <function-ref name="cancel" scoped="" ref="0x7f94751f7d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94751f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f9474fc8760" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f9474fc8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474fc8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9474fc8c70"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474fc8e00"/>
        <function-ref name="set" scoped="" ref="0x7f9474fc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9474fcc7e0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9474fcc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474fccb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474fcccf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474fcce80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474fcb030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474fcb1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474fcb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9474fc9800" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9474fc9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474fc9b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474fc9d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474fc8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474fc81b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474fc8340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474fc84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f9474fd0bb0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9474fd0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9474fcd170"/>
        <function-ref name="clear" scoped="" ref="0x7f9474fcd8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f9474fcea00"/>
        <function-ref name="set" scoped="" ref="0x7f9474fcc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f9474fcb760" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474fcb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474fc93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f9474fd3d00" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9474fd3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9474fd12e0"/>
        <function-ref name="clear" scoped="" ref="0x7f9474fd1a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f9474fd2b60"/>
        <function-ref name="set" scoped="" ref="0x7f9474fd0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f9473cc4310" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f9473cc4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473cc4690"/>
        <function-ref name="get" scoped="" ref="0x7f9473cc4820"/>
        <function-ref name="setValue" scoped="" ref="0x7f9473cc49b0"/>
        <function-ref name="set" scoped="" ref="0x7f9473cc4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9473cc53b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9473cc53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473cc5730"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473cc58c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473cc5a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473cc5be0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9473cc5d70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9473cc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9473cc02b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9473cc02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9473cc0630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9473cc07c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9473cc0950"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9473cc0ae0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9473cc0c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9473cc0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f9473cc9630" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f9473cc9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9473cc8ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f9473cc6460"/>
        <function-ref name="isValid" scoped="" ref="0x7f9473cc85b0"/>
        <function-ref name="set" scoped="" ref="0x7f9473cc6b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f9473cc3020" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9473cc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9473cc3c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f9473cc21e0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f9473cc21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9473cc2e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f9473ccd6f0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9473ccd6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9473ccbce0"/>
        <function-ref name="clear" scoped="" ref="0x7f9473cca460"/>
        <function-ref name="isValid" scoped="" ref="0x7f9473ccb5b0"/>
        <function-ref name="set" scoped="" ref="0x7f9473ccab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9475197a60" loc="20:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9475197a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94751946b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f947518f320" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f947518f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f947518c870"/>
        <function-ref name="fired" scoped="" ref="0x7f947518ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f947518dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f947518d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f947518b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f947518ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f947518d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f947518e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f947518c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f947518e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f947518e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f947518b7d0" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f947518b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9475189440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9475193540" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475193540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94751938c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f947517f060" loc="29:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f947517f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f947517fe70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f947517e820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f947517e360"/>
        <function-ref name="overflow" scoped="" ref="0x7f947517ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9475185020" loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9475185020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94751853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f9475185a10" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9475185a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f94751812a0"/>
        <function-ref name="fired" scoped="" ref="0x7f94751822a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9475182c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9475182760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9475181760"/>
        <function-ref name="start" scoped="" ref="0x7f9475183890"/>
        <function-ref name="stop" scoped="" ref="0x7f9475183da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f947507b890" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f947507b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f94750780d0"/>
        <function-ref name="fired" scoped="" ref="0x7f94750790d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9475079a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9475079590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9475078590"/>
        <function-ref name="start" scoped="" ref="0x7f947507a6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f947507abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f947507b080" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f947507b080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9475daa9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9475daa9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f947507b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9475078bc0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9475078bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9475076a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f94750754e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9475075020"/>
        <function-ref name="overflow" scoped="" ref="0x7f94750759a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f9473c92190" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9473c92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9473c92510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9473c926a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9473c92830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9473c929c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9473c92b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9473c92ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9473c92e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9473c91030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9473c9f830" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9473c9f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9473c9b090"/>
        <function-ref name="fired" scoped="" ref="0x7f9473c9c090"/>
        <function-ref name="startAt" scoped="" ref="0x7f9473c9ca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9473c9c550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9473c9b550"/>
        <function-ref name="start" scoped="" ref="0x7f9473c9e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9473c9ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9473c9f020" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9473c9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9473c9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9473c9bb80" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9473c9bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9473c9a9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9473c99360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9473c9ae70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9473c99820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f9473c8e780" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f9473c8e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9473c8eb00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f9473c8ec90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9473c8ee20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9473c8c020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9473c8c1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9473c8c340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9473c8c4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9473c8c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f9473c913e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9473c913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9473c8fe60"/>
        <function-ref name="fired" scoped="" ref="0x7f9473c90a60"/>
        <function-ref name="get" scoped="" ref="0x7f9473c90090"/>
        <function-ref name="reset" scoped="" ref="0x7f9473c8f020"/>
        <function-ref name="isOn" scoped="" ref="0x7f9473c8e350"/>
        <function-ref name="set" scoped="" ref="0x7f9473c90550"/>
        <function-ref name="start" scoped="" ref="0x7f9473c8f4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9473c8f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9473c99dd0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9473c99dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9473c94350"/>
        <function-ref name="test" scoped="" ref="0x7f9473c959a0"/>
        <function-ref name="get" scoped="" ref="0x7f9473c97ac0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9473c94810"/>
        <function-ref name="getScale" scoped="" ref="0x7f9473c94d20"/>
        <function-ref name="reset" scoped="" ref="0x7f9473c969f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9473c96530"/>
        <function-ref name="isOn" scoped="" ref="0x7f9473c95e60"/>
        <function-ref name="set" scoped="" ref="0x7f9473c96020"/>
        <function-ref name="start" scoped="" ref="0x7f9473c95020"/>
        <function-ref name="stop" scoped="" ref="0x7f9473c954e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f94750ee020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f94750ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f94750ee3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f94750ee530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f94750ee6c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f94750ee850"/>
        <function-ref name="setControlB" scoped="" ref="0x7f94750ee9e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f94750eeb70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f94750eed00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f94750ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f94750e9a40" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f94750e9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f94750e9dc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f94750e8020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f94750e81b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f94750e8340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f94750e84d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f94750e8660"/>
        <function-ref name="getAssr" scoped="" ref="0x7f94750e87f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f94750e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f94750ed520" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f94750ed520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f94750e9020"/>
        <function-ref name="fired" scoped="" ref="0x7f94750ecb80"/>
        <function-ref name="get" scoped="" ref="0x7f94750ec1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f94750ea090"/>
        <function-ref name="isOn" scoped="" ref="0x7f94750e94e0"/>
        <function-ref name="set" scoped="" ref="0x7f94750ec670"/>
        <function-ref name="start" scoped="" ref="0x7f94750ea550"/>
        <function-ref name="stop" scoped="" ref="0x7f94750eaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94750f6c70" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94750f6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f94750ef020"/>
        <function-ref name="test" scoped="" ref="0x7f94750f0610"/>
        <function-ref name="get" scoped="" ref="0x7f94750f38e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f94750ef4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f94750ef9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f94750f27a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f94750f22e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f94750f0ad0"/>
        <function-ref name="set" scoped="" ref="0x7f94750f3da0"/>
        <function-ref name="start" scoped="" ref="0x7f94750f2c60"/>
        <function-ref name="stop" scoped="" ref="0x7f94750f0150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f94750df2b0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f94750df2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f94750df630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f94750df7c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f94750df950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f94750dfae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f94750dfc70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f94750dfe00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f94750de020"/>
        <function-ref name="setControlA" scoped="" ref="0x7f94750de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f94750daa70" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f94750daa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f94750dadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f94750d9230" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f94750d9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f94750d95b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f94750d9740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f94750d98d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f94750d9a60"/>
        <function-ref name="countBusy" scoped="" ref="0x7f94750d9bf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f94750d9d80"/>
        <function-ref name="getAssr" scoped="" ref="0x7f94750d8020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f94750d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f94750de6b0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f94750de6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f94750da110"/>
        <function-ref name="fired" scoped="" ref="0x7f94750dcda0"/>
        <function-ref name="get" scoped="" ref="0x7f94750dc3d0"/>
        <function-ref name="reset" scoped="" ref="0x7f94750db2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f94750da5d0"/>
        <function-ref name="set" scoped="" ref="0x7f94750dc890"/>
        <function-ref name="start" scoped="" ref="0x7f94750db760"/>
        <function-ref name="stop" scoped="" ref="0x7f94750dbc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94750e4020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94750e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f94750e0350"/>
        <function-ref name="test" scoped="" ref="0x7f94750e19a0"/>
        <function-ref name="get" scoped="" ref="0x7f94750e4c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f94750e0810"/>
        <function-ref name="getScale" scoped="" ref="0x7f94750e0d20"/>
        <function-ref name="reset" scoped="" ref="0x7f94750e2b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f94750e2660"/>
        <function-ref name="isOn" scoped="" ref="0x7f94750e1e60"/>
        <function-ref name="set" scoped="" ref="0x7f94750e2150"/>
        <function-ref name="start" scoped="" ref="0x7f94750e1020"/>
        <function-ref name="stop" scoped="" ref="0x7f94750e14e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f9475042490" loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f9475042490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9475042810"/>
        <function-ref name="runTask" scoped="" ref="0x7f94750429a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f94750461d0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f94750461d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9475044b30"/>
        <function-ref name="fired" scoped="" ref="0x7f94750459f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f94750444e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9475044020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9475042020"/>
        <function-ref name="start" scoped="" ref="0x7f9475045020"/>
        <function-ref name="stop" scoped="" ref="0x7f9475045530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f947504ccf0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f947504ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9475047220"/>
        <function-ref name="fired" scoped="" ref="0x7f947504a7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9475049590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9475049110"/>
        <function-ref name="getdt" scoped="" ref="0x7f9475047b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f94750476a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f947504ac40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f947504b940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9475049ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f947504be10"/>
        <function-ref name="stop" scoped="" ref="0x7f947504a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9474ff2a00" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9474ff2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474ff2d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474ff1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9474ff7640" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f9474ff7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474ff4c40"/>
        <function-ref name="fired" scoped="" ref="0x7f9474ff51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9474ff4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9474ff5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9474ff2590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474ff2110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474ff5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9474ff6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474ff4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9474ff6860"/>
        <function-ref name="stop" scoped="" ref="0x7f9474ff6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9474ffd150" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9474ffd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474ff9700"/>
        <function-ref name="fired" scoped="" ref="0x7f9474ffcc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9474ffba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9474ffb5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9474ff7090"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474ff9ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474ffb110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9474ffdd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474ff90d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9474ffc2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474ffc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9474fef790" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9474fef790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474fee3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9474feea60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9474feea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474fe4890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474fe3260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474fe4d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474fe3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9474fdb320" loc="49:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9474fdb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474fd7870"/>
        <function-ref name="fired" scoped="" ref="0x7f9474fdae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9474fd9c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9474fd9780"/>
        <function-ref name="getdt" scoped="" ref="0x7f9474fd61e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474fd7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474fd9300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9474fda020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474fd7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9474fda4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474fda9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9474fc2590" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9474fc2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474fc2910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474fc2aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474fc2c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474fc2dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474fa2020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474fa21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9474fa24a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9474fa24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474fa2820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474fa29b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474fa2b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474fa2cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474fa2e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474fa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f9474fc39b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f9474fc39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474fc3d50"/>
        <function-ref name="get" scoped="" ref="0x7f9474fc2020"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474fc21b0"/>
        <function-ref name="set" scoped="" ref="0x7f9474fc2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9474f9f2b0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9474f9f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474f9f630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474f9f7c0"/>
        <function-ref name="start" scoped="" ref="0x7f9474f9f950"/>
        <function-ref name="stop" scoped="" ref="0x7f9474f9fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f9474f9bb60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f9bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f9474f9a020"/>
        <function-ref name="request" scoped="" ref="0x7f9474f9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9474f95440" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9474f95440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474f957c0"/>
        <function-ref name="ready" scoped="" ref="0x7f9474f95950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474f95ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9474f95d70" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9474f95d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474f94180"/>
        <function-ref name="header" scoped="" ref="0x7f9474f94310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f9474f9dc20" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f9474f9dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f9474f9c020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f9474f9c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9474f9c340"/>
        <function-ref name="done" scoped="" ref="0x7f9474f9c4d0"/>
        <function-ref name="standby" scoped="" ref="0x7f9474f9c660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9474f9c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9474f9a400" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f9a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f9a780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474f9a910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474f9aaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474f9ac30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474f9adc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474f99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f9474f97410" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f9474f97410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f9474f97890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f9474f97a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9474f97bb0"/>
        <function-ref name="done" scoped="" ref="0x7f9474f97d40"/>
        <function-ref name="standby" scoped="" ref="0x7f9474f95020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9474f951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f9474f992b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f9474f992b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f9474f99630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9474f9b400" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f9b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474f9b780"/>
        <function-ref name="header" scoped="" ref="0x7f9474f9b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f9474f98d70" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f9474f98d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474f97180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f9474f99920" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f9474f99920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474f99ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474f99e30"/>
        <function-ref name="start" scoped="" ref="0x7f9474f98020"/>
        <function-ref name="stop" scoped="" ref="0x7f9474f981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9474f94d40" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9474f94d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f930e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474f93270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474f93400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474f93590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474f93720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474f938b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f9474f9d650" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f9474f9d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474f9d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9474f93b40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9474f93b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f9474f92020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f9474f98440" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f9474f98440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474f987c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474f98950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474f98ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f9474f9ca40" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f9474f9ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474f9cdc0"/>
        <function-ref name="ready" scoped="" ref="0x7f9474f9b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474f9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f9474f945a0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f9474f945a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f9474f94920"/>
        <function-ref name="request" scoped="" ref="0x7f9474f94ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f9474f9fd30" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f9474f9fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474f9d0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474f9d270"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474f9d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f9474f8a5c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f8a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f9474f8a940"/>
        <function-ref name="request" scoped="" ref="0x7f9474f8aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f9474f853b0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f9474f853b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f84ac0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f84570"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f84020"/>
        <function-ref name="set" scoped="" ref="0x7f9474f82090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f9474f70ca0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f9474f70ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f6f0a0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f6f230"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474f6f3c0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f6f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f9474f742e0" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9474f742e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9474f73840"/>
        <function-ref name="clear" scoped="" ref="0x7f9474f71020"/>
        <function-ref name="isValid" scoped="" ref="0x7f9474f73110"/>
        <function-ref name="set" scoped="" ref="0x7f9474f71750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f9474f8e610" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f9474f8e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f9474f8e990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f9474f8eb20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9474f8ecb0"/>
        <function-ref name="done" scoped="" ref="0x7f9474f8ee40"/>
        <function-ref name="standby" scoped="" ref="0x7f9474f8b020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9474f8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f9474f6e470" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f9474f6e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474f6e7f0"/>
        <function-ref name="wait" scoped="" ref="0x7f9474f6e980"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474f6eb10"/>
        <function-ref name="isFree" scoped="" ref="0x7f9474f6eca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f9474f6ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f9474f89e80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f9474f89e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f875e0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f87090"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f88ad0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f87b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9474f8ad90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f8ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f89180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474f89310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474f894a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474f89630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474f897c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474f89950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9474f751f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9474f751f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474f75670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474f75800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474f75990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f9474f75b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f9474f75cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9474f8bdd0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f8bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474f8a180"/>
        <function-ref name="header" scoped="" ref="0x7f9474f8a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9474f7add0" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9474f7add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f94758c7d90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474f766e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9474f786b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9474f76090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474f78b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9474f76ba0"/>
        <function-ref name="start" scoped="" ref="0x7f9474f79ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474f781f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f9474f82940" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9474f82940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f7f090"/>
        <function-ref name="get" scoped="" ref="0x7f9474f81af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f815a0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f7f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f9474f7ba40" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474f7ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474f7a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f9474f8b460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f9474f8b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474f8b7e0"/>
        <function-ref name="ready" scoped="" ref="0x7f9474f8b970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474f8bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f9474f7fe70" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f9474f7fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f7d5e0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f7d090"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f7ead0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f7db30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f9474f6f8d0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f9474f6f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f6fc50"/>
        <function-ref name="get" scoped="" ref="0x7f9474f6fde0"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474f6e020"/>
        <function-ref name="set" scoped="" ref="0x7f9474f6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f9474f70110" loc="63:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f9474f70110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f70490"/>
        <function-ref name="get" scoped="" ref="0x7f9474f70620"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474f707b0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f70940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f9474f7b1e0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9474f7b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f9474f7b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f9474f632d0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f9474f632d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f9474f63650"/>
        <function-ref name="request" scoped="" ref="0x7f9474f637e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9474f43d20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9474f43d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9474f49b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f9474f5e0d0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f9474f5e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f5d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f5d2a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f5ed00"/>
        <function-ref name="set" scoped="" ref="0x7f9474f5dd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f9474f41ca0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f9474f41ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f400a0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f40230"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474f403c0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f40550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f9474f66b60" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9474f66b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9475daad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9475daad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474f65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f9474f3f780" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9474f3f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9474f3c020"/>
        <function-ref name="clear" scoped="" ref="0x7f9474f3c750"/>
        <function-ref name="isValid" scoped="" ref="0x7f9474f3d7c0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f3ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f9474f50980" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f9474f50980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474f50d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474f4b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474f4b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474f4b340"/>
        <function-ref name="get" scoped="" ref="0x7f9474f4b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474f4b660"/>
        <function-ref name="set" scoped="" ref="0x7f9474f4b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474f4b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f9474f3a2e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f9474f3a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474f3a660"/>
        <function-ref name="wait" scoped="" ref="0x7f9474f3a7f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474f3a980"/>
        <function-ref name="isFree" scoped="" ref="0x7f9474f3ab10"/>
        <function-ref name="getNow" scoped="" ref="0x7f9474f3aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f9474f652e0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f9474f652e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f9474f65660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f9474f657f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9474f65980"/>
        <function-ref name="done" scoped="" ref="0x7f9474f65b10"/>
        <function-ref name="standby" scoped="" ref="0x7f9474f65ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9474f65e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f9474f451a0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9474f451a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474f45dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f9474f62b90" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f9474f62b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f5f2e0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f61d40"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f617f0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f5f830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f9474f63aa0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f9474f63aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f63e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474f62020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474f621b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474f62340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474f624d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474f62660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f9474f51670" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f9474f51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474f519f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474f51b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474f51d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474f50020"/>
        <function-ref name="get" scoped="" ref="0x7f9474f501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474f50340"/>
        <function-ref name="set" scoped="" ref="0x7f9474f504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474f50660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f9474f42340" loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f9474f42340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474f426c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f9474f42850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f9474f429e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f9474f42b70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f9474f42d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f9474f64a90" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f9474f64a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474f64e10"/>
        <function-ref name="header" scoped="" ref="0x7f9474f63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f9474eaa8b0" loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f9474eaa8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474eaac30"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474eaadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f9474f5b630" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9474f5b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f5ae70"/>
        <function-ref name="get" scoped="" ref="0x7f9474f5a920"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f5a3d0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f583f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9474f66020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9474f66020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9475daad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9475daad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474f663a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f9474f53b50" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f9474f53b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474f52020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474f521b0"/>
        <function-ref name="request" scoped="" ref="0x7f9474f52340"/>
        <function-ref name="granted" scoped="" ref="0x7f9474f524d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474f52660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f9474f54760" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f9474f54760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474f54be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474f54d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474f53020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474f531b0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f53340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474f534d0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f53660"/>
        <function-ref name="clr" scoped="" ref="0x7f9474f537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f9474f58c80" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f9474f58c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f553c0"/>
        <function-ref name="get" scoped="" ref="0x7f9474f57e30"/>
        <function-ref name="isSet" scoped="" ref="0x7f9474f578e0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f55910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f9474f64120" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f9474f64120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474f644a0"/>
        <function-ref name="ready" scoped="" ref="0x7f9474f64630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474f647c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f9474f46550" loc="72:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f9474f46550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f9474f468d0"/>
        <function-ref name="disable" scoped="" ref="0x7f9474f46a60"/>
        <function-ref name="captured" scoped="" ref="0x7f9474f46bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f9474f46d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f9474f4caa0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474f4caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9474f4ce20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9474f51020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9474f511b0"/>
        <function-ref name="write" scoped="" ref="0x7f9474f51340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f9474f408d0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f9474f408d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f40c50"/>
        <function-ref name="get" scoped="" ref="0x7f9474f40de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474f3f020"/>
        <function-ref name="set" scoped="" ref="0x7f9474f3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f9474f41110" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f9474f41110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474f41490"/>
        <function-ref name="get" scoped="" ref="0x7f9474f41620"/>
        <function-ref name="setValue" scoped="" ref="0x7f9474f417b0"/>
        <function-ref name="set" scoped="" ref="0x7f9474f41940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f9474f54020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9474f54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f9474f543a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f9474f3b6b0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f9474f3b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f9474f3ba30"/>
        <function-ref name="suspend" scoped="" ref="0x7f9474f3bbc0"/>
        <function-ref name="resume" scoped="" ref="0x7f9474f3bd50"/>
        <function-ref name="run" scoped="" ref="0x7f9474f3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f9474e65b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f9474e65b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474e64020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474e641b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474e64340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474e644d0"/>
        <function-ref name="get" scoped="" ref="0x7f9474e64660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474e647f0"/>
        <function-ref name="set" scoped="" ref="0x7f9474e64980"/>
        <function-ref name="clr" scoped="" ref="0x7f9474e64b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f9474e66880" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f9474e66880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474e66c00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474e66d90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474e65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474e651b0"/>
        <function-ref name="get" scoped="" ref="0x7f9474e65340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474e654d0"/>
        <function-ref name="set" scoped="" ref="0x7f9474e65660"/>
        <function-ref name="clr" scoped="" ref="0x7f9474e657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9474e63c80" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9474e63c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474e5f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9474e604e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9474e60e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474e609a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9474e5f9a0"/>
        <function-ref name="start" scoped="" ref="0x7f9474e61ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474e60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f9474e67060" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f9474e67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474e673e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474e67570"/>
        <function-ref name="request" scoped="" ref="0x7f9474e67700"/>
        <function-ref name="granted" scoped="" ref="0x7f9474e67890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474e67a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f9474e6be10" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f9474e6be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474e681c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474e68350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474e684e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474e68670"/>
        <function-ref name="get" scoped="" ref="0x7f9474e68800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474e68990"/>
        <function-ref name="set" scoped="" ref="0x7f9474e68b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9474e68cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f9474e64e30" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f9474e64e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f9474e631e0"/>
        <function-ref name="disable" scoped="" ref="0x7f9474e63370"/>
        <function-ref name="captured" scoped="" ref="0x7f9474e63500"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f9474e63690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9474e67ce0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e67ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9474e660a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9474e66230"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9474e663c0"/>
        <function-ref name="write" scoped="" ref="0x7f9474e66550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f9474e5d060" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f9474e5d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f94758c7960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474e5dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f9474e4d3d0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f9474e4d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474e4d750"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474e4d8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474e4da70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474e4dc00"/>
        <function-ref name="get" scoped="" ref="0x7f9474e4dd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474e4c020"/>
        <function-ref name="set" scoped="" ref="0x7f9474e4c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474e4c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f9474e507f0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f9474e507f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f9474e4ee60"/>
        <function-ref name="test" scoped="" ref="0x7f9474e4e4e0"/>
        <function-ref name="get" scoped="" ref="0x7f9474e574c0"/>
        <function-ref name="captured" scoped="" ref="0x7f9474e56020"/>
        <function-ref name="reset" scoped="" ref="0x7f9474e56530"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474e4e9a0"/>
        <function-ref name="set" scoped="" ref="0x7f9474e57980"/>
        <function-ref name="start" scoped="" ref="0x7f9474e569f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474e4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f9474e4c680" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f9474e4c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474e4ca00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474e4cb90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474e4cd20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474e4b020"/>
        <function-ref name="get" scoped="" ref="0x7f9474e4b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474e4b340"/>
        <function-ref name="set" scoped="" ref="0x7f9474e4b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474e4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9474e59680" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9474e59680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474e59a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f9474e5ca10" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f9474e5ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f9474e5cd90"/>
        <function-ref name="disable" scoped="" ref="0x7f9474e59020"/>
        <function-ref name="captured" scoped="" ref="0x7f9474e591b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f9474e59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9474e31ae0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f9474e31ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474e31e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474e3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9474e39840" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f9474e39840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9474e39bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474e3c1f0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474e3c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474e3c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9474e3b020" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9474e3b3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9474e3b530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9474e3b6c0"/>
        <function-ref name="write" scoped="" ref="0x7f9474e3b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474e3a850" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474e3a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474e3abd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474e3ad60"/>
        <function-ref name="request" scoped="" ref="0x7f9474e32020"/>
        <function-ref name="granted" scoped="" ref="0x7f9474e321b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474e32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f9474deb190" loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f9474deb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474deb510"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474deb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9474e2c020" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f9474e2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474e2c3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474e2c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f9474e0e430" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f9474e0e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474e0e7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474e0e940"/>
        <function-ref name="request" scoped="" ref="0x7f9474e0ead0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474e0ec60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474e0edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9474e2ee00" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f9474e2ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9474e2d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474e2e7e0" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474e2e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474e2eb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f9474e2a020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f9474e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f9474e2a3a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9474e0f980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9474e2a6c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9474e0fb10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9474e2a9e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9474e2ab70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9474e2ad00"/>
        <function-ref name="read" scoped="" ref="0x7f9474e29020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f9474e291b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9474e29340"/>
        <function-ref name="setClock" scoped="" ref="0x7f9474e294d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9474e29660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f9474e297f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9474e29a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9474e29c10"/>
        <function-ref name="write" scoped="" ref="0x7f9474e29da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9474e0f020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f9474e0f1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9474e0f340"/>
        <function-ref name="getClock" scoped="" ref="0x7f9474e0f4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9474e0f660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9474e2a530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9474e2a850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f9474e0f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9474e2d480" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9474e2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9474e2d800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9474e2d990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9474e2db20"/>
        <function-ref name="write" scoped="" ref="0x7f9474e2dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474e2cd20" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474e2cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474e2b0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474e2b270"/>
        <function-ref name="request" scoped="" ref="0x7f9474e2b400"/>
        <function-ref name="granted" scoped="" ref="0x7f9474e2b590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474e2b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9474e0c130" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474e0c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474e0c4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f9474e0c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f9474e0c920" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9474e0c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9474e0cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f9474dbe3e0" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f9474dbe3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f9474dbe760"/>
        <function-ref name="sleep" scoped="" ref="0x7f9474dbcca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9474dbea80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9474dbce30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9474dbeda0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9474dbd020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9474dbd1b0"/>
        <function-ref name="read" scoped="" ref="0x7f9474dbd340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f9474dbd4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9474dbd660"/>
        <function-ref name="setClock" scoped="" ref="0x7f9474dbd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9474dbd980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f9474dbdb10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9474dbdda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9474dbc020"/>
        <function-ref name="write" scoped="" ref="0x7f9474dbc1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9474dbc340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f9474dbc4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9474dbc660"/>
        <function-ref name="getClock" scoped="" ref="0x7f9474dbc7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9474dbc980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9474dbe8f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9474dbec10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f9474dbcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f9474db0b10" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f9474db0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474daf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474daf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474daf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474daf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9474daf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474daf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9474daf980"/>
        <function-ref name="clr" scoped="" ref="0x7f9474dafb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f9474db3650" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f9474db3650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474db39d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474db3b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474db3cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474db3e80"/>
        <function-ref name="get" scoped="" ref="0x7f9474db1030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474db11c0"/>
        <function-ref name="set" scoped="" ref="0x7f9474db1350"/>
        <function-ref name="clr" scoped="" ref="0x7f9474db14e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f9474db4390" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f9474db4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474db4710"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474db48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474db4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474db4bc0"/>
        <function-ref name="get" scoped="" ref="0x7f9474db4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474db3020"/>
        <function-ref name="set" scoped="" ref="0x7f9474db31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9474db3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9474db2ac0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9474db2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9474db2e40"/>
        <function-ref name="stop" scoped="" ref="0x7f9474db4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f9474dafe50" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f9474dafe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9474dae210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f9474db8350" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f9474db8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f9474db86d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9474db6ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9474db89f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9474db6e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9474db8d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9474db7020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9474db71b0"/>
        <function-ref name="read" scoped="" ref="0x7f9474db7340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f9474db74d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9474db7660"/>
        <function-ref name="setClock" scoped="" ref="0x7f9474db77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9474db7980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f9474db7b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9474db7da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9474db6020"/>
        <function-ref name="write" scoped="" ref="0x7f9474db61b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9474db6340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f9474db64d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9474db6660"/>
        <function-ref name="getClock" scoped="" ref="0x7f9474db67f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9474db6980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9474db8860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9474db8b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f9474db6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f9474db1800" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f9474db1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9474db1b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9474db1d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9474db0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9474db01b0"/>
        <function-ref name="get" scoped="" ref="0x7f9474db0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9474db04d0"/>
        <function-ref name="set" scoped="" ref="0x7f9474db0660"/>
        <function-ref name="clr" scoped="" ref="0x7f9474db07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9474d63020" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9474d63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9474d633c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9474d63550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9474d620d0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9474d620d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9474d62470"/>
        <function-ref name="configure" scoped="" ref="0x7f9474d62600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474d64210" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474d64210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474d645b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474d64740"/>
        <function-ref name="request" scoped="" ref="0x7f9474d648d0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474d64a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474d64bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9474d637a0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474d637a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474d63b20"/>
        <function-ref name="userId" scoped="" ref="0x7f9474d63cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9473c00420" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9473c00420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9473c007a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9473c00a30" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9473c00a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9473c00db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9473bfe020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9473bfe1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9473bfe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9473bfc850" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9473bfc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9473bfcbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9473bfcd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9473bfb910" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9473bfb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9473bfbcb0"/>
        <function-ref name="configure" scoped="" ref="0x7f9473bfbe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9473bfa120" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9473bfa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9473bfa4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9473bfa630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9473bfa7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9473bfa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9473bfd9d0" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9473bfd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9473bfdd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473bfc020"/>
        <function-ref name="request" scoped="" ref="0x7f9473bfc1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9473bfc340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473bfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9473bfb020" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9473bfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9473bfb3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9473bfb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9473bfac20" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9473bfac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9473bf9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473bf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9474d49d80" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9474d49d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f9474d51180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9474d51310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9474d514a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9474d51630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9474d517c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9474d51950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9474d51ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9474d51c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f9474d51e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9474d50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9474d50530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f9474d50530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f9474d459a0"/>
        <function-ref name="test" scoped="" ref="0x7f9474d45020"/>
        <function-ref name="get" scoped="" ref="0x7f9474d481b0"/>
        <function-ref name="captured" scoped="" ref="0x7f9474d48b80"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d460d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d454e0"/>
        <function-ref name="set" scoped="" ref="0x7f9474d48670"/>
        <function-ref name="start" scoped="" ref="0x7f9474d46590"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d46a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9474d44650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9474d44650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9474d40110"/>
        <function-ref name="fired" scoped="" ref="0x7f9474d43da0"/>
        <function-ref name="get" scoped="" ref="0x7f9474d433d0"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d412a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d405d0"/>
        <function-ref name="set" scoped="" ref="0x7f9474d43890"/>
        <function-ref name="start" scoped="" ref="0x7f9474d41760"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d41c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9474d5ab20" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9474d5ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9474d54e60"/>
        <function-ref name="test" scoped="" ref="0x7f9474d544e0"/>
        <function-ref name="get" scoped="" ref="0x7f9474d57790"/>
        <function-ref name="setScale" scoped="" ref="0x7f9474d53350"/>
        <function-ref name="getScale" scoped="" ref="0x7f9474d53860"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d55670"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474d551b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d549a0"/>
        <function-ref name="set" scoped="" ref="0x7f9474d57c50"/>
        <function-ref name="start" scoped="" ref="0x7f9474d55b30"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9474d36020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9474d36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f9474d363a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9474d36530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9474d366c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9474d36850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9474d369e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9474d36b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9474d36d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9474d35020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f9474d351b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9474d35340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f9474d305a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f9474d305a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9474d2c020"/>
        <function-ref name="fired" scoped="" ref="0x7f9474d2fc10"/>
        <function-ref name="get" scoped="" ref="0x7f9474d2f240"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d2e110"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d2c4e0"/>
        <function-ref name="set" scoped="" ref="0x7f9474d2f700"/>
        <function-ref name="start" scoped="" ref="0x7f9474d2e5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d2ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9474d35850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f9474d35850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f9474d32e60"/>
        <function-ref name="test" scoped="" ref="0x7f9474d324e0"/>
        <function-ref name="get" scoped="" ref="0x7f9474d344c0"/>
        <function-ref name="captured" scoped="" ref="0x7f9474d33020"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d33530"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d329a0"/>
        <function-ref name="set" scoped="" ref="0x7f9474d34980"/>
        <function-ref name="start" scoped="" ref="0x7f9474d339f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f9474d2cba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f9474d2cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9474d29550"/>
        <function-ref name="fired" scoped="" ref="0x7f9474d2a1f0"/>
        <function-ref name="get" scoped="" ref="0x7f9474d2b7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d2a6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d29a10"/>
        <function-ref name="set" scoped="" ref="0x7f9474d2bcb0"/>
        <function-ref name="start" scoped="" ref="0x7f9474d2ab70"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d29090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f9474d27120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f9474d27120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9474d25a90"/>
        <function-ref name="fired" scoped="" ref="0x7f9474d26770"/>
        <function-ref name="get" scoped="" ref="0x7f9474d27d50"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d26c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d24020"/>
        <function-ref name="set" scoped="" ref="0x7f9474d26260"/>
        <function-ref name="start" scoped="" ref="0x7f9474d25110"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d255d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9474d3eb90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9474d3eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9474d38020"/>
        <function-ref name="test" scoped="" ref="0x7f9474d39550"/>
        <function-ref name="get" scoped="" ref="0x7f9474d3b7f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9474d384e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9474d389f0"/>
        <function-ref name="reset" scoped="" ref="0x7f9474d3a6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474d3a1f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474d39a10"/>
        <function-ref name="set" scoped="" ref="0x7f9474d3bcb0"/>
        <function-ref name="start" scoped="" ref="0x7f9474d3ab70"/>
        <function-ref name="stop" scoped="" ref="0x7f9474d39090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9474c566e0" loc="30:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9474c566e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f9475cd4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474c52020"/>
        <function-ref name="fired" scoped="" ref="0x7f9474c54020"/>
        <function-ref name="startAt" scoped="" ref="0x7f9474c549a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474c544e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9474c524e0"/>
        <function-ref name="start" scoped="" ref="0x7f9474c555b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474c55ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474ca0b50" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474ca0b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9475daa9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9475daa9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474c93020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9474c93410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9474c93410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9474c8f810"/>
        <function-ref name="test" scoped="" ref="0x7f9474c91e60"/>
        <function-ref name="get" scoped="" ref="0x7f9474c92090"/>
        <function-ref name="setScale" scoped="" ref="0x7f9474c8fcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9474c8e260"/>
        <function-ref name="reset" scoped="" ref="0x7f9474c91020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c92a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474c8f350"/>
        <function-ref name="set" scoped="" ref="0x7f9474c92550"/>
        <function-ref name="start" scoped="" ref="0x7f9474c914e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474c919a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9473bce610" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9473bce610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f9475daa640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f9475daa640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f9475cd4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9473bcb020"/>
        <function-ref name="fired" scoped="" ref="0x7f9473bcc020"/>
        <function-ref name="startAt" scoped="" ref="0x7f9473bcc9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9473bcc4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9473bcb4e0"/>
        <function-ref name="start" scoped="" ref="0x7f9473bcd5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9473bcdac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f9473bb5db0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f9473bb5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9473bb19a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9473bb3530"/>
        <function-ref name="get" scoped="" ref="0x7f9473bb4a10"/>
        <function-ref name="reset" scoped="" ref="0x7f9473bb39f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9473bb1e60"/>
        <function-ref name="set" scoped="" ref="0x7f9473bb3020"/>
        <function-ref name="start" scoped="" ref="0x7f9473bb1020"/>
        <function-ref name="stop" scoped="" ref="0x7f9473bb14e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f9473bcba30" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f9473bcba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9473bb6e60"/>
        <function-ref name="test" scoped="" ref="0x7f9473bb64e0"/>
        <function-ref name="get" scoped="" ref="0x7f9473bca6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9473bb5350"/>
        <function-ref name="getScale" scoped="" ref="0x7f9473bb5860"/>
        <function-ref name="reset" scoped="" ref="0x7f9473bc9590"/>
        <function-ref name="overflow" scoped="" ref="0x7f9473bc90d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9473bb69a0"/>
        <function-ref name="set" scoped="" ref="0x7f9473bcab70"/>
        <function-ref name="start" scoped="" ref="0x7f9473bc9a50"/>
        <function-ref name="stop" scoped="" ref="0x7f9473bb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9474c4e3a0" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9474c4e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9474c4a200" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9474c4a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f9475cd4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c49090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474c49a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474c49550"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9474c33020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9474c33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f9475cd4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c33e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474c32800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474c32340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c32cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9474c31280" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9474c31280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9474c2d810"/>
        <function-ref name="test" scoped="" ref="0x7f9474c2ee60"/>
        <function-ref name="get" scoped="" ref="0x7f9474c30020"/>
        <function-ref name="setScale" scoped="" ref="0x7f9474c2dcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9474c2c260"/>
        <function-ref name="reset" scoped="" ref="0x7f9474c2e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c309f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474c2d350"/>
        <function-ref name="set" scoped="" ref="0x7f9474c304e0"/>
        <function-ref name="start" scoped="" ref="0x7f9474c2e4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474c2e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f9474c0a0f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f9474c0a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c09020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474c099a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474c094e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c09e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9474c0ecf0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9474c0ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c0db60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474c0c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474c0c090"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c0ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9474c07b60" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9474c07b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c067d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9474c06e40" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9474c06e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474c04ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474c03670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474c031b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474c03b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f9474bfc9a0" loc="36:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9474bfc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9474bf97e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9474b9f710" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9474b9f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474b9fa90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474b9fc20"/>
        <function-ref name="start" scoped="" ref="0x7f9474b9fdb0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474b9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9474b9c7f0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f9474b9c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474b9cb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9474b9cd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474b9a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474b9a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474b9a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9474b992b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f9474b992b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474b99630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474b997c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9474b99950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474b99ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474b99c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9474b9ab20" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9474b9ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474b99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9474b96300" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9474b96300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9474b96680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9474b96810"/>
        <function-ref name="led1On" scoped="" ref="0x7f9474b969a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9474b96b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9474b96cc0"/>
        <function-ref name="get" scoped="" ref="0x7f9474b96e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9474b95020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9474b95660"/>
        <function-ref name="set" scoped="" ref="0x7f9474b951b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9474b95340"/>
        <function-ref name="led2On" scoped="" ref="0x7f9474b954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9474b97800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9474b97800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9474b97b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f9474b97d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9474b96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9474b98020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9474b98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9474b983a0"/>
        <function-ref name="source" scoped="" ref="0x7f9474b98530"/>
        <function-ref name="address" scoped="" ref="0x7f9474b986c0"/>
        <function-ref name="destination" scoped="" ref="0x7f9474b98850"/>
        <function-ref name="setSource" scoped="" ref="0x7f9474b989e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9474b98b70"/>
        <function-ref name="type" scoped="" ref="0x7f9474b98d00"/>
        <function-ref name="setType" scoped="" ref="0x7f9474b97020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9474b971b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9474b97340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9474b974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9474b33d90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f9474b33d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474b31180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9474b31310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474b314a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474b31630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474b317c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9474b31a50" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f9474b31a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474b31dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9474b93b40" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f9474b93b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474b36020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9474b361b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474b36340"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474b364d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474b36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9474b34720" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f9474b34720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474b34aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9474b34c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9474b34dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474b33020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9474b331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9474b369e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9474b369e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474b36d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9474b33400" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9474b33400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9474b33780"/>
        <function-ref name="noAck" scoped="" ref="0x7f9474b33910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9474b33aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9474b35020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f9474b35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9474b353a0"/>
        <function-ref name="source" scoped="" ref="0x7f9474b35530"/>
        <function-ref name="address" scoped="" ref="0x7f9474b356c0"/>
        <function-ref name="destination" scoped="" ref="0x7f9474b35850"/>
        <function-ref name="setSource" scoped="" ref="0x7f9474b359e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9474b35b70"/>
        <function-ref name="type" scoped="" ref="0x7f9474b35d00"/>
        <function-ref name="setType" scoped="" ref="0x7f9474b34020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9474b341b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9474b34340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9474b344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9474b2c4e0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9474b2c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474b2c860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474b2c9f0"/>
        <function-ref name="start" scoped="" ref="0x7f9474b2cb80"/>
        <function-ref name="stop" scoped="" ref="0x7f9474b2cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9474b2a020" loc="52:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f9474b2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f9475ab3020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474b2a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9474b2a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9474b2a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9474b2a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474b2a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474b2fe60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474b2fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474b2c210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9474b2b4c0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f9474b2b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f9475ab3020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9474b2b840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9474b29940" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9474b29940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9474b29cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9474b29e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f9474b28020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9474b281b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9474b28340"/>
        <function-ref name="get" scoped="" ref="0x7f9474b284d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9474b28660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9474b28ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9474b287f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9474b28980"/>
        <function-ref name="led2On" scoped="" ref="0x7f9474b28b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f9474b29020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f9474b29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f9475ab3020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f9474b293a0"/>
        <function-ref name="offset" scoped="" ref="0x7f9474b29530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f9474b296c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9474b04b70" loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9474b04b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474b03020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474b031b0"/>
        <function-ref name="start" scoped="" ref="0x7f9474b03340"/>
        <function-ref name="stop" scoped="" ref="0x7f9474b034d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f9474a9de40" loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f9474a9de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474a9c1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474a9c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f9474aee530" loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f9474aee530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9474aee8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474aeea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f9474ad4d50" loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f9474ad4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474ad3100"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474ad3290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474b04520" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474b04520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474b048a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f9474aec130" loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f9474aec130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f9474aec4b0"/>
        <function-ref name="flush" scoped="" ref="0x7f9474aec640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f9474a9f400" loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f9474a9f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474a9f780"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474a9f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f9474af3410" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f9474af3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f9474af3790"/>
        <function-ref name="resetSend" scoped="" ref="0x7f9474af3920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f9474af3ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f9474af3c40"/>
        <function-ref name="putData" scoped="" ref="0x7f9474af3dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7f9474afc020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f9474afc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9474afc430" loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9474afc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9474afc7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9474afc940"/>
        <function-ref name="led1On" scoped="" ref="0x7f9474afcad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9474afcc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9474afcdf0"/>
        <function-ref name="get" scoped="" ref="0x7f9474af9020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9474af91b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9474af97f0"/>
        <function-ref name="set" scoped="" ref="0x7f9474af9340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9474af94d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9474af9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f9474a980c0" loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f9474a980c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474a98440"/>
        <function-ref name="runTask" scoped="" ref="0x7f9474a985d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f9474afda40" loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f9474afda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f9474afddc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f9474b02020"/>
        <function-ref name="startSend" scoped="" ref="0x7f9474b021b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f9474b02340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f9474b01080" loc="68:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f9474b01080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f9474b01400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f9474b01590"/>
        <function-ref name="endPacket" scoped="" ref="0x7f9474b01720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f94749cd020" loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f94749cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94749cd3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f94749cd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f94749d3de0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f94749d3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f9475ab3020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94749d11c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f94749d1350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f94749d14e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f94749d1670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94749d1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f94749cd800" loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f94749cd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94749cdb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f94749cdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f94749d36c0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f94749d36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f9475ab3020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f94749d3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f94749d1c20" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f94749d1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f9475ab3020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f94749d0020"/>
        <function-ref name="offset" scoped="" ref="0x7f94749d01b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f94749d0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f94749cf920" loc="57:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94749cf920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94749cfca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94749cfe30"/>
        <function-ref name="led1On" scoped="" ref="0x7f94749ce020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94749ce1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94749ce340"/>
        <function-ref name="get" scoped="" ref="0x7f94749ce4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94749ce660"/>
        <function-ref name="led2On" scoped="" ref="0x7f94749ceca0"/>
        <function-ref name="set" scoped="" ref="0x7f94749ce980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94749ce7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f94749ceb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f94749d0e80" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f94749d0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f94749cf220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f94749cf3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f94749cf540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f94749cf6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f94749d0590" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f94749d0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f94749d0910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f94749d0aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f94749d0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f94749bdd20" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f94749bdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94749c60e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f94749c6270"/>
        <function-ref name="receive" scoped="" ref="0x7f94749c6400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f94749c6590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f94749c6720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f94749c68b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f94749c6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f94749cbe10" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f94749cbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f94749c81c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f94749c8350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f94749c84e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f94749c8670"/>
        <function-ref name="putData" scoped="" ref="0x7f94749c8800"/>
        <function-ref name="putDone" scoped="" ref="0x7f94749c8990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f94749c8b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f94749c6cc0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94749c6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94749c50a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94749c5230"/>
        <function-ref name="led1On" scoped="" ref="0x7f94749c53c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94749c5550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94749c56e0"/>
        <function-ref name="get" scoped="" ref="0x7f94749c5870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94749c5a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94749bb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f94749c5b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f94749c5d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f94749bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f947499bd50" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f947499bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947499e100"/>
        <function-ref name="receive" scoped="" ref="0x7f947499e290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f94749a0960" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f94749a0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f94749a0ce0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f94749a0e70"/>
        <function-ref name="receive" scoped="" ref="0x7f947499f030"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f947499f1c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f947499f350"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f947499f4e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947499f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f94749a0150" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f94749a0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94749a04d0"/>
        <function-ref name="stop" scoped="" ref="0x7f94749a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f9474999820" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f9474999820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474999ba0"/>
        <function-ref name="receive" scoped="" ref="0x7f9474999d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f9474998080" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f9474998080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9474998400"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f9474998590"/>
        <function-ref name="receive" scoped="" ref="0x7f9474998720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f94749988b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f9474998a40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f9474998bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9474998d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9474997360" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9474997360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94749951b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474995b30"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474995670"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9474999020" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9474999020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94749993a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474999530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f9474950dd0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f9474950dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947494f180"/>
        <function-ref name="receive" scoped="" ref="0x7f947494f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f947494e610" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f947494e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f947494e990"/>
        <function-ref name="stop" scoped="" ref="0x7f947494eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474950020" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474950020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94749503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f947494f5a0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f947494f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f947494f920"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f947494fab0"/>
        <function-ref name="receive" scoped="" ref="0x7f947494fc40"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f947494fdd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f947494e020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f947494e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f947494e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f947494bcc0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f947494bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f947494ab60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474949550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474949090"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474949a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f947494c620" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f947494c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f947494c9a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f947494cb30"/>
        <function-ref name="rxDone" scoped="" ref="0x7f947494ccc0"/>
        <function-ref name="txDone" scoped="" ref="0x7f947494ce50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f947494b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f947494b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f947494b340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f947494b4d0"/>
        <function-ref name="tx" scoped="" ref="0x7f947494b660"/>
        <function-ref name="rx" scoped="" ref="0x7f947494b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9474950630" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f9474950630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94749509b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474950b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f947494edf0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f947494edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f947494c1c0"/>
        <function-ref name="stop" scoped="" ref="0x7f947494c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f947492c5f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f947492c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f947492c970"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f947492cb00"/>
        <function-ref name="rxDone" scoped="" ref="0x7f947492cc90"/>
        <function-ref name="txDone" scoped="" ref="0x7f947492ce20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f947492b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f947492b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f947492b340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f947492b4d0"/>
        <function-ref name="tx" scoped="" ref="0x7f947492b660"/>
        <function-ref name="rx" scoped="" ref="0x7f947492b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f947492add0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f947492add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9474929180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9474929310"/>
        <function-ref name="rxDone" scoped="" ref="0x7f94749294a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f9474929630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f94749297c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9474929950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9474929ae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9474929c70"/>
        <function-ref name="tx" scoped="" ref="0x7f9474929e00"/>
        <function-ref name="rx" scoped="" ref="0x7f9474928020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f947492dd20" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f947492dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f947492c0e0"/>
        <function-ref name="stop" scoped="" ref="0x7f947492c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f947492bb80" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f947492bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f947492a020"/>
        <function-ref name="stop" scoped="" ref="0x7f947492a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f947492a540" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f947492a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f947492a8c0"/>
        <function-ref name="stop" scoped="" ref="0x7f947492aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f947492d480" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f947492d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f947492d800"/>
        <function-ref name="stop" scoped="" ref="0x7f947492d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f9474928d80" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f9474928d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9474925180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f9474923730" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f9474923730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9474923ab0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9474923c40"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9474923dd0"/>
        <function-ref name="txDone" scoped="" ref="0x7f9474922020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f94749221b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9474922340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f94749224d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f9474922660"/>
        <function-ref name="tx" scoped="" ref="0x7f94749227f0"/>
        <function-ref name="rx" scoped="" ref="0x7f9474922980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f9474922ce0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f9474922ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94749210a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f9474920650" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f9474920650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f94749209d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9474920b60"/>
        <function-ref name="rxDone" scoped="" ref="0x7f9474920cf0"/>
        <function-ref name="txDone" scoped="" ref="0x7f9474920e80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f947491f030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f947491f1c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f947491f350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f947491f4e0"/>
        <function-ref name="tx" scoped="" ref="0x7f947491f670"/>
        <function-ref name="rx" scoped="" ref="0x7f947491f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f9474925e30" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f9474925e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94749231e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474923370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f9474921470" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f9474921470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94749217f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474921980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f9474921d50" loc="121:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f9474921d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9474920100"/>
        <function-ref name="stop" scoped="" ref="0x7f9474920290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f947491fb30" loc="124:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f947491fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f947491e020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f947491e1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f947491e340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f947491e4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f947491e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f947491e980" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f947491e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f947491ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f9474925550" loc="115:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f9474925550"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94749258d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474925a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f94748bfbb0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f94748bfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94748bca00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f94748bb4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f94748bb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f94748bb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f94748b9c50" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f94748b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f9475cd47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94748b6a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f94748b54e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f94748b5020"/>
        <function-ref name="overflow" scoped="" ref="0x7f94748b59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f94748addc0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f94748addc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f94748ac180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f94748ac310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f94748ac4a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f94748ac630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f94748ac7c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f94748ac950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f94748acae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f94748acc70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f94748ace00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f94748ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f94748ab530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f94748ab530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f94748a79a0"/>
        <function-ref name="test" scoped="" ref="0x7f94748a7020"/>
        <function-ref name="get" scoped="" ref="0x7f94748aa1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f94748aab80"/>
        <function-ref name="reset" scoped="" ref="0x7f94748a80d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f94748a74e0"/>
        <function-ref name="set" scoped="" ref="0x7f94748aa670"/>
        <function-ref name="start" scoped="" ref="0x7f94748a8590"/>
        <function-ref name="stop" scoped="" ref="0x7f94748a8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f94748a6650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f94748a6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f94748a2110"/>
        <function-ref name="fired" scoped="" ref="0x7f94748a4da0"/>
        <function-ref name="get" scoped="" ref="0x7f94748a43d0"/>
        <function-ref name="reset" scoped="" ref="0x7f94748a32a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f94748a25d0"/>
        <function-ref name="set" scoped="" ref="0x7f94748a4890"/>
        <function-ref name="start" scoped="" ref="0x7f94748a3760"/>
        <function-ref name="stop" scoped="" ref="0x7f94748a3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94748b4b30" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94748b4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f94748aee60"/>
        <function-ref name="test" scoped="" ref="0x7f94748ae4e0"/>
        <function-ref name="get" scoped="" ref="0x7f94748b1790"/>
        <function-ref name="setScale" scoped="" ref="0x7f94748ad350"/>
        <function-ref name="getScale" scoped="" ref="0x7f94748ad860"/>
        <function-ref name="reset" scoped="" ref="0x7f94748af670"/>
        <function-ref name="overflow" scoped="" ref="0x7f94748af1b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f94748ae9a0"/>
        <function-ref name="set" scoped="" ref="0x7f94748b1c50"/>
        <function-ref name="start" scoped="" ref="0x7f94748afb30"/>
        <function-ref name="stop" scoped="" ref="0x7f94748ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9474898020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9474898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f94748983a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9474898530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f94748986c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9474898850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f94748989e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9474898b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9474898d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9474897020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f94748971b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9474897340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f94748925a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f94748925a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f947488e020"/>
        <function-ref name="fired" scoped="" ref="0x7f9474891c10"/>
        <function-ref name="get" scoped="" ref="0x7f9474891240"/>
        <function-ref name="reset" scoped="" ref="0x7f9474890110"/>
        <function-ref name="isOn" scoped="" ref="0x7f947488e4e0"/>
        <function-ref name="set" scoped="" ref="0x7f9474891700"/>
        <function-ref name="start" scoped="" ref="0x7f94748905d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474890a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9474897850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f9474897850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f9474893e60"/>
        <function-ref name="test" scoped="" ref="0x7f94748934e0"/>
        <function-ref name="get" scoped="" ref="0x7f94748964c0"/>
        <function-ref name="captured" scoped="" ref="0x7f9474895020"/>
        <function-ref name="reset" scoped="" ref="0x7f9474895530"/>
        <function-ref name="isOn" scoped="" ref="0x7f94748939a0"/>
        <function-ref name="set" scoped="" ref="0x7f9474896980"/>
        <function-ref name="start" scoped="" ref="0x7f94748959f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474893020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f947488eba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f947488eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f947488a550"/>
        <function-ref name="fired" scoped="" ref="0x7f947488c1f0"/>
        <function-ref name="get" scoped="" ref="0x7f947488d7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f947488c6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f947488aa10"/>
        <function-ref name="set" scoped="" ref="0x7f947488dcb0"/>
        <function-ref name="start" scoped="" ref="0x7f947488cb70"/>
        <function-ref name="stop" scoped="" ref="0x7f947488a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f9474889120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f9474889120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9474887a90"/>
        <function-ref name="fired" scoped="" ref="0x7f9474888770"/>
        <function-ref name="get" scoped="" ref="0x7f9474889d50"/>
        <function-ref name="reset" scoped="" ref="0x7f9474888c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474885020"/>
        <function-ref name="set" scoped="" ref="0x7f9474888260"/>
        <function-ref name="start" scoped="" ref="0x7f9474887110"/>
        <function-ref name="stop" scoped="" ref="0x7f94748875d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94748a0b90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94748a0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9474899020"/>
        <function-ref name="test" scoped="" ref="0x7f947489b550"/>
        <function-ref name="get" scoped="" ref="0x7f947489d7f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f94748994e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f94748999f0"/>
        <function-ref name="reset" scoped="" ref="0x7f947489c6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f947489c1f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f947489ba10"/>
        <function-ref name="set" scoped="" ref="0x7f947489dcb0"/>
        <function-ref name="start" scoped="" ref="0x7f947489cb70"/>
        <function-ref name="stop" scoped="" ref="0x7f947489b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f947480bc60" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f947480bc60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9475daa9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9475daa9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f947480a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f947480a410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f947480a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9474807810"/>
        <function-ref name="test" scoped="" ref="0x7f9474808e60"/>
        <function-ref name="get" scoped="" ref="0x7f9474809090"/>
        <function-ref name="setScale" scoped="" ref="0x7f9474807cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9474805260"/>
        <function-ref name="reset" scoped="" ref="0x7f9474808020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9474809a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f9474807350"/>
        <function-ref name="set" scoped="" ref="0x7f9474809550"/>
        <function-ref name="start" scoped="" ref="0x7f94748084e0"/>
        <function-ref name="stop" scoped="" ref="0x7f94748089a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f94748033c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f94748033c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f9475cd47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9474801240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9474801bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9474801700"/>
        <function-ref name="overflow" scoped="" ref="0x7f94748000d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9474800660" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9474800660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f94747fca90"/>
        <function-ref name="test" scoped="" ref="0x7f94747fc110"/>
        <function-ref name="get" scoped="" ref="0x7f94747ff3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f94747fb020"/>
        <function-ref name="getScale" scoped="" ref="0x7f94747fb530"/>
        <function-ref name="reset" scoped="" ref="0x7f94747fd2a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f94747ffda0"/>
        <function-ref name="isOn" scoped="" ref="0x7f94747fc5d0"/>
        <function-ref name="set" scoped="" ref="0x7f94747ff890"/>
        <function-ref name="start" scoped="" ref="0x7f94747fd760"/>
        <function-ref name="stop" scoped="" ref="0x7f94747fdc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f94747f30f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f94747f30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f9475cd47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94747f2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f94747f29a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f94747f24e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f94747f2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f94747f7cd0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f94747f7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d18d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9475d17180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f94747f6b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f94747f5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f94747f5090"/>
        <function-ref name="overflow" scoped="" ref="0x7f94747f5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f94747e61e0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f94747e61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f94747e6560"/>
        <function-ref name="offset" scoped="" ref="0x7f94747e66f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f94747e6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94747d7bd0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.t1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94747d7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f94747ca110"/>
        <function-ref name="fired" scoped="" ref="0x7f94747cc6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f94747cb4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f94747cb020"/>
        <function-ref name="getdt" scoped="" ref="0x7f94747caa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f94747ca590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f94747ccb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f94747cd860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f94747cbab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f94747cdd30"/>
        <function-ref name="stop" scoped="" ref="0x7f94747cc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f9474312020" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f9474312020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f94743123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f9474315810" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7f9474315810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9474314480"/>
        <function-ref name="readDone" scoped="" ref="0x7f9474314900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f94743150a0" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f94743150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f9474315420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f94743179c0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f94743179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94743165f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9474316a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f9473acdc50" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7f9473acdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f9473acc020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f9473acc1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f9473acc340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f9473acc4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f9473acc660"/>
        <function-ref name="reset" scoped="" ref="0x7f9473acc7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f9473acc980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f9473accb10"/>
        <function-ref name="resetDone" scoped="" ref="0x7f9473accca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f9473acce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f9473ad3e30" loc="48:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f9473ad3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f9473ad21e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f9473ad25d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7f9473ad25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9473ad1200"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473ad1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f9473ad4020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f9473ad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f9473ad43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f9473ad1c80" loc="51:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7f9473ad1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9473acf0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473acf230"/>
        <function-ref name="request" scoped="" ref="0x7f9473acf3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9473acf550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473acf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f9473ace7a0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7f9473ace7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f9473aceb20"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f9473acecb0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f9473acee40"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f9473acd020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f9473acd1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f9473acd340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f9473acd4d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f9473acd660"/>
        <function-ref name="resetDone" scoped="" ref="0x7f9473acd7f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f9473acd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f9473acf9b0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7f9473acf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9473acfd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473ace020"/>
        <function-ref name="request" scoped="" ref="0x7f9473ace1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9473ace340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473ace4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f9473ad4790" loc="47:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f9473ad4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9473ad33b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473ad3830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f94747752c0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7f94747752c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f9474775640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f94747757d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f9474775960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f9474775af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f9474775c80"/>
        <function-ref name="reset" scoped="" ref="0x7f9474775e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f9474774020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f94747741b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f9474774340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f94747744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474776020" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474776020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94747763a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474776530"/>
        <function-ref name="request" scoped="" ref="0x7f94747766c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474776850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94747769e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f94746f2610" loc="58:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7f94746f2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746f2990"/>
        <function-ref name="disable" scoped="" ref="0x7f94746f2b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746f2cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746f2e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f94746ea2f0" loc="102:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7f94746ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94746ea670"/>
        <function-ref name="runTask" scoped="" ref="0x7f94746ea800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f94746ebac0" loc="103:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7f94746ebac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94746ebe40"/>
        <function-ref name="runTask" scoped="" ref="0x7f94746ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f94746f4480" loc="57:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7f94746f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746f4800"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746f4990"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746f4b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746f4cb0"/>
        <function-ref name="get" scoped="" ref="0x7f94746f4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746f2020"/>
        <function-ref name="set" scoped="" ref="0x7f94746f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f94746f7c90" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7f94746f7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f94746f60a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f94746f6230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f94746f63c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f94746f6550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f94746f66e0"/>
        <function-ref name="reset" scoped="" ref="0x7f94746f6870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f94746f6a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f94746f6b90"/>
        <function-ref name="resetDone" scoped="" ref="0x7f94746f6d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f94746f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f94746f52f0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7f94746f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746f5670"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746f5800"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746f5990"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746f5b20"/>
        <function-ref name="get" scoped="" ref="0x7f94746f5cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746f5e40"/>
        <function-ref name="set" scoped="" ref="0x7f94746f4020"/>
        <function-ref name="clr" scoped="" ref="0x7f94746f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f94746ec450" loc="62:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94746ec450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94746ec7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94746ec960"/>
        <function-ref name="led1On" scoped="" ref="0x7f94746ecaf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94746ecc80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94746ece10"/>
        <function-ref name="get" scoped="" ref="0x7f94746eb020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94746eb1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f94746eb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f94746eb4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94746eb340"/>
        <function-ref name="led0On" scoped="" ref="0x7f94746eb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f94746f1240" loc="60:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94746f1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f94746ee6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f94746f0c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f94746efa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f94746ef5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f94746ec020"/>
        <function-ref name="gett0" scoped="" ref="0x7f94746eeb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f94746ef170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f94746f1e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f94746ee0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f94746f0340"/>
        <function-ref name="stop" scoped="" ref="0x7f94746f0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f94746df730" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7f94746df730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746dfab0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746dfc40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746dfdd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f94746e0370" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f94746e0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746e06f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746e0880"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746e0a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746e0ba0"/>
        <function-ref name="get" scoped="" ref="0x7f94746e0d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746df020"/>
        <function-ref name="set" scoped="" ref="0x7f94746df1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f94746e1020" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7f94746e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746e13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746e1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746e16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746e1850"/>
        <function-ref name="get" scoped="" ref="0x7f94746e19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746e1b70"/>
        <function-ref name="set" scoped="" ref="0x7f94746e1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f94746e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94746e21d0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94746e21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94746e2550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94746e26e0"/>
        <function-ref name="request" scoped="" ref="0x7f94746e2870"/>
        <function-ref name="granted" scoped="" ref="0x7f94746e2a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94746e2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7f94746ccd00" loc="36:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f94746ccd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746cb0a0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746cb230"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746cb3c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f94746c37b0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f94746c37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7f94746d74d0" loc="23:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7f94746d74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d7850"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d79e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d7b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d7d00"/>
        <function-ref name="get" scoped="" ref="0x7f94746d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f94746d6340"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7f94746d4c90" loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7f94746d4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d3550"/>
        <function-ref name="get" scoped="" ref="0x7f94746d36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d3870"/>
        <function-ref name="set" scoped="" ref="0x7f94746d3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f94746c5bf0" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f94746c5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f94746c2a00" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f94746c2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f94746d0660" loc="30:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f94746d0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d09e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d0b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d0d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746cf020"/>
        <function-ref name="get" scoped="" ref="0x7f94746cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746cf340"/>
        <function-ref name="set" scoped="" ref="0x7f94746cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7f94746c76a0" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7f94746c76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746c7a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746c7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746c7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746c6020"/>
        <function-ref name="get" scoped="" ref="0x7f94746c61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746c6340"/>
        <function-ref name="set" scoped="" ref="0x7f94746c64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7f94746da020" loc="21:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7f94746da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746da3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746da530"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746da6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746da850"/>
        <function-ref name="get" scoped="" ref="0x7f94746da9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746dab70"/>
        <function-ref name="set" scoped="" ref="0x7f94746dad00"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7f94746d67e0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7f94746d67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d6b60"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d6cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d6e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d5030"/>
        <function-ref name="get" scoped="" ref="0x7f94746d51c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d5350"/>
        <function-ref name="set" scoped="" ref="0x7f94746d54e0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7f94746ca560" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f94746ca560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746ca8e0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746caa70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746cac00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746cad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f94746c3e60" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f94746c3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c5210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7f94746c8380" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7f94746c8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746c8700"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746c8890"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746c8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746c8bb0"/>
        <function-ref name="get" scoped="" ref="0x7f94746c8d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746c7020"/>
        <function-ref name="set" scoped="" ref="0x7f94746c71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7f94746d2020" loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7f94746d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d2850"/>
        <function-ref name="get" scoped="" ref="0x7f94746d29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d2b70"/>
        <function-ref name="set" scoped="" ref="0x7f94746d2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7f94746cc020" loc="35:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f94746cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746cc4a0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746cc630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746cc7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f94746c1350" loc="51:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f94746c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c16d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f94746cf980" loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f94746cf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746cfd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746ce340"/>
        <function-ref name="get" scoped="" ref="0x7f94746ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746ce660"/>
        <function-ref name="set" scoped="" ref="0x7f94746ce7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7f94746d9330" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7f94746d9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d96b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d9840"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d99d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d9b60"/>
        <function-ref name="get" scoped="" ref="0x7f94746d9cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d9e80"/>
        <function-ref name="set" scoped="" ref="0x7f94746d7030"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7f94746d5980" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7f94746d5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d5d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d4340"/>
        <function-ref name="get" scoped="" ref="0x7f94746d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d4660"/>
        <function-ref name="set" scoped="" ref="0x7f94746d47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f94746c5540" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f94746c5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c58c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f94746c2350" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f94746c2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c26d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f94746d1340" loc="29:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f94746d1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746d16c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746d1850"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746d19e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746d1b70"/>
        <function-ref name="get" scoped="" ref="0x7f94746d1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746d0020"/>
        <function-ref name="set" scoped="" ref="0x7f94746d01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94746d0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7f94746cb900" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f94746cb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746cbc80"/>
        <function-ref name="disable" scoped="" ref="0x7f94746cbe10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746ca020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7f94746c9130" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7f94746c9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746c94b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746c9640"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746c97d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746c9960"/>
        <function-ref name="get" scoped="" ref="0x7f94746c9af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746c9c80"/>
        <function-ref name="set" scoped="" ref="0x7f94746c9e10"/>
        <function-ref name="clr" scoped="" ref="0x7f94746c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f94746c1a00" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f94746c1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746c1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7f94746deca0" loc="20:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7f94746deca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746db230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746db3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746db550"/>
        <function-ref name="get" scoped="" ref="0x7f94746db6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746db870"/>
        <function-ref name="set" scoped="" ref="0x7f94746dba00"/>
        <function-ref name="clr" scoped="" ref="0x7f94746dbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f94746ceca0" loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f94746ceca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94746cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f94746cd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f94746cd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94746cd550"/>
        <function-ref name="get" scoped="" ref="0x7f94746cd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94746cd870"/>
        <function-ref name="set" scoped="" ref="0x7f94746cda00"/>
        <function-ref name="clr" scoped="" ref="0x7f94746cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f94746c0d10" loc="18:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f94746c0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bd0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f94746bc1a0" loc="21:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f94746bc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bc520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f94746bb020" loc="23:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f94746bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f94746bd410" loc="19:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f94746bd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f94746bb6d0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f94746bb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f94746bdac0" loc="20:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f94746bdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f94746bc850" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f94746bc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746bcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f94746bbd80" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f94746bbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f94746ba180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f94746a3b70" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f94746a3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746a2020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746a21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746a2340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746a24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f94746a2660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f94746acd10" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f94746acd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746ab0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f94746ab270"/>
        <function-ref name="disable" scoped="" ref="0x7f94746ab400"/>
        <function-ref name="edge" scoped="" ref="0x7f94746ab590"/>
        <function-ref name="enable" scoped="" ref="0x7f94746ab720"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746ab8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f94746a5b70" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f94746a5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746a4020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746a41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746a4340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746a44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f94746a4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746a47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f94746a2b70" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f94746a2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746a1020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746a11b0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746a1340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746a14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f94746a1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f94746abc30" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f94746abc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746a6020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746a61b0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746a6340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746a64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f94746a6660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746a67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f94746a4b70" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f94746a4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746a3020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746a31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746a3340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746a34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f94746a3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f94746a7e20" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f94746a7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746ac1c0"/>
        <function-ref name="fired" scoped="" ref="0x7f94746ac350"/>
        <function-ref name="disable" scoped="" ref="0x7f94746ac4e0"/>
        <function-ref name="edge" scoped="" ref="0x7f94746ac670"/>
        <function-ref name="enable" scoped="" ref="0x7f94746ac800"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746ac990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f94746a6b70" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f94746a6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746a5020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746a51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f94746a5340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746a54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f94746a5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f9474699830" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f9474699830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474699bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f947469d230" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f947469d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947469d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f947469c8d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f947469c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947469cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f9474698020" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f9474698020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f947469d9b0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f947469d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947469dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f94746990b0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f94746990b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474699430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f947469ba00" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f947469ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947469bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f947469c150" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f947469c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947469c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f947467c3f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f947467c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947467c770"/>
        <function-ref name="fired" scoped="" ref="0x7f947467c900"/>
        <function-ref name="disable" scoped="" ref="0x7f947467ca90"/>
        <function-ref name="edge" scoped="" ref="0x7f947467cc20"/>
        <function-ref name="enable" scoped="" ref="0x7f947467cdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474667020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f94746672f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f94746672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474667670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9474664260" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9474664260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746645e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9474664770"/>
        <function-ref name="disable" scoped="" ref="0x7f9474664900"/>
        <function-ref name="edge" scoped="" ref="0x7f9474664a90"/>
        <function-ref name="enable" scoped="" ref="0x7f9474664c20"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474664db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9474662100" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9474662100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474662480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f947465f0a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f947465f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947465f420"/>
        <function-ref name="fired" scoped="" ref="0x7f947465f5b0"/>
        <function-ref name="disable" scoped="" ref="0x7f947465f740"/>
        <function-ref name="edge" scoped="" ref="0x7f947465f8d0"/>
        <function-ref name="enable" scoped="" ref="0x7f947465fa60"/>
        <function-ref name="getValue" scoped="" ref="0x7f947465fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f947465e020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f947465e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947465e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f947465b020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f947465b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947465b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f947465b530"/>
        <function-ref name="disable" scoped="" ref="0x7f947465b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f947465b850"/>
        <function-ref name="enable" scoped="" ref="0x7f947465b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f947465bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f947465be40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f947465be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947465a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9474657d60" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9474657d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474656180"/>
        <function-ref name="fired" scoped="" ref="0x7f9474656310"/>
        <function-ref name="disable" scoped="" ref="0x7f94746564a0"/>
        <function-ref name="edge" scoped="" ref="0x7f9474656630"/>
        <function-ref name="enable" scoped="" ref="0x7f94746567c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474656950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9474656c20" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9474656c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9474653c90" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9474653c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746520a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9474652230"/>
        <function-ref name="disable" scoped="" ref="0x7f94746523c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9474652550"/>
        <function-ref name="enable" scoped="" ref="0x7f94746526e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474652870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9474652b40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9474652b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474651020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f947464fc90" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f947464fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947464e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f947464e230"/>
        <function-ref name="disable" scoped="" ref="0x7f947464e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f947464e550"/>
        <function-ref name="enable" scoped="" ref="0x7f947464e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f947464e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f947464eb40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f947464eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947464c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f947464ac90" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f947464ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f94746490a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9474649230"/>
        <function-ref name="disable" scoped="" ref="0x7f94746493c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9474649550"/>
        <function-ref name="enable" scoped="" ref="0x7f94746496e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474649870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9474649b40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9474649b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474648020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f947462d7a0" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f947462d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f947462db20"/>
        <function-ref name="fired" scoped="" ref="0x7f947462dcb0"/>
        <function-ref name="disable" scoped="" ref="0x7f947462de40"/>
        <function-ref name="edge" scoped="" ref="0x7f947462c020"/>
        <function-ref name="enable" scoped="" ref="0x7f947462c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f947462c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f947463cb50" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f947463cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947462d020"/>
        <function-ref name="disable" scoped="" ref="0x7f947462d1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f947462d340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f947462d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f94746292f0" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f94746292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474629670"/>
        <function-ref name="fired" scoped="" ref="0x7f9474629800"/>
        <function-ref name="disable" scoped="" ref="0x7f9474629990"/>
        <function-ref name="edge" scoped="" ref="0x7f9474629b20"/>
        <function-ref name="enable" scoped="" ref="0x7f9474629cb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474629e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f947462a680" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f947462a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f947462aa00"/>
        <function-ref name="disable" scoped="" ref="0x7f947462ab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f947462ad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9474629020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f9474626c20" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f9474626c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474625020"/>
        <function-ref name="fired" scoped="" ref="0x7f94746251b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9474625340"/>
        <function-ref name="edge" scoped="" ref="0x7f94746254d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9474625660"/>
        <function-ref name="getValue" scoped="" ref="0x7f94746257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f9474626120" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f9474626120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f94746264a0"/>
        <function-ref name="disable" scoped="" ref="0x7f9474626630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f94746267c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9474626950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f94746227a0" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f94746227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9474622b20"/>
        <function-ref name="fired" scoped="" ref="0x7f9474622cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9474622e40"/>
        <function-ref name="edge" scoped="" ref="0x7f9474621020"/>
        <function-ref name="enable" scoped="" ref="0x7f94746211b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9474621340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f9474623b50" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f9474623b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9474622020"/>
        <function-ref name="disable" scoped="" ref="0x7f94746221b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9474622340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f94746224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f947460e460" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f947460e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f947460e7e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f947460e970"/>
        <function-ref name="start" scoped="" ref="0x7f947460eb00"/>
        <function-ref name="stop" scoped="" ref="0x7f947460ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityData" ref="0x7f9474606590" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f9474606590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474606910"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474606aa0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474606c30"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474606dc0"/>
        <function-ref name="close" scoped="" ref="0x7f9474602020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f94745fd380" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f94745fd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94745fd700"/>
        <function-ref name="isInput" scoped="" ref="0x7f94745fd890"/>
        <function-ref name="toggle" scoped="" ref="0x7f94745fda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94745fdbb0"/>
        <function-ref name="get" scoped="" ref="0x7f94745fdd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94745fc020"/>
        <function-ref name="set" scoped="" ref="0x7f94745fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f94745fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f94745fe190" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7f94745fe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94745fe510"/>
        <function-ref name="isInput" scoped="" ref="0x7f94745fe6a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94745fe830"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94745fe9c0"/>
        <function-ref name="get" scoped="" ref="0x7f94745feb50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94745fece0"/>
        <function-ref name="set" scoped="" ref="0x7f94745fee70"/>
        <function-ref name="clr" scoped="" ref="0x7f94745fd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityClock" ref="0x7f94745ff730" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f94745ff730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94745ffab0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94745ffc40"/>
        <function-ref name="openDone" scoped="" ref="0x7f94745ffdd0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474606020"/>
        <function-ref name="close" scoped="" ref="0x7f94746061b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityPower" ref="0x7f9474602410" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f9474602410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474602790"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474602920"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474602ab0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474602c40"/>
        <function-ref name="close" scoped="" ref="0x7f9474602dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f94745fc630" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94745fc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94745fc9b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94745fcb40"/>
        <function-ref name="request" scoped="" ref="0x7f94745fccd0"/>
        <function-ref name="granted" scoped="" ref="0x7f94745fce60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94745fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f947460d110" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f947460d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474609630"/>
        <function-ref name="fired" scoped="" ref="0x7f947460bb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f947460a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f947460a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9474608020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474609ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f947460a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f947460dd00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474609020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f947460b220"/>
        <function-ref name="stop" scoped="" ref="0x7f947460b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94745ddc10" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94745ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f94745d8110"/>
        <function-ref name="fired" scoped="" ref="0x7f94745db6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f94745da4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f94745da020"/>
        <function-ref name="getdt" scoped="" ref="0x7f94745d8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f94745d8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f94745dbb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f94745dc860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f94745daab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f94745dcd30"/>
        <function-ref name="stop" scoped="" ref="0x7f94745db220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9474577020" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9474577020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f94745773c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9474577550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9474576cd0" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9474576cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f94745740a0"/>
        <function-ref name="configure" scoped="" ref="0x7f9474574230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f94745777a0" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94745777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474577b20"/>
        <function-ref name="requested" scoped="" ref="0x7f9474577cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474577e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474576020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94745761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474578210" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474578210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94745785b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474578740"/>
        <function-ref name="request" scoped="" ref="0x7f94745788d0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474578a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474578bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9474576400" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474576400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474576780"/>
        <function-ref name="userId" scoped="" ref="0x7f9474576910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f94739ff810" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f94739ff810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94739ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f94739ffe20" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f94739ffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94739fd1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f94739fd350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94739fd4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f94739fd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f94739fbd80" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f94739fbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f94739fa180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94739fa310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f94739f9b60" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94739f9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f94739f8020"/>
        <function-ref name="configure" scoped="" ref="0x7f94739f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f94739f8440" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f94739f8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94739f87c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f94739f8950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94739f8ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f94739f8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f94739fa560" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94739fa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739fa8e0"/>
        <function-ref name="requested" scoped="" ref="0x7f94739faa70"/>
        <function-ref name="granted" scoped="" ref="0x7f94739fac00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94739fad90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94739f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f94739f7020" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94739f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94739f73a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94739f7530"/>
        <function-ref name="led1On" scoped="" ref="0x7f94739f76c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94739f7850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94739f79e0"/>
        <function-ref name="get" scoped="" ref="0x7f94739f7b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94739f7d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f94739f54d0"/>
        <function-ref name="set" scoped="" ref="0x7f94739f51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f94739f5020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94739f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94739fb020" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94739fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739fb3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94739fb550"/>
        <function-ref name="request" scoped="" ref="0x7f94739fb6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f94739fb870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94739fba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f94739f9270" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94739f9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f94739f95f0"/>
        <function-ref name="userId" scoped="" ref="0x7f94739f9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f94739f57a0" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f94739f57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94739f5b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f94739f5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f9474571a10" loc="69:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9474571a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474571d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474545020"/>
        <function-ref name="start" scoped="" ref="0x7f94745451b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474545340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9474545590" loc="71:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9474545590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9474545910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9474545b60" loc="72:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474545b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474544020"/>
        <function-ref name="requested" scoped="" ref="0x7f94745441b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474544340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94745444d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9474544660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f94745448b0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94745448b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474544c30"/>
        <function-ref name="userId" scoped="" ref="0x7f9474544dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f94739c5b20" loc="61:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f94739c5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f94739c4020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f94739c41b0"/>
        <function-ref name="start" scoped="" ref="0x7f94739c4340"/>
        <function-ref name="stop" scoped="" ref="0x7f94739c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f94739c4720" loc="63:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f94739c4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f94739c4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f94739c1160" loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f94739c1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94739c14e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f94739c1670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f94739c4cf0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94739c4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739c30a0"/>
        <function-ref name="requested" scoped="" ref="0x7f94739c3230"/>
        <function-ref name="granted" scoped="" ref="0x7f94739c33c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94739c3550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94739c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f94739c1940" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f94739c1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94739c1cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f94739c1e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f94739c53c0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f94739c53c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94739c5740"/>
        <function-ref name="stop" scoped="" ref="0x7f94739c58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f94739c3930" loc="65:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94739c3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f94739c3cb0"/>
        <function-ref name="userId" scoped="" ref="0x7f94739c3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDin" ref="0x7f947453ce00" loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x7f947453ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947453b1c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947453b350"/>
        <function-ref name="openDone" scoped="" ref="0x7f947453b4e0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947453b670"/>
        <function-ref name="close" scoped="" ref="0x7f947453b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_Y" ref="0x7f947453d270" loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7f947453d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947453d5f0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947453d780"/>
        <function-ref name="openDone" scoped="" ref="0x7f947453d910"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947453daa0"/>
        <function-ref name="close" scoped="" ref="0x7f947453dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityData" ref="0x7f9474538700" loc="80:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7f9474538700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474538a80"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474538c10"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474538da0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474537020"/>
        <function-ref name="close" scoped="" ref="0x7f94745371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressurePower" ref="0x7f9474535190" loc="89:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x7f9474535190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474535510"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94745356a0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474535830"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94745359c0"/>
        <function-ref name="close" scoped="" ref="0x7f9474535b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDout" ref="0x7f947453bbe0" loc="68:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x7f947453bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947453a020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947453a1b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947453a340"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947453a4d0"/>
        <function-ref name="close" scoped="" ref="0x7f947453a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelThermopile_Select_Cnt" ref="0x7f947453aac0" loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7f947453aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947453ae40"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474539020"/>
        <function-ref name="openDone" scoped="" ref="0x7f94745391b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474539340"/>
        <function-ref name="close" scoped="" ref="0x7f94745394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost5Channel" ref="0x7f94745318c0" loc="106:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7f94745318c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474531c40"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474531dd0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474530020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94745301b0"/>
        <function-ref name="close" scoped="" ref="0x7f9474530340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityPower" ref="0x7f9474534020" loc="92:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7f9474534020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94745343a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474534530"/>
        <function-ref name="openDone" scoped="" ref="0x7f94745346c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474534850"/>
        <function-ref name="close" scoped="" ref="0x7f94745349e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityClock" ref="0x7f94745398a0" loc="77:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7f94745398a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474539c20"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474539db0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474538020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94745381b0"/>
        <function-ref name="close" scoped="" ref="0x7f9474538340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelEepromPower" ref="0x7f9474534da0" loc="95:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelEepromPower" scoped="" ref="0x7f9474534da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474533310"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94745334a0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474533630"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94745337c0"/>
        <function-ref name="close" scoped="" ref="0x7f9474533950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelLightPower" ref="0x7f9474537560" loc="83:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7f9474537560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94745378e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474537a70"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474537c00"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474537d90"/>
        <function-ref name="close" scoped="" ref="0x7f9474536020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureClock" ref="0x7f947453c060" loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x7f947453c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947453c3e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947453c570"/>
        <function-ref name="openDone" scoped="" ref="0x7f947453c700"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947453c890"/>
        <function-ref name="close" scoped="" ref="0x7f947453ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474530b70" loc="110:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474530b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947452f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947452f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f947452f340"/>
        <function-ref name="granted" scoped="" ref="0x7f947452f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947452f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2PowerNull" ref="0x7f94745363d0" loc="86:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2PowerNull" scoped="" ref="0x7f94745363d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474536750"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94745368e0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474536a70"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474536c00"/>
        <function-ref name="close" scoped="" ref="0x7f9474536d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_X" ref="0x7f947453e4c0" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x7f947453e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947453e840"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947453e9d0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947453eb60"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947453ecf0"/>
        <function-ref name="close" scoped="" ref="0x7f947453ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccelPower" ref="0x7f9474533d00" loc="98:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x7f9474533d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94745320a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474532230"/>
        <function-ref name="openDone" scoped="" ref="0x7f94745323c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474532550"/>
        <function-ref name="close" scoped="" ref="0x7f94745326e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost33Channel" ref="0x7f9474532aa0" loc="101:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7f9474532aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474532e20"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474531020"/>
        <function-ref name="openDone" scoped="" ref="0x7f94745311b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474531340"/>
        <function-ref name="close" scoped="" ref="0x7f94745314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f947452cd80" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f947452cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f947452b180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f947452b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f947452ab40" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f947452ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9474529020"/>
        <function-ref name="configure" scoped="" ref="0x7f94745291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f947452b560" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f947452b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947452b8e0"/>
        <function-ref name="requested" scoped="" ref="0x7f947452ba70"/>
        <function-ref name="granted" scoped="" ref="0x7f947452bc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947452bd90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f947452a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f947452c020" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947452c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947452c3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947452c550"/>
        <function-ref name="request" scoped="" ref="0x7f947452c6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f947452c870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947452ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f947452a270" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f947452a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f947452a5f0"/>
        <function-ref name="userId" scoped="" ref="0x7f947452a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f94739a6cf0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f94739a6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94739a50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f94739a5330" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f94739a5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94739a56b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f94739a5840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94739a59d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f94739a5b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f94739a23a0" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f94739a23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f94739a2740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94739a28d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f94739a0210" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94739a0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f94739a05b0"/>
        <function-ref name="configure" scoped="" ref="0x7f94739a0740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f94739a09d0" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f94739a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94739a0d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f947399e020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f947399e1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f947399e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f94739a2b20" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94739a2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739a1020"/>
        <function-ref name="requested" scoped="" ref="0x7f94739a11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f94739a1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94739a14d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94739a1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f947399e590" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f947399e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f947399e910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f947399eaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f947399ec30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f947399edc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f947399d020"/>
        <function-ref name="get" scoped="" ref="0x7f947399d1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f947399d340"/>
        <function-ref name="led0On" scoped="" ref="0x7f947399d980"/>
        <function-ref name="set" scoped="" ref="0x7f947399d660"/>
        <function-ref name="led2On" scoped="" ref="0x7f947399d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f947399d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94739a3540" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94739a3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739a38e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94739a3a70"/>
        <function-ref name="request" scoped="" ref="0x7f94739a3c00"/>
        <function-ref name="granted" scoped="" ref="0x7f94739a3d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94739a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f94739a18b0" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94739a18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f94739a1c30"/>
        <function-ref name="userId" scoped="" ref="0x7f94739a1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f947399dc50" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f947399dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947399c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f947399c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f94743495d0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f94743495d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474349950"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474349ae0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474349c70"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474349e00"/>
        <function-ref name="close" scoped="" ref="0x7f9474348020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f947434e5d0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f947434e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947434e950"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947434eae0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947434ec70"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947434ee00"/>
        <function-ref name="close" scoped="" ref="0x7f947434d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f947434cc70" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f947434cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947434a020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947434a1b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947434a340"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947434a4d0"/>
        <function-ref name="close" scoped="" ref="0x7f947434a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f94743482b0" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f94743482b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474348630"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94743487c0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474348950"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474348ae0"/>
        <function-ref name="close" scoped="" ref="0x7f9474348c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f947434d2b0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f947434d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947434d630"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947434d7c0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947434d950"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947434dae0"/>
        <function-ref name="close" scoped="" ref="0x7f947434dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f947434a8f0" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f947434a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947434ac70"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947434ae00"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474349020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94743491b0"/>
        <function-ref name="close" scoped="" ref="0x7f9474349340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f947434f910" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f947434f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947434fc90"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947434fe20"/>
        <function-ref name="openDone" scoped="" ref="0x7f947434e020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947434e1b0"/>
        <function-ref name="close" scoped="" ref="0x7f947434e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f947434c020" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f947434c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947434c3a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947434c530"/>
        <function-ref name="openDone" scoped="" ref="0x7f947434c6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947434c850"/>
        <function-ref name="close" scoped="" ref="0x7f947434c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f9473964020" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f9473964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94739643a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473964530"/>
        <function-ref name="openDone" scoped="" ref="0x7f94739646c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473964850"/>
        <function-ref name="close" scoped="" ref="0x7f94739649e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f94739680a0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f94739680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473968420"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94739685b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473968740"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94739688d0"/>
        <function-ref name="close" scoped="" ref="0x7f9473968a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f94739665e0" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f94739665e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473966960"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473966af0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473966c80"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473966e10"/>
        <function-ref name="close" scoped="" ref="0x7f9473965020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f9473964c70" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f9473964c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473963020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94739631b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473963340"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94739634d0"/>
        <function-ref name="close" scoped="" ref="0x7f9473963660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f9473968cf0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f9473968cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94739670a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473967230"/>
        <function-ref name="openDone" scoped="" ref="0x7f94739673c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473967550"/>
        <function-ref name="close" scoped="" ref="0x7f94739676e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f94739652b0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f94739652b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473965630"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94739657c0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473965950"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473965ae0"/>
        <function-ref name="close" scoped="" ref="0x7f9473965c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f947395e7b0" loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947395e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947395eb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947395ecc0"/>
        <function-ref name="request" scoped="" ref="0x7f947395ee50"/>
        <function-ref name="granted" scoped="" ref="0x7f947395d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947395d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f9473963a30" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9473963a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94739616b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f947395fc30"/>
        <function-ref name="write" scoped="" ref="0x7f9473960330"/>
        <function-ref name="readDone" scoped="" ref="0x7f947395f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f94739693f0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f94739693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473969770"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473969900"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473969a90"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473969c20"/>
        <function-ref name="close" scoped="" ref="0x7f9473969db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f9473967970" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f9473967970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473967cf0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473967e80"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473966030"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94739661c0"/>
        <function-ref name="close" scoped="" ref="0x7f9473966350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f947393ebe0" loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f947393ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947393d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f947393d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f947393f8b0" loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7f947393f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947393fc50"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947393fde0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947393e020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947393e1b0"/>
        <function-ref name="close" scoped="" ref="0x7f947393e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f947393e590" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f947393e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f947393e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9473940060" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9473940060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94739403e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9473940570"/>
        <function-ref name="led1On" scoped="" ref="0x7f9473940700"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9473940890"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9473940a20"/>
        <function-ref name="get" scoped="" ref="0x7f9473940bb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9473940d40"/>
        <function-ref name="led0On" scoped="" ref="0x7f947393f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f947393f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f947393f020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f947393f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9473941400" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9473941400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9473941780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473941910"/>
        <function-ref name="request" scoped="" ref="0x7f9473941aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f9473941c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473941dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f9473946790" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9473946790"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94739453f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9473943880"/>
        <function-ref name="write" scoped="" ref="0x7f9473944020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473944c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7f947393d480" loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7f947393d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947393d800"/>
        <function-ref name="runTask" scoped="" ref="0x7f947393d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f947395a120" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947395a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947395a4a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947395a630"/>
        <function-ref name="request" scoped="" ref="0x7f947395a7c0"/>
        <function-ref name="granted" scoped="" ref="0x7f947395a950"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947395aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9473959020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9473959020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9473959c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9473955150"/>
        <function-ref name="write" scoped="" ref="0x7f94739578c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473956510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474491530" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474491530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94744918b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474491a40"/>
        <function-ref name="request" scoped="" ref="0x7f9474491bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474491d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474490020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9474490a20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9474490a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947448e6b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f947448cc30"/>
        <function-ref name="write" scoped="" ref="0x7f947448d330"/>
        <function-ref name="readDone" scoped="" ref="0x7f947448c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9474487850" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9474487850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9474487bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9474487d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9474485570" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9474485570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9474485910"/>
        <function-ref name="configure" scoped="" ref="0x7f9474485aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9474486020" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474486020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94744863a0"/>
        <function-ref name="requested" scoped="" ref="0x7f9474486530"/>
        <function-ref name="granted" scoped="" ref="0x7f94744866c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474486850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94744869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474488a80" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474488a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474488e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474487020"/>
        <function-ref name="request" scoped="" ref="0x7f94744871b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474487340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94744874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9474486c30" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474486c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474485020"/>
        <function-ref name="userId" scoped="" ref="0x7f94744851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f94739093b0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f94739093b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9473909730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f94739099c0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f94739099c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9473909d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9473908020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94739081b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9473908340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9473906a60" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9473906a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9473906e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9473905020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9473904790" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9473904790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9473904b30"/>
        <function-ref name="configure" scoped="" ref="0x7f9473904cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9473902020" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9473902020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94739023a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9473902530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94739026c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9473902850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9473905270" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9473905270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739055f0"/>
        <function-ref name="requested" scoped="" ref="0x7f9473905780"/>
        <function-ref name="granted" scoped="" ref="0x7f9473905910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473905aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9473905c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9473902aa0" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9473902aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9473902e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9473901020"/>
        <function-ref name="led1On" scoped="" ref="0x7f94739011b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9473901340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94739014d0"/>
        <function-ref name="get" scoped="" ref="0x7f9473901660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94739017f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9473901e30"/>
        <function-ref name="set" scoped="" ref="0x7f9473901b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f9473901980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9473901ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9473907c80" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9473907c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94739060a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473906230"/>
        <function-ref name="request" scoped="" ref="0x7f94739063c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9473906550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94739066e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9473905e80" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9473905e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9473904220"/>
        <function-ref name="userId" scoped="" ref="0x7f94739043b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9473900160" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9473900160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94739004e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9473900670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9474481780" loc="62:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9474481780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9474481b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9474481d50" loc="63:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474481d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474476100"/>
        <function-ref name="requested" scoped="" ref="0x7f9474476290"/>
        <function-ref name="granted" scoped="" ref="0x7f9474476420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94744765b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9474476740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9474481020" loc="60:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9474481020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94744813a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474481530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9474476990" loc="64:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9474476990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474476d10"/>
        <function-ref name="userId" scoped="" ref="0x7f9474475020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f94744312a0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f94744312a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9474431620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f94744365a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f94744365a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9474434240"/>
        <function-ref name="writeDone" scoped="" ref="0x7f94744326d0"/>
        <function-ref name="write" scoped="" ref="0x7f9474434e50"/>
        <function-ref name="readDone" scoped="" ref="0x7f9474433a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f94744318b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94744318b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9474431c30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9474431dc0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9474430020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94744301b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9474430340"/>
        <function-ref name="get" scoped="" ref="0x7f94744304d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9474430660"/>
        <function-ref name="led2On" scoped="" ref="0x7f9474430ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9474430980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94744307f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9474430b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94744728b0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94744728b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474472c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474472de0"/>
        <function-ref name="request" scoped="" ref="0x7f947443c020"/>
        <function-ref name="granted" scoped="" ref="0x7f947443c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947443c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f947443c820" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f947443c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947443b4c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f94744389b0"/>
        <function-ref name="write" scoped="" ref="0x7f9474439110"/>
        <function-ref name="readDone" scoped="" ref="0x7f9474439d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f94744376c0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f94744376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474437a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474437bf0"/>
        <function-ref name="request" scoped="" ref="0x7f9474437d80"/>
        <function-ref name="granted" scoped="" ref="0x7f9474436020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94744361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f94743c2ba0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f94743c2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f94743c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f94743c12f0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f94743c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f94743c1670"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f94743c1800"/>
        <function-ref name="setStart" scoped="" ref="0x7f94743c1990"/>
        <function-ref name="status" scoped="" ref="0x7f94743c1b20"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f94743c1cb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f94743c1e40"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f94743c0020"/>
        <function-ref name="read" scoped="" ref="0x7f94743c01b0"/>
        <function-ref name="init" scoped="" ref="0x7f94743c0340"/>
        <function-ref name="enableAck" scoped="" ref="0x7f94743c04d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f94743c0660"/>
        <function-ref name="hasStart" scoped="" ref="0x7f94743c07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f94743c0980"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f94743c0c10"/>
        <function-ref name="enable" scoped="" ref="0x7f94743c0da0"/>
        <function-ref name="write" scoped="" ref="0x7f94743bf020"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f94743bf1b0"/>
        <function-ref name="off" scoped="" ref="0x7f94743bf340"/>
        <function-ref name="setStop" scoped="" ref="0x7f94743bf4d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f94743bf660"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f94743bf7f0"/>
        <function-ref name="hasStop" scoped="" ref="0x7f94743bf980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f94743bfc50" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f94743bfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94743be020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94743be1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f94743be340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94743be4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94743be660"/>
        <function-ref name="get" scoped="" ref="0x7f94743be7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94743be980"/>
        <function-ref name="led2On" scoped="" ref="0x7f94743bd020"/>
        <function-ref name="set" scoped="" ref="0x7f94743beca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94743beb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f94743bee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f94743bd2f0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f94743bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94743bd670"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94743bd800"/>
        <function-ref name="led1On" scoped="" ref="0x7f94743bd990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94743bdb20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94743bdcb0"/>
        <function-ref name="get" scoped="" ref="0x7f94743bde40"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94743bc020"/>
        <function-ref name="led2On" scoped="" ref="0x7f94743bc660"/>
        <function-ref name="set" scoped="" ref="0x7f94743bc340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94743bc1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f94743bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f94743c7570" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f94743c7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94743c78f0"/>
        <function-ref name="stop" scoped="" ref="0x7f94743c7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f94743c7e30" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f94743c7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94743c6ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f94743c2020"/>
        <function-ref name="write" scoped="" ref="0x7f94743c5710"/>
        <function-ref name="readDone" scoped="" ref="0x7f94743c33c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f94743b7500" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f94743b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f94743b7880"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f94743b7a10"/>
        <function-ref name="setStart" scoped="" ref="0x7f94743b7ba0"/>
        <function-ref name="status" scoped="" ref="0x7f94743b7d30"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f94743b6020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f94743b61b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f94743b6340"/>
        <function-ref name="read" scoped="" ref="0x7f94743b64d0"/>
        <function-ref name="init" scoped="" ref="0x7f94743b6660"/>
        <function-ref name="enableAck" scoped="" ref="0x7f94743b67f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f94743b6980"/>
        <function-ref name="hasStart" scoped="" ref="0x7f94743b6b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f94743b6ca0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f94743b5020"/>
        <function-ref name="enable" scoped="" ref="0x7f94743b51b0"/>
        <function-ref name="write" scoped="" ref="0x7f94743b5340"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f94743b54d0"/>
        <function-ref name="off" scoped="" ref="0x7f94743b5660"/>
        <function-ref name="setStop" scoped="" ref="0x7f94743b57f0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f94743b5980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f94743b5b10"/>
        <function-ref name="hasStop" scoped="" ref="0x7f94743b5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f94743b1020" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f94743b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f94743b13a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f94743b1530"/>
        <function-ref name="setStart" scoped="" ref="0x7f94743b16c0"/>
        <function-ref name="status" scoped="" ref="0x7f94743b1850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f94743b19e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f94743b1b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f94743b1d00"/>
        <function-ref name="read" scoped="" ref="0x7f94743b0020"/>
        <function-ref name="init" scoped="" ref="0x7f94743b01b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f94743b0340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f94743b04d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f94743b0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f94743b07f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f94743b0a80"/>
        <function-ref name="enable" scoped="" ref="0x7f94743b0c10"/>
        <function-ref name="write" scoped="" ref="0x7f94743b0da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f94743af020"/>
        <function-ref name="off" scoped="" ref="0x7f94743af1b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f94743af340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f94743af4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f94743af660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f94743af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f94743afb80" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f94743afb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94743ae020"/>
        <function-ref name="isInput" scoped="" ref="0x7f94743ae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94743ae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94743ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7f94743ae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94743ae7f0"/>
        <function-ref name="set" scoped="" ref="0x7f94743ae980"/>
        <function-ref name="clr" scoped="" ref="0x7f94743aeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f94743aee50" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f94743aee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f94743ad210"/>
        <function-ref name="isInput" scoped="" ref="0x7f94743ad3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f94743ad530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f94743ad6c0"/>
        <function-ref name="get" scoped="" ref="0x7f94743ad850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f94743ad9e0"/>
        <function-ref name="set" scoped="" ref="0x7f94743adb70"/>
        <function-ref name="clr" scoped="" ref="0x7f94743add00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9474374230" loc="46:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9474374230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94743745b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9474374870" loc="47:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9474374870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9474374bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9474374d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f9474373020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94743731b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9474373340"/>
        <function-ref name="get" scoped="" ref="0x7f94743734d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9474373660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9474373ca0"/>
        <function-ref name="set" scoped="" ref="0x7f94743737f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9474373980"/>
        <function-ref name="led2On" scoped="" ref="0x7f9474373b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f947433e8f0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f947433e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947433ec70"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947433ee00"/>
        <function-ref name="openDone" scoped="" ref="0x7f947433c020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947433c1b0"/>
        <function-ref name="close" scoped="" ref="0x7f947433c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f94743428f0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f94743428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474342c70"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474342e00"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474341020"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94743411b0"/>
        <function-ref name="close" scoped="" ref="0x7f9474341340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f947433f020" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f947433f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947433f3a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947433f530"/>
        <function-ref name="openDone" scoped="" ref="0x7f947433f6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947433f850"/>
        <function-ref name="close" scoped="" ref="0x7f947433f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f947433c5d0" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f947433c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947433c950"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947433cae0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947433cc70"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947433ce00"/>
        <function-ref name="close" scoped="" ref="0x7f947433b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f94743415d0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f94743415d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474341950"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474341ae0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474341c70"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474341e00"/>
        <function-ref name="close" scoped="" ref="0x7f9474340020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f947433fc70" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f947433fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947433e020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947433e1b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f947433e340"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947433e4d0"/>
        <function-ref name="close" scoped="" ref="0x7f947433e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f9474343b90" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f9474343b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474342020"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94743421b0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474342340"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94743424d0"/>
        <function-ref name="close" scoped="" ref="0x7f9474342660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f94743402b0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f94743402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474340630"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94743407c0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474340950"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474340ae0"/>
        <function-ref name="close" scoped="" ref="0x7f9474340c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7f9473876d10" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7f9473876d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94738740e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473874270"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473874400"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473874590"/>
        <function-ref name="close" scoped="" ref="0x7f9473874720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f947387ae40" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7f947387ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94738791e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473879370"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473879500"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473879690"/>
        <function-ref name="close" scoped="" ref="0x7f9473879820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7f9473877440" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7f9473877440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f94738777c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473877950"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473877ae0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473877c70"/>
        <function-ref name="close" scoped="" ref="0x7f9473877e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7f94738749b0" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7f94738749b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473874d30"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473873020"/>
        <function-ref name="openDone" scoped="" ref="0x7f94738731b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473873340"/>
        <function-ref name="close" scoped="" ref="0x7f94738734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7f9473879ab0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7f9473879ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473879e30"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473878020"/>
        <function-ref name="openDone" scoped="" ref="0x7f94738781b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473878340"/>
        <function-ref name="close" scoped="" ref="0x7f94738784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7f94738760c0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7f94738760c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473876440"/>
        <function-ref name="isOpen" scoped="" ref="0x7f94738765d0"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473876760"/>
        <function-ref name="closeDone" scoped="" ref="0x7f94738768f0"/>
        <function-ref name="close" scoped="" ref="0x7f9473876a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f947386f550" loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947386f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947386f8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947386fa60"/>
        <function-ref name="request" scoped="" ref="0x7f947386fbf0"/>
        <function-ref name="granted" scoped="" ref="0x7f947386fd80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947386e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f94738738a0" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f94738738a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9473872500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f94738709b0"/>
        <function-ref name="write" scoped="" ref="0x7f9473871150"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473871d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f947387a1f0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7f947387a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f947387a570"/>
        <function-ref name="isOpen" scoped="" ref="0x7f947387a700"/>
        <function-ref name="openDone" scoped="" ref="0x7f947387a890"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947387aa20"/>
        <function-ref name="close" scoped="" ref="0x7f947387abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7f9473878760" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7f9473878760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473878ae0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473878c70"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473878e00"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9473877020"/>
        <function-ref name="close" scoped="" ref="0x7f94738771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f947384fa50" loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f947384fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947384fdd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f947384e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f9473850720" loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7f9473850720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9473850ac0"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9473850c50"/>
        <function-ref name="openDone" scoped="" ref="0x7f9473850de0"/>
        <function-ref name="closeDone" scoped="" ref="0x7f947384f020"/>
        <function-ref name="close" scoped="" ref="0x7f947384f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f947384f400" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f947384f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f947384f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9473852e70" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9473852e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9473851220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94738513b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9473851540"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94738516d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9473851860"/>
        <function-ref name="get" scoped="" ref="0x7f94738519f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9473851b80"/>
        <function-ref name="led0On" scoped="" ref="0x7f9473850340"/>
        <function-ref name="set" scoped="" ref="0x7f9473850020"/>
        <function-ref name="led2On" scoped="" ref="0x7f9473851d10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94738501b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9473852260" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9473852260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94738525e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9473852770"/>
        <function-ref name="request" scoped="" ref="0x7f9473852900"/>
        <function-ref name="granted" scoped="" ref="0x7f9473852a90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9473852c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f9473857540" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9473857540"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94738561b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f94738536d0"/>
        <function-ref name="write" scoped="" ref="0x7f9473856dc0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473855a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7f947384e2f0" loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7f947384e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f947384e670"/>
        <function-ref name="runTask" scoped="" ref="0x7f947384e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f947386b020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947386b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947386b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947386b530"/>
        <function-ref name="request" scoped="" ref="0x7f947386b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f947386b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947386b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f947386bd90" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f947386bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94738699e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9473866020"/>
        <function-ref name="write" scoped="" ref="0x7f9473868620"/>
        <function-ref name="readDone" scoped="" ref="0x7f94738672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f94743286a0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94743286a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474324c40"/>
        <function-ref name="fired" scoped="" ref="0x7f94743251e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9474324020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9474325ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9474323590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474323110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474325660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9474326390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474324630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9474326860"/>
        <function-ref name="stop" scoped="" ref="0x7f9474326d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7f947423cbc0" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="BaseStationC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7f947423cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947423b7e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f947423bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7f947423d310" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="BaseStationC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7f947423d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947423c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f947423c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRRead" ref="0x7f9473818da0" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRRead" scoped="" ref="0x7f9473818da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94738179d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473817e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7f947381d370" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7f947381d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947381b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f947381b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLRead" ref="0x7f94738195a0" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLRead" scoped="" ref="0x7f94738195a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9473818200"/>
        <function-ref name="readDone" scoped="" ref="0x7f9473818680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLResource" ref="0x7f947381baa0" loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLResource" scoped="" ref="0x7f947381baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947381be20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947381a020"/>
        <function-ref name="request" scoped="" ref="0x7f947381a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f947381a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947381a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7f947381fb70" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7f947381fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f947381e790"/>
        <function-ref name="readDone" scoped="" ref="0x7f947381ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRResource" ref="0x7f947381a7a0" loc="40:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRResource" scoped="" ref="0x7f947381a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947381ab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947381acb0"/>
        <function-ref name="request" scoped="" ref="0x7f947381ae40"/>
        <function-ref name="granted" scoped="" ref="0x7f9473819020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94738191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7f94742deb90" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7f94742deb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742dd7b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f94742ddc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7f94742db480" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7f94742db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742da090"/>
        <function-ref name="readDone" scoped="" ref="0x7f94742da510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94742dfcb0" loc="35:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94742dfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94742de0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94742de230"/>
        <function-ref name="request" scoped="" ref="0x7f94742de3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f94742de550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94742de6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7f94742add60" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7f94742add60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742ab980"/>
        <function-ref name="readDone" scoped="" ref="0x7f94742abe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f94742a37a0" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f94742a37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94742a3b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f94742a3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x7f94742a2800" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x7f94742a2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94742a2b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f94742a2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7f94742aa580" loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7f94742aa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742a91b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f94742a9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f94742a4a50" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f94742a4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94742a4dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94742a3020"/>
        <function-ref name="request" scoped="" ref="0x7f94742a31b0"/>
        <function-ref name="granted" scoped="" ref="0x7f94742a3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94742a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f94742a9d10" loc="40:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f94742a9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742a8980"/>
        <function-ref name="writeDone" scoped="" ref="0x7f94742a6e60"/>
        <function-ref name="write" scoped="" ref="0x7f94742a75c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f94742a6250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f94742a2020" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDone" scoped="" ref="0x7f94742a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94742a23a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f94742a2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f947429dc90" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <component-ref qname="HplTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947429dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947429c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947429c230"/>
        <function-ref name="request" scoped="" ref="0x7f947429c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f947429c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947429c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9474299870" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9474299870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474299bf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474299d80"/>
        <function-ref name="start" scoped="" ref="0x7f9474298020"/>
        <function-ref name="stop" scoped="" ref="0x7f94742981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x7f94742872a0" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x7f94742872a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474287620"/>
        <function-ref name="runTask" scoped="" ref="0x7f94742877b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7f94742882a0" loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7f94742882a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9474288620"/>
        <function-ref name="runTask" scoped="" ref="0x7f94742887b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f947428d9b0" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f947428d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947428dd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947428c020"/>
        <function-ref name="request" scoped="" ref="0x7f947428c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f947428c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947428c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelLightPower" ref="0x7f9474298580" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7f9474298580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7f9474298900"/>
        <function-ref name="isOpen" scoped="" ref="0x7f9474298a90"/>
        <function-ref name="openDone" scoped="" ref="0x7f9474298c20"/>
        <function-ref name="closeDone" scoped="" ref="0x7f9474298db0"/>
        <function-ref name="close" scoped="" ref="0x7f9474296020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f947428c7c0" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f947428c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f947428cb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f947428ccd0"/>
        <function-ref name="request" scoped="" ref="0x7f947428ce60"/>
        <function-ref name="granted" scoped="" ref="0x7f947428a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f947428a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f9474292ae0" loc="40:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9474292ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9474290790"/>
        <function-ref name="writeDone" scoped="" ref="0x7f947428eca0"/>
        <function-ref name="write" scoped="" ref="0x7f947428f400"/>
        <function-ref name="readDone" scoped="" ref="0x7f947428e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f94742964d0" loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f94742964d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474293a20"/>
        <function-ref name="fired" scoped="" ref="0x7f9474294020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9474294da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9474294920"/>
        <function-ref name="getdt" scoped="" ref="0x7f94742924a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474292020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f94742944a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9474295110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474293410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f94742955e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9474295ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f94742653a0" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f94742653a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9474265740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94742658d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f94742631f0" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94742631f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9474263590"/>
        <function-ref name="configure" scoped="" ref="0x7f9474263720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9474265b20" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474265b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474264020"/>
        <function-ref name="requested" scoped="" ref="0x7f94742641b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474264340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94742644d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9474264660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474266510" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474266510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94742668b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474266a40"/>
        <function-ref name="request" scoped="" ref="0x7f9474266bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474266d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474265020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f94742648b0" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94742648b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9474264c30"/>
        <function-ref name="userId" scoped="" ref="0x7f9474264dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f94737e83b0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f94737e83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f94737e8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f94737e89c0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f94737e89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94737e8d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f94737e7020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94737e71b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f94737e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f94737e4a60" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f94737e4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f94737e4e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94737e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f94737e2790" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f94737e2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f94737e2b30"/>
        <function-ref name="configure" scoped="" ref="0x7f94737e2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f94737e1020" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f94737e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f94737e13a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f94737e1530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f94737e16c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f94737e1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f94737e3270" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94737e3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94737e35f0"/>
        <function-ref name="requested" scoped="" ref="0x7f94737e3780"/>
        <function-ref name="granted" scoped="" ref="0x7f94737e3910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94737e3aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94737e3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f94737e1aa0" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f94737e1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f94737e1e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f94737e0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f94737e01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f94737e0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f94737e04d0"/>
        <function-ref name="get" scoped="" ref="0x7f94737e0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f94737e07f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f94737e0e30"/>
        <function-ref name="set" scoped="" ref="0x7f94737e0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f94737e0980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f94737e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f94737e5c80" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f94737e5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94737e40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f94737e4230"/>
        <function-ref name="request" scoped="" ref="0x7f94737e43c0"/>
        <function-ref name="granted" scoped="" ref="0x7f94737e4550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94737e46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f94737e3e80" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94737e3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f94737e2220"/>
        <function-ref name="userId" scoped="" ref="0x7f94737e23b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f94737df160" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f94737df160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94737df4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f94737df670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f94742615b0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f94742615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9474261930"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9474261ac0"/>
        <function-ref name="start" scoped="" ref="0x7f9474261c50"/>
        <function-ref name="stop" scoped="" ref="0x7f9474261de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9474260060" loc="71:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9474260060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f94742603e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9474260630" loc="72:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9474260630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94742609b0"/>
        <function-ref name="requested" scoped="" ref="0x7f9474260b40"/>
        <function-ref name="granted" scoped="" ref="0x7f9474260cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9474260e60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f947425e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f947425e270" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f947425e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f947425e5f0"/>
        <function-ref name="userId" scoped="" ref="0x7f947425e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f94737ae400" loc="61:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f94737ae400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f94737ae780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f94737ae910"/>
        <function-ref name="start" scoped="" ref="0x7f94737aeaa0"/>
        <function-ref name="stop" scoped="" ref="0x7f94737aec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f94737aee80" loc="63:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f94737aee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f94737ad220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f94737ac8c0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f94737ac8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94737acc40"/>
        <function-ref name="runTask" scoped="" ref="0x7f94737acdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f94737ad470" loc="64:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f94737ad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94737ad7f0"/>
        <function-ref name="requested" scoped="" ref="0x7f94737ad980"/>
        <function-ref name="granted" scoped="" ref="0x7f94737adb10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94737adca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f94737ade30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f94737ab100" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f94737ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f94737ab480"/>
        <function-ref name="runTask" scoped="" ref="0x7f94737ab610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f94737afb30" loc="60:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f94737afb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f94737ae020"/>
        <function-ref name="stop" scoped="" ref="0x7f94737ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f94737ac0e0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f94737ac0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f94737ac460"/>
        <function-ref name="userId" scoped="" ref="0x7f94737ac5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f947425a3d0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="HplTaos2550C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f947425a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9475d1a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9475d1ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9474256870"/>
        <function-ref name="fired" scoped="" ref="0x7f9474259e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9474258c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9474258780"/>
        <function-ref name="getdt" scoped="" ref="0x7f94742551e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9474256cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9474258300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9474259020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9474256260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f94742594f0"/>
        <function-ref name="stop" scoped="" ref="0x7f94742599c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474253020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f94742533a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474253530"/>
        <function-ref name="request" scoped="" ref="0x7f94742536c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474253850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94742539e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9474253d90" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9474253d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742529e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f947424e020"/>
        <function-ref name="write" scoped="" ref="0x7f9474251620"/>
        <function-ref name="readDone" scoped="" ref="0x7f947424f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9474249dc0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9474249dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9474248180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9474248310"/>
        <function-ref name="request" scoped="" ref="0x7f94742484a0"/>
        <function-ref name="granted" scoped="" ref="0x7f9474248630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f94742487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9474248b70" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9474248b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9474510650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9474510910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f94742477d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9474244ca0"/>
        <function-ref name="write" scoped="" ref="0x7f9474245400"/>
        <function-ref name="readDone" scoped="" ref="0x7f9474244090"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9475c8dd00" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9475c8e8e0" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f9475c82b70" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f9475c828f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f9475c85020" loc="31:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f9475c85aa0" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9475c85820" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f9475c845e0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9475c84360" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f9475c82020" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9475c710e0" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9475c71810" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9475c722b0" loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9475c6f760" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9475c729b0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9475c6f020" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9475c734c0" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9475c73b90" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f947675ec40" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9475d8abf0" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9475d8a3e0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9475d82c50" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9475d804f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f9475ccdac0" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9475cad1f0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9475d44470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9475ce5b80" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f947590d4e0" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f947590d260" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f947590cab0" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f947590c830" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f947590e860" loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f947590dd30" loc="130:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f94758a0060" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
              <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94758a16d0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f94758a1a20" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94758a1d50" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f94758872a0" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9475887020" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f9475891d60" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9475891ae0" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f94758931f0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f9475893cb0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9475893a30" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f947588e7a0" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f947588e1c0" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f947588e510" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f94758902b0" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9475892c40" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f9475890020" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f947588abf0" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f947588a970" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f9475888020" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f94758899a0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f9475889cc0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f9475ab6c10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f947588c9f0" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f947588c770" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f9475886730" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9475886150" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f94758864a0" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f9475885580" loc="195:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f94758707d0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f94758707d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f947586d0e0" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f947586de10" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f94758707d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f947586d860" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f947586db80" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f94758707d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f947589c110" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94758a4e30" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f947589b2a0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947589b020" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f9475898620" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475898020" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9475898350" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f94758976d0" loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f947589a730" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947589a170" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f947589a4a0" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f947587fa20" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f947587fa20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f94758757c0" loc="136:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9475879020" loc="83:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9475878da0" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f94758787d0" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9475878b10" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9475878020" loc="98:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f94758748a0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9475874020" loc="144:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9475879800" loc="92:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f947587c5b0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f947587c330" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9475877dc0" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f94758777f0" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9475877b30" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f947587a0b0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f947587cdf0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f947587a8b0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f94758ab410" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f94758adaa0" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f94758ade20" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94758ab170" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f94758a8a40" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94758a8440" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94758a8770" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f94758a6b80" loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f94758a9790" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94758a9510" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f94758a7cb0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94758a76d0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f94758a7a20" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f9475860020" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f94758607d0" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f947585f020" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f947585d020" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f947585c7d0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f947585b020" loc="117:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f947585f7b0" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f947585bb90" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f947585b910" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f9475861850" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f947585d800" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f947585c020" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f94757747f0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f94757741e0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f9475774560" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f9475768e30" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475768810" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f9475768ba0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f9475766020" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475767d70" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f9475768020" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f9475769520" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f94757692a0" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f947576e020" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475773cd0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f947576d2a0" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947576d020" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f947576c430" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947576c1b0" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f947575f390" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947575f110" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f9475763410" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947576bda0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f9475763180" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f9475761350" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94757610d0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f9475762830" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475762210" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f94757625a0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f947575e390" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947575e110" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f947575ad40" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f947575a530" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f947575a2b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f94757595e0" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f94757657a0" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f94757657a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f94757659e0" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94757659e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f9475756840" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94757659e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94757565c0" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f94757539d0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475753750" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f94757575f0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475757370" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9475752d00" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94757659e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475752710" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f9475752a70" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94757659e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f947573c380" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f947573c380"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f9475737550" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94757372d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9475739aa0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f947573c380"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475739820" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f9475739020" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947573ccb0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f94757362f0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f947573c380"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475737ca0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f9475736060" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f947573c380"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f947572dc60" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f947572dc60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f94757295c0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f947572b490" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947572b210" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9475709d00" loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f947570ad00" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f947570a390" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9475709530" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f94757078b0" loc="128:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f9475704e80" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475704c00" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f947570ba30" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f9475704490" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475704210" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f9475701990" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475701370" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f9475701700" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f9475702be0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94757025c0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f9475702950" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f9475700d20" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f94758c5d60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475700aa0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f94756ffa50" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f94758c5d60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756ff440" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f94756ff7c0" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f94758c5d60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f9475700350" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94757000d0" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f94756fd1f0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f94758c5d60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9475711130" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f9475712790" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f9475712b10" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9475712e40" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f947570d810" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947570d210" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f947570d540" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f947570f960" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9475710020" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475711c70" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f947570f020" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94757109c0" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f9475710d10" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f94756c0750" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f94756cc9b0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756cc730" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f94756bb2a0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756bb020" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f94756b9a30" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b97b0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f94756bea50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756be7d0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f94756bf2e0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756bf060" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f94756bc790" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756bc1b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f94756bc500" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f94756be050" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756bfa40" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f94756bfd90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f94756b9020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756bb9d0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f94756bbd20" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f94756ce960" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f94756c4350" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f94756c15f0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756c1370" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f94756c4e60" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756c4be0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f94756c29a0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756c2720" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f9475698c10" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f9475699d50" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f94758c7d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f9475699ad0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f94758c7d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f94756984e0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f94756992d0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f9475697460" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f94758c7d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f94756908d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475690650" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f9475694c10" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475694990" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f9475692350" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f9475693ad0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756934f0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9475693840" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f94756940b0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947569be00" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f9475692de0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475692b60" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f94756e0020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f94756e16c0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756e1440" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f94756e0b50" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756e08d0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f94756de420" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f94756dd020" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756ded20" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f94756cd2a0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756cd020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f94756d4190" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f94756d69d0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f94756d63c0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f94756d6740" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f94756da3f0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756da170" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f94756d8020" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756dac80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f94756d7020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f94756d8910" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f94756d8c90" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f94756e3a80" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f94756db910" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756db370" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f94756db680" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f94756d7b90" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756d7910" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f94756a70b0" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a8dd0" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f94756a9680" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a9400" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f94756b5df0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b5820" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f94756b5b60" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f94756b1020" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b2ca0" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f94756a1050" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a3a40" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f94756a3d90" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f94756b2430" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b21b0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f94756a85e0" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a8020" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f94756a8350" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f94756b09d0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f94756b03c0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f94756b0740" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f94756a32a0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a3020" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f94756b4920" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b46a0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f94756ad3f0" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756ad170" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f94756ae8b0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f94756ae2a0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f94756ae620" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f947569f820" loc="178:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f94758c41b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f94756a1ad0" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a1850" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f947569f020" loc="173:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f94758c5d60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f94756a46b0" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a40d0" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f94756a4420" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f94756b1b20" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b18a0" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f94756aabf0" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756aa620" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f94756aa960" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f94756a7e40" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a7870" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f94756a7bb0" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f947569d2a0" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f947569d020" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f94756ac2b0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756adbf0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f94756ac020" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f94756b5040" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756b8da0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f94756a0680" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a0400" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f94756a5910" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756a5690" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f94756acdb0" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756acb30" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f94756d1e00" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756d1820" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f94756d1b70" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f94756cf5e0" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f94756d2430" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756d21b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f94756d1020" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756d2c40" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f94756c9c50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756c99d0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f94756c9110" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756d3e20" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f94756c74d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f94756c6020" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94756c7d20" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9475631d10" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9475631d10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f947562e020" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f947562ac50" loc="109:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f947562dba0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f947562a2b0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f947562cbd0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f947562a020" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f947562c3b0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9475629480" loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f947562eb80" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f947562e900" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947562e020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f947562d3e0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f947561a780" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f94756190e0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f9475619a60" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f947561a020" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f94755e3020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94755e6d50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f94755e2b40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94755e28c0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f94755e2020" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94755e3940" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f94755e3c90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f94755de630" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
              <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94755de370" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f94755ccba0" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f94755cab10" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f94755ca3b0" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f94755cc360" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f94755cfd00" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9475ab5020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f94755cc0d0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f947551c540" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f947551ce70" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f9475516660" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f947551ddb0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f947551ec80" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f9475519530" loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f947550d740" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f94755177a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f947550d4c0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f94755177a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f9475510750" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f947550e2a0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f94755177a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f947550e020" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f94755177a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f947550ebb0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f94755177a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f94753a9790" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
              <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94753a94d0" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f94753acb20" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f94753ac8a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f94753962e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f9475396060" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f9475396a80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9475397020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f947539fd50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9475397960" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f94753976e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f947539c0b0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f947539ddb0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f947539b5f0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f947539b370" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f947539cb80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f947539c900" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f947539a110" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f947539be20" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f947539d5b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f947539d330" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9475ab5400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f9475305070" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f9475303120" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f9475303b70" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f94753038f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f9475302350" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f94753058d0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9475302bc0" loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f94753069f0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475306770" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f94752ffdf0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f94752ff5c0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f94752ff340" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f947528a350" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f947528dae0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f94766cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f947525d360" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f947525d360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f947525a020" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f947525d360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f947525dc20" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f947525d360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f9475233700" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475233480" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9475236510" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475236290" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f94752352f0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475236cd0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f9475235060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9475235d00" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9475235a80" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f9475201350" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f94752010d0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f94752058b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f947517d4a0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f947517d4a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f947517d6e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947517d6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f947517c030" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f947517d6e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f947517b190" loc="76:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f947517c8b0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f947517b8f0" loc="82:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f947514db20" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f947514e8e0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f94751515a0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f947514d350" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f947514d0d0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f947514e110" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f947514fe30" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f947514c5c0" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f947514c340" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9475151d40" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f947514f710" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f947514f490" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f947513c910" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f947513e880" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f947513d030" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f947513d860" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f947513a190" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f947513c0e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f947513f5e0" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9475cfeda0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9475cfd230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f947513e040" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9475cfeda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9475cfd230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f947513fda0" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9475cfeda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9475cfd230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f94751490d0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94751490d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f94751469f0" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9475148bf0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9475149a10" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94751490d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9475147390" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f94751441f0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9475148440" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94751490d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f94751481c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f94751490d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9475147b00" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9475146270" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f947515e430" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f947515e430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f9475158020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9475159020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f947515ed60" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f947515e430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f9475158a00" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9475158780" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f9475157270" loc="110:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f947515c7b0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f947515c020" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f94751597e0" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f947515d760" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f947515e430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f947515d4e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f947515e430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f947515b020" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f947515b770" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9474f4a920" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9474f4a920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9474f4ab60" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474f4ab60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f9474f436b0" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474f4ab60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9474f43430" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474f4ab60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f9474f47020" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9474f461f0" loc="66:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f9474f479c0" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f9474f47740" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f9474f48760" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f9474f4f810" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474f4f590" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f9474f4ebf0" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474f4e970" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f9474f4e0e0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9474f4c6c0" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474f4c440" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9474e58360" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474e58360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f9474e502a0" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f9474e50020" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9474e51020" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9474e58ca0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474e58360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f9474e54110" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474e58360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9474e55e10" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474e58360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9474e548c0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9474e517e0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9474e55670" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474e58360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9474e553f0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9474e58360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9474e53070" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9474e537c0" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9474e362c0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9474e378b0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f9474e37c40" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9474e36020" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9474e35800" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9474e33ae0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f9474e33e70" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9474e351e0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9474e35550" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f9474e394c0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f9474e39240" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f9474e1f560" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f9474e154d0" loc="126:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f9474e1add0" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f9474e14020" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f9474e15c70" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f9474e20d80" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f9474e179e0" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f9474e17760" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f9474e1b510" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f9474e1b290" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9474e1e4e0" loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f9474e10c20" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9474e109a0" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f9474e1bcb0" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f9474e122a0" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f9474e12020" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9474e11270" loc="136:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f9474e16c80" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f9474e16a00" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f9474e10270" loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f9474e197d0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f9474e19550" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9474e1d020" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474e1ec40" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f9474e1a670" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f9474e1a3f0" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f9474e16270" loc="123:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f9474e14790" loc="129:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f9474e12a00" loc="132:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f9474e11a20" loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f9474e17020" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f9474e1fcf0" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9474e1da20" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474e1d7a0" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9474db5e10" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9474db26a0" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f9474d4e850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9474d4cde0" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9474d4f8f0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9474d49020" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9474d4a810" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9474d4a590" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9474d4dc40" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9474d4d9c0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9474d49a20" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9474d497a0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9474d4e0e0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f9474d4c610" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9474d4c390" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9474d4d2a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9474d4d020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9474b892f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9474b8cce0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9474b89060" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f9474b85890" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9474b85290" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9474b855c0" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f9474b849b0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9474b885f0" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9474b88370" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9474b87ac0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9474b874e0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f9474b87830" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f9474b24670" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9474b24060" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f9474b243e0" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f9474b27820" loc="15:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f9474b266d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9474b260d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f94758b0bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7f94758ad2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f9474b26440" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9474af0760" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9474aee020" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f9474aede10" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f9474aed6a0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f9474af8770" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f9474af7be0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f9474af4840" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474af45c0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f9474af54a0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f9474af7350" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474af70d0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f9474af30e0" loc="100:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f9474af5d50" loc="85:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f9474aff0e0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f9474affa10" loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f9474b00720" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f9474b004a0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f9474afd5c0" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9474afd340" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f9474afb270" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f9474afa020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474afbc10" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f9474afaaf0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f9474afa870" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f94749c7de0" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f94749c7810" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94749c7b50" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f94749c1ac0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f94749c1840" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f94749be930" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f94749be360" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94749be6a0" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f94749c0740" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f94749bd2c0" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f94749bc920" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94749bcc60" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f94749bd020" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f94749c1070" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f94749c2720" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f94749c3db0" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f94749c2130" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f94749c2480" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f947499c5b0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f947499c330" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f947499b430" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f947499ce20" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f947499b1a0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f9474988820" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f947498a910" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f9474984110" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474986e60" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f9474986070" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f947498d9b0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f947498a190" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f94749880e0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f9474987020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f9474987950" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f94749876d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f9474986790" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f94747c3a90" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f94747ad910" loc="84:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f94747ad340" loc="84:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f94747ad680" loc="84:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f94747ac190" loc="92:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f94747aeb50" loc="76:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f94747af4e0" loc="61:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f94747aaaa0" loc="109:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f94747aa820" loc="109:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f94747b1270" loc="47:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f94747a95c0" loc="116:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f94747a9340" loc="116:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f94747aa020" loc="100:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f94747ac9c0" loc="100:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f94747accf0" loc="100:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f94747b1c40" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f94747b19c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f94747ae2f0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f94747afcd0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f94747ae060" loc="69:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9474765b10" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9474765350" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f9474766b70" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f94747662b0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7f94746c33e0" loc="20:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f94746a9020" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f94746a7ac0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f94746aa780" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f94746a72a0" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f94746a7020" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f94746aa020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f94746a97d0" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f947469b680" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Channel" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <short>&#10; Open or close a channel and retrieve the open status of the channel.</short>
        <long>&#10; Open or close a channel and retrieve the open status of the channel.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <function command="" provided="0" name="open" ref="0x7f9474608e10" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Open the channel.</short>
          <long>&#10; Open the channel.&#10; &#10; @return SUCCESS if the openDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOpen" ref="0x7f9474601d90" loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Determine if the channel is open.</short>
          <long>&#10; Determine if the channel is open.&#10; &#10; @return TRUE if the channel is open, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="openDone" ref="0x7f94746007b0" loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been opened.</short>
          <long>&#10; Notify the caller that the channel has been opened.&#10; &#10; @param error SUCCESS if the channel was opened without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9474600530" loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="closeDone" ref="0x7f94745ff2a0" loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been closed.</short>
          <long>&#10; Notify the caller that the channel has been closed.&#10; &#10; @param error SUCCESS if the channel was closed without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f94745ff020" loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x7f9474601610" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Close the channel.</short>
          <long>&#10; Close the channel.&#10; &#10; @return SUCCESS if the closeDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f94745cdbe0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f94745ccca0" loc="73:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f94745cd350" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f94745cc470" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f94745cb620" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f947456c120" loc="62:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f947450fdb0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f947450fdb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f947450c400" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9474510cf0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f947450e710" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9474510cf0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f947450ea60" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f947450edb0" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f947450c150" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f9474506cf0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9474506020" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9474506370" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f94745066c0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9474506a40" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f947450a2d0" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9474510cf0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f947450b580" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9474510cf0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f947450b8d0" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f947450bc20" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f947450a020" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9474507070" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9474509380" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9475d84600"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f94745096d0" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f94766ce5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9474509a20" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9474509da0" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f9474464d40" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f947441f5b0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f947441fcd0" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f947441ee20" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f947441eba0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f9474420e30" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f947441a840" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9474415760" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f94744192a0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9474419020" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f94744130e0" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9474420020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f9474424c60" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f947441a110" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f947441be30" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f9474419b40" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f947441d590" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9474418b50" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f947441e4c0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9474415020" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9474416c60" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9474414990" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9474414710" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f94766cfa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f9474418390" loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f94744206f0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f947441b020" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f947441dc40" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f94744165c0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9474416340" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f9474414020" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f947441b750" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9475dab020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
