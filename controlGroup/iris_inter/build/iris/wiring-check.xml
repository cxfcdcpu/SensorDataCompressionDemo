<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feda84491c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feda87c6cb0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7feda87c6cb0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7feda87c3dd0"/></to>
    </wire>
    <wire loc="85:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7feda84486d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda82e3bd0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda82e3bd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda82ad140"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7feda8444a80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda7703710"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda7703710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda76914e0"/></to>
    </wire>
    <wire loc="88:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7feda8443020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda77007f0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feda77007f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda76f8b40"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7feda83d1250"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda76fe2b0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feda76fe2b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda7699720"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7feda83c02c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda76fd020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feda76fd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda769a020"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda83d2020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda82e0ca0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feda82e0ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda82ac1d0"/></to>
    </wire>
    <wire loc="93:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda83b9e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda82de020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda82de020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda82ab3f0"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7feda83bfa70"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feda82dec00"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7feda82dec00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feda82aa020"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda83be170"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda82db8f0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feda82db8f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda82a7b40"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7feda83bb020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda82da5f0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feda82da5f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda82a6910"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="time" scoped="" ref="0x7feda83b7250"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda733cbd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda733cbd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feda7b40320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feda839c0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feda8313bd0"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feda8313bd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feda830c620"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7feda748dd80"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7feda7487ce0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda74b5020"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7694e60"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda6ce5420"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7feda7acbb60"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7cf8540"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7dc0dc0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7feda6e4fe60"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7ede3b0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda6e81560"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda6f42b40"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7feda85fe470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7feda8909020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7feda8909020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7feda88078a0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7feda85fc020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7feda79be680"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7feda85fc020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7feda7acb020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7feda85fc020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda87c1b10"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda87c1b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda87b70c0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7feda85fc720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7feda87bfd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7370c60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7feda87bfd50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7805b50"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda87bf020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda861d690"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7feda87b6020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda861d020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7feda87b77a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda82e82e0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7feda87b77a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7feda87b99e0"/></to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7feda87b99e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7feda87ae530"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7feda87b1110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7feda87bfd50"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7feda87a7ad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7feda879c060"/></to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7feda879c060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7feda8710da0"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7feda87adcd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7feda87b1110"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7feda8766cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda8675160"/></to>
    </wire>
    <wire loc="165:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7feda87824e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7feda86e42b0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7feda86e42b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71a3e20"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7feda8775350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7feda86d38f0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7feda86d38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71313f0"/></to>
    </wire>
    <wire loc="185:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7feda876ccb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7feda86c3c10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7feda86c3c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70c43f0"/></to>
    </wire>
    <wire loc="196:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7feda875f060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda865b6d0"/></to>
    </wire>
    <wire loc="143:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7feda879a670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7feda870c2b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7feda870c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72d3e20"/></to>
    </wire>
    <wire loc="183:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7feda876e670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7feda86c58f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7feda86c58f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70cbe20"/></to>
    </wire>
    <wire loc="146:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7feda8798cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7feda8705a20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7feda8705a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda727cc90"/></to>
    </wire>
    <wire loc="157:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7feda878bcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7feda86f2020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7feda86f2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda720a0a0"/></to>
    </wire>
    <wire loc="168:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7feda877fe40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7feda86e1760"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7feda86e1760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71986d0"/></to>
    </wire>
    <wire loc="179:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7feda8772cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7feda86cfda0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7feda86cfda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda7127e20"/></to>
    </wire>
    <wire loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7feda87a0800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7feda87138f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7feda87138f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72e4e20"/></to>
    </wire>
    <wire loc="149:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7feda8793670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7feda8700020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7feda8700020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72713f0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7feda8787670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7feda86ef5d0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7feda86ef5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72009b0"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7feda877b670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7feda86ddc10"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7feda86ddc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda718e0a0"/></to>
    </wire>
    <wire loc="188:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7feda8768670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7feda86bf2b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7feda86bf2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70bae20"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7feda8762b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda8665160"/></to>
    </wire>
    <wire loc="174:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7feda8779cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7feda86d55d0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7feda86d55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda7138e20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7feda8710da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72d96d0"/></to>
    </wire>
    <wire loc="152:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7feda878f020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7feda86fd5d0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7feda86fd5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda7268e20"/></to>
    </wire>
    <wire loc="192:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7feda87644e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda8671c90"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7feda878d670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7feda86f5d30"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7feda86f5d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda7211c90"/></to>
    </wire>
    <wire loc="166:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7feda8781800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7feda86e3440"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7feda86e3440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda719f0a0"/></to>
    </wire>
    <wire loc="177:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7feda8774670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7feda86d1a80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7feda86d1a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda712d6d0"/></to>
    </wire>
    <wire loc="186:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7feda876a020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7feda86c2da0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7feda86c2da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70c06d0"/></to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7feda8799990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7feda870b440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7feda870b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72cf0a0"/></to>
    </wire>
    <wire loc="147:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7feda8796020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7feda8704c10"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7feda8704c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda7279e20"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7feda8789020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7feda86f12b0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7feda86f12b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72063f0"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7feda877d060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7feda86e08f0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7feda86e08f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71959b0"/></to>
    </wire>
    <wire loc="180:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7feda8770020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7feda86cd020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7feda86cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71230a0"/></to>
    </wire>
    <wire loc="139:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7feda879fb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7feda8712a80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7feda8712a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72df0a0"/></to>
    </wire>
    <wire loc="150:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7feda8792990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7feda86ff2b0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7feda86ff2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda726e6d0"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7feda8786990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7feda86ee760"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7feda86ee760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71fde20"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7feda8767990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7feda86be440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7feda86be440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70b60a0"/></to>
    </wire>
    <wire loc="164:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7feda8783020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7feda86e5020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7feda86e5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71a6c90"/></to>
    </wire>
    <wire loc="175:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7feda8776020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7feda86d4760"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7feda86d4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71340a0"/></to>
    </wire>
    <wire loc="184:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7feda876d990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7feda86c4a80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7feda86c4a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70c70a0"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7feda8761e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda8661c90"/></to>
    </wire>
    <wire loc="142:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7feda879b350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7feda870d020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7feda870d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72d69b0"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7feda878e350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7feda86fc760"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7feda86fc760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72640a0"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7feda876f350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7feda86c77a0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7feda86c77a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70cec90"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7feda878c990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7feda86f4e60"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7feda86f4e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda720ee20"/></to>
    </wire>
    <wire loc="167:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7feda8780b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7feda86e25d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7feda86e25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda719b3f0"/></to>
    </wire>
    <wire loc="178:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7feda8773990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7feda86d0c10"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7feda86d0c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda712a9b0"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7feda8769350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7feda86c0020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7feda86c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda70bd9b0"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7feda87af550"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7feda87146b0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7feda87146b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72e79b0"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7feda8795350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7feda8702da0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7feda8702da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72740a0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7feda8788350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7feda86f0440"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7feda86f0440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72036d0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7feda877c350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7feda86dfa80"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7feda86dfa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda7192e20"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7feda8763800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda866b6d0"/></to>
    </wire>
    <wire loc="173:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7feda877a990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7feda86d63f0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7feda86d63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda713bc90"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7feda8785cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7feda86ed8f0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7feda86ed8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda71f90a0"/></to>
    </wire>
    <wire loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7feda879ee40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7feda8711c10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7feda8711c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda72dc3f0"/></to>
    </wire>
    <wire loc="151:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7feda8791cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7feda86fe440"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7feda86fe440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7feda726b9b0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda8806850"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7feda8805de0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7feda88c1a30"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7feda87e5690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7feda7c3fa70"/></to>
    </wire>
    <wire loc="144:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7feda838c5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda82e82e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda830c020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7feda830bd20"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7feda830d9e0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7feda830d9e0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7feda879fb20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7feda8309020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7feda82ebce0"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7feda82ebce0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7feda87a0800"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7feda8308340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7feda82e9020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7feda82e9020"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7feda87af550"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda82ad140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda8285600"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7feda82db2e0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7feda82aabb0"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7feda82aabb0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7feda827f020"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feda82a7b40"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7feda827b880"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feda82ac1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda8282640"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7feda82aa020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feda8280430"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feda82c95b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feda82a49c0"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feda82a49c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feda8262cf0"/></to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda82ab3f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda8281810"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda82d19f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda82a4020"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda82a4020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda8262350"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feda82c3880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7feda82a3600"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feda82a3600"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7feda8261810"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feda82a6910"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda827c020"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7feda82bf650"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7feda82a22f0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7feda82a22f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7feda8260610"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7feda82b57c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda8291e60"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda8291e60"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda8254d80"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda82b4880"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda8289020"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda8289020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda824f270"/></to>
    </wire>
    <wire loc="215:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda8285600"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda7e7c0e0"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7feda82961c0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7feda8259c40"/></to>
    </wire>
    <wire loc="305:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7feda8259c40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7feda7aea3b0"/></to>
    </wire>
    <wire loc="270:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda824f270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda7b38d00"/></to>
    </wire>
    <wire loc="124:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7feda827f020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7feda80a6420"/></to>
    </wire>
    <wire loc="126:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7feda827b880"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda80aa8b0"/></to>
    </wire>
    <wire loc="121:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feda8282640"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda80a96c0"/></to>
    </wire>
    <wire loc="123:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7feda8280430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feda80a8c90"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda829ac90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda825c730"/></to>
    </wire>
    <wire loc="303:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda825c730"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda7aeee80"/></to>
    </wire>
    <wire loc="216:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feda8262cf0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feda7e79a40"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda8281810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda80a8530"/></to>
    </wire>
    <wire loc="269:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda8254d80"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda7b35bb0"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda828e960"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda8255880"/></to>
    </wire>
    <wire loc="307:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda8255880"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7ae0a40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda829b630"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda825f200"/></to>
    </wire>
    <wire loc="304:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda825f200"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda7ae4e70"/></to>
    </wire>
    <wire loc="248:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda8262350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7d7ab60"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda82a98f0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda827fc70"/></to>
    </wire>
    <wire loc="128:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda827fc70"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda80a6b80"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feda8261810"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7feda7e9cba0"/></to>
    </wire>
    <wire loc="125:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feda827c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda80ab280"/></to>
    </wire>
    <wire loc="224:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7feda8260610"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7feda7e05700"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda8290c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda8255020"/></to>
    </wire>
    <wire loc="306:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda8255020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda7ae01e0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7feda82a7530"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7feda827e8c0"/></to>
    </wire>
    <wire loc="129:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7feda827e8c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7feda80a53e0"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda7e7c0e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7feda7e78630"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7feda7aea3b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7feda7ac30d0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7feda82798c0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7feda7ff2d30"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7feda826ce50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda8027390"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feda8027390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda6f3f210"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7feda80a6420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7feda6f9ab00"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7feda80a96c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7feda6f9ce20"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7feda80a8c90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7feda6f9a3e0"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda8270080"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda7f1bc40"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda7f1bc40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda6ed22e0"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7feda826b570"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda8021e00"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda7aeee80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda7ac7b90"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7feda7e79a40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7feda6e57da0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7feda80aa8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7feda6f9c0e0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda80a8530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda6f9bba0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda7b35bb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda6dbf630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7ae0a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda79c2060"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda7ae4e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda7abdc80"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7feda8272420"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7feda7ff3a50"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda80a6b80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda6f993e0"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7feda7e9cba0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7feda7e96020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7feda7e05700"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7feda6e4d3d0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7feda80ab280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7feda6f9eac0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda7b38d00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda6dc36f0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7feda8279190"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7feda7ff2760"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda7ae01e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda7ab9020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7feda80a53e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7feda6f99b40"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda8202470"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda7f1eb20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda7f1eb20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda6ed5100"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81fc340"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81986b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda81fbab0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda7b35bb0"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7feda81f5960"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7aefd90"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7aefd90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7ac8aa0"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda815c820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda7adfdd0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda7adfdd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda79c8c80"/></to>
    </wire>
    <wire loc="116:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda80a38c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7feda821eb70"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda80a48f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7feda809b550"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda80a32b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7feda7fb1770"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda80a5a70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7feda7fb1d80"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feda808c910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda8027390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda808c020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7feda7fb3e00"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda7ff1390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda7f1eb20"/></to>
    </wire>
    <wire loc="154:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7fed2b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7feda7fb40a0"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7fedbe0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7feda7fb49d0"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7fee470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda7fb3020"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7fb0c40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda7ead2f0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feda7ead2f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda6e824a0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7faf5d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda7e9c5d0"/></to>
    </wire>
    <wire loc="114:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda7e9c5d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda7e99120"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda7fafbe0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7f18020"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7f18020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda6ed1590"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda7f18e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7e9b8b0"/></to>
    </wire>
    <wire loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7e9b8b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda7e99730"/></to>
    </wire>
    <wire loc="181:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7eab5a0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7feda8234730"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7eac4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda7ea6bb0"/></to>
    </wire>
    <wire loc="113:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feda7ea6bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda7e9a7c0"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7e97590"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7d7ab60"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7e9a7c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda7e7cba0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feda7e7cba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda7e77120"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7e99120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda7e7a5d0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda7e7a5d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda7e77a50"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda7e99730"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7e7aba0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7e7aba0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda7e760a0"/></to>
    </wire>
    <wire loc="211:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7feda7e78630"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda7e07cc0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda7e07cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda6e4f3a0"/></to>
    </wire>
    <wire loc="212:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7e77120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda7e067e0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feda7e067e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda6e4e4a0"/></to>
    </wire>
    <wire loc="213:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7e77a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda7e05130"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda7e05130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda6e4edd0"/></to>
    </wire>
    <wire loc="214:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda7e760a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7b317e0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7b317e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda6dbc3b0"/></to>
    </wire>
    <wire loc="221:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda7e04e20"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7dfddb0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda7dfddb0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda6e10140"/></to>
    </wire>
    <wire loc="222:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda7e03730"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7eadbe0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda7eadbe0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda6e82d90"/></to>
    </wire>
    <wire loc="223:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7feda7e04080"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7feda7b02c20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7feda7b02c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7feda7afc410"/></to>
    </wire>
    <wire loc="228:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7eacdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7dac6f0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda7dac6f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda6e10a30"/></to>
    </wire>
    <wire loc="237:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7daad30"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7feda8233020"/></to>
    </wire>
    <wire loc="238:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7dab020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7da3ac0"/></to>
    </wire>
    <wire loc="239:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7dab950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7d7a400"/></to>
    </wire>
    <wire loc="240:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7daa0e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81986b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7feda7d755d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7feda7b289b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7d77780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81986b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7d76440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7feda8239380"/></to>
    </wire>
    <wire loc="253:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7d79630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7d59720"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda7d59720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda7d53020"/></to>
    </wire>
    <wire loc="254:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7d77020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7d58060"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda7d58060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda7d53950"/></to>
    </wire>
    <wire loc="259:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7d50760"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7feda821c860"/></to>
    </wire>
    <wire loc="260:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7d53020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7b01a40"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda7b01a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda7afa440"/></to>
    </wire>
    <wire loc="261:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7d53950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7b00400"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda7b00400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda7afad70"/></to>
    </wire>
    <wire loc="262:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7feda7d51120"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7feda7aef5c0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7feda7aef5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7feda7ac82d0"/></to>
    </wire>
    <wire loc="267:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7b2f760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7ae0a40"/></to>
    </wire>
    <wire loc="268:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda7b2e800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7b27590"/></to>
    </wire>
    <wire loc="271:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7feda7b2d760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7feda7b289b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda7b074a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7feda7aefd90"/></to>
    </wire>
    <wire loc="286:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7af8b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7feda821c860"/></to>
    </wire>
    <wire loc="287:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7afa440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7af0460"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda7af0460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7ac9120"/></to>
    </wire>
    <wire loc="288:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7afad70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7af0dd0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda7af0dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7ac9a90"/></to>
    </wire>
    <wire loc="289:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7feda7afc410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7feda7af3610"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7feda7af3610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7feda7aca2e0"/></to>
    </wire>
    <wire loc="301:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7ada1f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7feda82421c0"/></to>
    </wire>
    <wire loc="302:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda7ad92e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda7b35bb0"/></to>
    </wire>
    <wire loc="309:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7feda7ad5110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7feda7b289b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7feda7ad5ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7feda7b289b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7feda7ad48d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7feda7b289b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7ad3470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81986b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81986b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda6fc78a0"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda6fc6830"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda815c820"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7feda6fc2940"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7feda8165130"/></to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <from><interface-ref name="tasklet" scoped="" ref="0x7feda8164740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda6f940f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda80c25a0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda6f97310"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda80a5a70"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda6f96120"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda80a48f0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda6f96a50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda80a32b0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda6f950a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7feda80a38c0"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feda8026150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feda6f3d020"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda80268d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda6f3d7a0"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda6f3c0d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda80241f0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7feda6f3c890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7feda6f412b0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7feda6f3b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda6ed0460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda80c25a0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda6ecf020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda7f18e60"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7feda6e7f7e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7feda7ee2e30"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7feda7ee2e30"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7feda7edea00"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda6e7e410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda6e7cd40"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda6e7cd40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda7edbd10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda6e81bd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda7eac4a0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda6e805d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda7eacdd0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7feda6e80d30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7feda7eab5a0"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7feda7e96cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7e97590"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7feda6e4dd20"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7feda7e04080"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7feda6e4bb00"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7feda8165130"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7feda6e4a5a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7feda7e04e20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7feda6e49020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7feda7e03730"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7feda6e48020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7feda6e48800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7feda6e49800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda6e0f310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7feda7dab020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda6e0c800"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7feda7daad30"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda6e0fc40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7feda7dab950"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda6e0e400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7daa0e0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7feda6e0c060"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7feda7dc2850"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7feda7dc2850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7feda7dbb850"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7feda6e0b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7feda7dbf6a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7feda7dbc6c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda7dc6710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7dc0dc0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda7d5dd60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7feda7d564b0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7feda7d587c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7feda7d51120"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7feda7d5b840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7feda7d54020"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7d57020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda7d518c0"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7feda7d57e00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7feda7d50760"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7feda7d5b270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7feda7d55950"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7feda7d5c880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7feda7d55020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7feda6db72b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda7b2e800"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda6db9020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7b2f760"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7feda6db81e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feda7cfca60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7feda7cfca60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feda7cef7d0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7feda6dba310"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7feda7b2d760"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7feda7cef7d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feda7b54790"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7feda7cf4320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7b62150"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda7cf8540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7cea020"/></to>
    </wire>
    <wire loc="35:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda7cea020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7be0080"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7feda7b5c640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7bb1cf0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda7bab1d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7feda7ceaa10"/></to>
    </wire>
    <wire loc="36:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7feda7ceaa10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda7be0890"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda7b53a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7feda7ce4060"/></to>
    </wire>
    <wire loc="37:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7feda7ce4060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda7bddbc0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda7bddbc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda6d92b80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda7be0080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda6d95020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda7be0890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda6d95830"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda6d8fdd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7c5bc70"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda7c5bc70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7c49020"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7feda6d89190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7c53020"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7c53020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7c442b0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda6d883e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feda7c52520"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda7c52520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feda7c426b0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7feda6d84780"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7feda7c4ea40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7feda7c4ea40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7feda7c3d230"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7feda7ba7490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7feda7b57a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7feda7b40320"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7feda7cf4320"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda7b042b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7feda7afe920"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7feda7b00b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7feda7af95a0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7feda7aff400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7feda7af9d40"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7feda7afe2b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7feda7af8b40"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7feda7b02650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7feda7afdd70"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7feda7b04d30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7feda7afd440"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda79c8c80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda77bb6e0"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feda7ae7940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feda7ac0630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda79c2060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feda77b33a0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7feda7aa7340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7feda7ada1f0"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7feda7aa6110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7feda7ad5110"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7feda7aa6ca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7feda7ad5ca0"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7feda7aa58d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7feda7ad48d0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda7aa4780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda7ad92e0"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7feda7aa91a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda79c2060"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7a9e2e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7ad3470"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7feda7ab9760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7feda79d0e10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7feda79d0e10"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7feda8798cb0"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7feda7ab8b50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7feda79cc060"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7feda79cc060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda799f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7feda7ab1aa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7feda79ccce0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7feda79ccce0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7feda79a0020"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7feda7ab6670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7feda79cb880"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7feda79cb880"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7feda878e350"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7feda7ab5980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7feda79cab10"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7feda79cab10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7feda879a670"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7feda7aab550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7feda79c9e30"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7feda79c9e30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7feda79c1a10"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7feda7aa06b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7feda8165130"/></to>
    </wire>
    <wire loc="112:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7feda7aa8d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7feda77619a0"/></to>
    </wire>
    <wire loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7feda7a0f8b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7feda77bb6e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7feda6cb4610"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7feda79a0020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7feda7992480"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7feda77b33a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7feda776cb60"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7feda79b23d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7feda877c350"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7feda79b1680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7feda877fe40"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7feda79b57f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feda78b5530"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7feda78b5530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feda789a850"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7feda7996ae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7feda7991020"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7feda799e840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7feda7993e00"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda79a11f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda79937e0"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feda799f850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda7991d20"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7feda7973430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda78c9210"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7feda78c9210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7feda6ce39d0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda7971130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda78c87a0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda78c87a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda6ce1020"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7feda798f020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7feda79233e0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7feda79233e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7feda791d350"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7feda7971920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7feda87e8020"/></to>
    </wire>
    <wire loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7feda7950190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7feda7914e50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7feda87e8020"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7feda7919390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7feda8798cb0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7feda7918650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7feda8796020"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7feda7916800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7feda8795350"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7feda7915b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7feda8793670"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7feda78c8020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7feda6ce2850"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda6ce1910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda78c70d0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7feda6cdf120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7feda6ce5a30"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7feda6cdfc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7feda78aed80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7feda789b020"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda78bfb20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda78a3b90"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda78a9650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7feda78955a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda78a9650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7feda7891ba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda78a9650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7feda788c120"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7feda6cb1a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda78bfb20"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7feda6cacdb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7feda78a9650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda77f8410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda78bfb20"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda776ae40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda778dcf0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7feda776f0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda77af200"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda77af200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda7798020"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda7796280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda78bfb20"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7feda76914e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7feda7669b70"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda76ffb20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda769b9e0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda76fc800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7698400"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7feda7694e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7feda7669520"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feda768e940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feda76fb300"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7feda7698d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda768f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7feda7696a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda76904c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7feda768e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7feda734b1e0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7feda768f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7feda7537de0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7feda76904c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7feda75376c0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7feda7536c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7feda768e020"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feda7661430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feda768e940"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feda7534920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feda768e940"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7feda752bcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7feda768e940"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feda7535590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feda7666080"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7feda7535e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7feda7662a40"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7feda7658410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7feda7530e10"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7feda7653530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feda7505150"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7feda7505150"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feda74fe020"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feda7522d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feda7505960"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feda7505960"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feda74fd080"/></to>
    </wire>
    <wire loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7feda7602e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7feda7639d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7feda7604400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7feda75fd0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7feda7532020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7feda7532800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7feda7500d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7feda74fe820"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7feda74fe820"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7feda74b5dd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7feda74fd080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7feda74b45a0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7feda74fe020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7feda74b5630"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda74fc360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda7424bb0"/></to>
    </wire>
    <wire loc="33:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda7424bb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda735ccd0"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda74b0cc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda74fc360"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7feda74b3610"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7feda7492480"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7feda7492480"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7feda7489550"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7feda74b3df0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7feda7492d20"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7feda7492d20"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7feda7489e30"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7feda74b1620"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7feda74915f0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7feda74915f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7feda7488730"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7feda748fdd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7feda7485650"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7feda7490b80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7feda7486470"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7feda748f540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7feda7486d50"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda7484b30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda87bf020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7feda7483980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7feda87e8020"/></to>
    </wire>
    <wire loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7feda73580f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda741ec50"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7feda741ec50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7feda73683c0"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda7365660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7419b30"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda7419b30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7405b90"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7412dc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7feda73fd020"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7feda7410530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7feda73fc850"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda740a650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7feda73f75a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda740a650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7feda73f3ba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7feda740a650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7feda73ee120"/></to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7feda736f410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7feda7419b30"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="63:BaseStationP.nc" safe="">
      <documentation loc="596:ZCompression_new.h">
        <short>*</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7feda7cdb120"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TOne" ref="0x7feda880c410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TOne" ref="0x7feda880c410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TThree" ref="0x7feda880c7b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TThree" ref="0x7feda880c7b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7feda880a0d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.t1" loc="44(BaseStationC.t1):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7feda875b5a0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7feda875b910" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7feda875bc80" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7feda874d9f0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7feda874dd80" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7feda8749170" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7feda87494c0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7feda86b50d0" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7feda86b5460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7feda86b57f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7feda86b5b40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7feda8086210" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7feda807ccc0" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7feda7cdb120" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7feda7cdb120"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7feda7cdb430" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7feda7cd2d30" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7feda7cd2d30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7feda7ccf060" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda7bd6430" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda7bd6430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda7ba5880" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda7ba5880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7feda7ba5bb0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda7b55de0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda7b55de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7feda7804290" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda7804290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7feda7804600" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7feda7808d60" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7feda7808d60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7feda77ef580" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda77ef580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7feda77ef8a0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7feda77ab920" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7feda77ab920"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7feda77a8120" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda77a8120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7feda778c600" loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7feda778c600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7feda778cdd0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7feda778cdd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7feda778b220" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7feda778b220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7feda778ba00" loc="58:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7feda778ba00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7feda778bdd0" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7feda778a630" loc="60:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7feda778a630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7feda87c2210" loc="58:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7feda87c2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87c2590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7feda87c6cb0" loc="57:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7feda87c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feda87c50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7feda87bfd50" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7feda87bfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87be100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda87c1b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda87c1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7feda87bf020" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda87bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7feda87bf3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7feda87bf530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7feda87bf6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7feda87bf850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7feda87bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7feda87b77a0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7feda87b77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87b7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda87b70c0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda87b70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87b7440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7feda87b6020" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7feda87b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7feda87b1110" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7feda87b1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87b1490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7feda87b99e0" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7feda87b99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87b9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7feda87adcd0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7feda87adcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7feda87a7ad0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7feda87a7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87a7e50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87ad340"/>
        <function-ref name="get" scoped="" ref="0x7feda87ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87ad660"/>
        <function-ref name="set" scoped="" ref="0x7feda87ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda87ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7feda87ae530" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7feda87ae530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda87ae8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7feda8766cb0" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7feda8766cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8765610"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87657a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8765930"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8765ac0"/>
        <function-ref name="get" scoped="" ref="0x7feda8765c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8765de0"/>
        <function-ref name="set" scoped="" ref="0x7feda8764020"/>
        <function-ref name="clr" scoped="" ref="0x7feda87641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7feda87824e0" loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7feda87824e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8782860"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87829f0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8782b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8782d10"/>
        <function-ref name="get" scoped="" ref="0x7feda8781020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87811b0"/>
        <function-ref name="set" scoped="" ref="0x7feda8781340"/>
        <function-ref name="clr" scoped="" ref="0x7feda87814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7feda8775350" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7feda8775350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87756d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8775860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87759f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8775b80"/>
        <function-ref name="get" scoped="" ref="0x7feda8775d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8774020"/>
        <function-ref name="set" scoped="" ref="0x7feda87741b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8774340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7feda876ccb0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7feda876ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda876b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda876b230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda876b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda876b550"/>
        <function-ref name="get" scoped="" ref="0x7feda876b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda876b870"/>
        <function-ref name="set" scoped="" ref="0x7feda876ba00"/>
        <function-ref name="clr" scoped="" ref="0x7feda876bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7feda875f060" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7feda875f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda875f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda875f570"/>
        <function-ref name="toggle" scoped="" ref="0x7feda875f700"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda875f890"/>
        <function-ref name="get" scoped="" ref="0x7feda875fa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda875fbb0"/>
        <function-ref name="set" scoped="" ref="0x7feda875fd40"/>
        <function-ref name="clr" scoped="" ref="0x7feda875e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7feda879a670" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7feda879a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda879a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda879ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda879ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8799020"/>
        <function-ref name="get" scoped="" ref="0x7feda87991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8799340"/>
        <function-ref name="set" scoped="" ref="0x7feda87994d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8799660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7feda876e670" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7feda876e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda876e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda876eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda876ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda876d020"/>
        <function-ref name="get" scoped="" ref="0x7feda876d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda876d340"/>
        <function-ref name="set" scoped="" ref="0x7feda876d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda876d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7feda8798cb0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7feda8798cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8797230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87973c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8797550"/>
        <function-ref name="get" scoped="" ref="0x7feda87976e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8797870"/>
        <function-ref name="set" scoped="" ref="0x7feda8797a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8797b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7feda878bcb0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7feda878bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda878a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda878a230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda878a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda878a550"/>
        <function-ref name="get" scoped="" ref="0x7feda878a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda878a870"/>
        <function-ref name="set" scoped="" ref="0x7feda878aa00"/>
        <function-ref name="clr" scoped="" ref="0x7feda878ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7feda877fe40" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7feda877fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda877e1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda877e370"/>
        <function-ref name="toggle" scoped="" ref="0x7feda877e500"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda877e690"/>
        <function-ref name="get" scoped="" ref="0x7feda877e820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda877e9b0"/>
        <function-ref name="set" scoped="" ref="0x7feda877eb40"/>
        <function-ref name="clr" scoped="" ref="0x7feda877ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7feda8772cb0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7feda8772cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8771230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8771550"/>
        <function-ref name="get" scoped="" ref="0x7feda87716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8771870"/>
        <function-ref name="set" scoped="" ref="0x7feda8771a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8771b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7feda87a0800" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7feda87a0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87a0b80"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87a0d10"/>
        <function-ref name="toggle" scoped="" ref="0x7feda879f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda879f1b0"/>
        <function-ref name="get" scoped="" ref="0x7feda879f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda879f4d0"/>
        <function-ref name="set" scoped="" ref="0x7feda879f660"/>
        <function-ref name="clr" scoped="" ref="0x7feda879f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7feda8793670" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7feda8793670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87939f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8793b80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8793d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8792020"/>
        <function-ref name="get" scoped="" ref="0x7feda87921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8792340"/>
        <function-ref name="set" scoped="" ref="0x7feda87924d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8792660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7feda8787670" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7feda8787670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87879f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8787b80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8787d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8786020"/>
        <function-ref name="get" scoped="" ref="0x7feda87861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8786340"/>
        <function-ref name="set" scoped="" ref="0x7feda87864d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8786660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7feda877b670" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7feda877b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda877b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda877bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda877bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda877a020"/>
        <function-ref name="get" scoped="" ref="0x7feda877a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda877a340"/>
        <function-ref name="set" scoped="" ref="0x7feda877a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda877a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7feda8768670" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7feda8768670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87689f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8768b80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8768d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8767020"/>
        <function-ref name="get" scoped="" ref="0x7feda87671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8767340"/>
        <function-ref name="set" scoped="" ref="0x7feda87674d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8767660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7feda8762b20" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7feda8762b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8761020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87611b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8761340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87614d0"/>
        <function-ref name="get" scoped="" ref="0x7feda8761660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87617f0"/>
        <function-ref name="set" scoped="" ref="0x7feda8761980"/>
        <function-ref name="clr" scoped="" ref="0x7feda8761b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7feda8779cb0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7feda8779cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87770a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8777230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87773c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8777550"/>
        <function-ref name="get" scoped="" ref="0x7feda87776e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8777870"/>
        <function-ref name="set" scoped="" ref="0x7feda8777a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8777b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7feda879c060" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7feda879c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda879c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda879c570"/>
        <function-ref name="toggle" scoped="" ref="0x7feda879c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda879c890"/>
        <function-ref name="get" scoped="" ref="0x7feda879ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda879cbb0"/>
        <function-ref name="set" scoped="" ref="0x7feda879cd40"/>
        <function-ref name="clr" scoped="" ref="0x7feda879b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7feda878f020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7feda878f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda878f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda878f530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda878f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda878f850"/>
        <function-ref name="get" scoped="" ref="0x7feda878f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda878fb70"/>
        <function-ref name="set" scoped="" ref="0x7feda878fd00"/>
        <function-ref name="clr" scoped="" ref="0x7feda878e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7feda87644e0" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7feda87644e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8764860"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87649f0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8764b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8764d10"/>
        <function-ref name="get" scoped="" ref="0x7feda8763020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87631b0"/>
        <function-ref name="set" scoped="" ref="0x7feda8763340"/>
        <function-ref name="clr" scoped="" ref="0x7feda87634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7feda878d670" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7feda878d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda878d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda878db80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda878dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda878c020"/>
        <function-ref name="get" scoped="" ref="0x7feda878c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda878c340"/>
        <function-ref name="set" scoped="" ref="0x7feda878c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda878c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7feda8781800" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7feda8781800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8781b80"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8781d10"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8780020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87801b0"/>
        <function-ref name="get" scoped="" ref="0x7feda8780340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87804d0"/>
        <function-ref name="set" scoped="" ref="0x7feda8780660"/>
        <function-ref name="clr" scoped="" ref="0x7feda87807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7feda8774670" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7feda8774670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87749f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8774b80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8774d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8773020"/>
        <function-ref name="get" scoped="" ref="0x7feda87731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8773340"/>
        <function-ref name="set" scoped="" ref="0x7feda87734d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8773660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7feda876a020" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7feda876a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda876a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda876a530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda876a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda876a850"/>
        <function-ref name="get" scoped="" ref="0x7feda876a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda876ab70"/>
        <function-ref name="set" scoped="" ref="0x7feda876ad00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8769020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7feda8799990" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7feda8799990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8799d10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8798020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8798340"/>
        <function-ref name="get" scoped="" ref="0x7feda87984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8798660"/>
        <function-ref name="set" scoped="" ref="0x7feda87987f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8798980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7feda8796020" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7feda8796020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87963a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8796530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87966c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8796850"/>
        <function-ref name="get" scoped="" ref="0x7feda87969e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8796b70"/>
        <function-ref name="set" scoped="" ref="0x7feda8796d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8795020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7feda8789020" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7feda8789020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8789530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87896c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8789850"/>
        <function-ref name="get" scoped="" ref="0x7feda87899e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8789b70"/>
        <function-ref name="set" scoped="" ref="0x7feda8789d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8788020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7feda877d060" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7feda877d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda877d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda877d570"/>
        <function-ref name="toggle" scoped="" ref="0x7feda877d700"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda877d890"/>
        <function-ref name="get" scoped="" ref="0x7feda877da20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda877dbb0"/>
        <function-ref name="set" scoped="" ref="0x7feda877dd40"/>
        <function-ref name="clr" scoped="" ref="0x7feda877c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7feda8770020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7feda8770020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8770530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8770850"/>
        <function-ref name="get" scoped="" ref="0x7feda87709e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8770b70"/>
        <function-ref name="set" scoped="" ref="0x7feda8770d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda876f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7feda879fb20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7feda879fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda879e020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda879e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda879e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda879e4d0"/>
        <function-ref name="get" scoped="" ref="0x7feda879e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda879e7f0"/>
        <function-ref name="set" scoped="" ref="0x7feda879e980"/>
        <function-ref name="clr" scoped="" ref="0x7feda879eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7feda8792990" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7feda8792990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8792e10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8791020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8791340"/>
        <function-ref name="get" scoped="" ref="0x7feda87914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8791660"/>
        <function-ref name="set" scoped="" ref="0x7feda87917f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8791980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7feda8786990" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7feda8786990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8786d10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8785020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8785340"/>
        <function-ref name="get" scoped="" ref="0x7feda87854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8785660"/>
        <function-ref name="set" scoped="" ref="0x7feda87857f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8785980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7feda8767990" loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7feda8767990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8767d10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8766020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8766340"/>
        <function-ref name="get" scoped="" ref="0x7feda87664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8766660"/>
        <function-ref name="set" scoped="" ref="0x7feda87667f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8766980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7feda8783020" loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7feda8783020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87835a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8783730"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87838c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8783a50"/>
        <function-ref name="get" scoped="" ref="0x7feda8783be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8783d70"/>
        <function-ref name="set" scoped="" ref="0x7feda8782020"/>
        <function-ref name="clr" scoped="" ref="0x7feda87821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7feda8776020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7feda8776020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8776530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87766c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8776850"/>
        <function-ref name="get" scoped="" ref="0x7feda87769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8776b70"/>
        <function-ref name="set" scoped="" ref="0x7feda8776d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7feda876d990" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7feda876d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda876dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda876c020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda876c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda876c340"/>
        <function-ref name="get" scoped="" ref="0x7feda876c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda876c660"/>
        <function-ref name="set" scoped="" ref="0x7feda876c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda876c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7feda8761e40" loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7feda8761e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87601e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8760370"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8760500"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8760690"/>
        <function-ref name="get" scoped="" ref="0x7feda8760820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87609b0"/>
        <function-ref name="set" scoped="" ref="0x7feda8760b40"/>
        <function-ref name="clr" scoped="" ref="0x7feda8760cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7feda879b350" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7feda879b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda879b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda879b860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda879b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda879bb80"/>
        <function-ref name="get" scoped="" ref="0x7feda879bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda879a020"/>
        <function-ref name="set" scoped="" ref="0x7feda879a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda879a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7feda878e350" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7feda878e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda878e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda878e860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda878e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda878eb80"/>
        <function-ref name="get" scoped="" ref="0x7feda878ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda878d020"/>
        <function-ref name="set" scoped="" ref="0x7feda878d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda878d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7feda876f350" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7feda876f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda876f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda876f860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda876f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda876fb80"/>
        <function-ref name="get" scoped="" ref="0x7feda876fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda876e020"/>
        <function-ref name="set" scoped="" ref="0x7feda876e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda876e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7feda878c990" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7feda878c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda878cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda878b020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda878b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda878b340"/>
        <function-ref name="get" scoped="" ref="0x7feda878b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda878b660"/>
        <function-ref name="set" scoped="" ref="0x7feda878b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda878b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7feda8780b20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7feda8780b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda877f020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda877f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda877f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda877f4d0"/>
        <function-ref name="get" scoped="" ref="0x7feda877f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda877f7f0"/>
        <function-ref name="set" scoped="" ref="0x7feda877f980"/>
        <function-ref name="clr" scoped="" ref="0x7feda877fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7feda8773990" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7feda8773990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8773d10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8772020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8772340"/>
        <function-ref name="get" scoped="" ref="0x7feda87724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8772660"/>
        <function-ref name="set" scoped="" ref="0x7feda87727f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8772980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7feda8769350" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7feda8769350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87696d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8769860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87699f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8769b80"/>
        <function-ref name="get" scoped="" ref="0x7feda8769d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8768020"/>
        <function-ref name="set" scoped="" ref="0x7feda87681b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8768340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7feda87af550" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7feda87af550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87af8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87afa60"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87afbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87afd80"/>
        <function-ref name="get" scoped="" ref="0x7feda87a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87a01b0"/>
        <function-ref name="set" scoped="" ref="0x7feda87a0340"/>
        <function-ref name="clr" scoped="" ref="0x7feda87a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7feda8795350" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7feda8795350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87956d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8795860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87959f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8795b80"/>
        <function-ref name="get" scoped="" ref="0x7feda8795d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8793020"/>
        <function-ref name="set" scoped="" ref="0x7feda87931b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8793340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7feda8788350" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7feda8788350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87886d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8788860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87889f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8788b80"/>
        <function-ref name="get" scoped="" ref="0x7feda8788d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8787020"/>
        <function-ref name="set" scoped="" ref="0x7feda87871b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8787340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7feda877c350" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7feda877c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda877c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda877c860"/>
        <function-ref name="toggle" scoped="" ref="0x7feda877c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda877cb80"/>
        <function-ref name="get" scoped="" ref="0x7feda877cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda877b020"/>
        <function-ref name="set" scoped="" ref="0x7feda877b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda877b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7feda8763800" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7feda8763800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8763b80"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8763d10"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8762020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87621b0"/>
        <function-ref name="get" scoped="" ref="0x7feda8762340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87624d0"/>
        <function-ref name="set" scoped="" ref="0x7feda8762660"/>
        <function-ref name="clr" scoped="" ref="0x7feda87627f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7feda877a990" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7feda877a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda877ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8779020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8779340"/>
        <function-ref name="get" scoped="" ref="0x7feda87794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8779660"/>
        <function-ref name="set" scoped="" ref="0x7feda87797f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8779980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7feda8785cb0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7feda8785cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8784230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8784550"/>
        <function-ref name="get" scoped="" ref="0x7feda87846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8784870"/>
        <function-ref name="set" scoped="" ref="0x7feda8784a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8784b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7feda879ee40" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7feda879ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda879d1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda879d370"/>
        <function-ref name="toggle" scoped="" ref="0x7feda879d500"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda879d690"/>
        <function-ref name="get" scoped="" ref="0x7feda879d820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda879d9b0"/>
        <function-ref name="set" scoped="" ref="0x7feda879db40"/>
        <function-ref name="clr" scoped="" ref="0x7feda879dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7feda8791cb0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7feda8791cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8790230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8790550"/>
        <function-ref name="get" scoped="" ref="0x7feda87906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8790870"/>
        <function-ref name="set" scoped="" ref="0x7feda8790a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8790b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7feda8712a80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7feda8712a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8712e00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8711020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8711340"/>
        <function-ref name="get" scoped="" ref="0x7feda87114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8711660"/>
        <function-ref name="set" scoped="" ref="0x7feda87117f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8711980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7feda870d020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7feda870d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda870d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda870d530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda870d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda870d850"/>
        <function-ref name="get" scoped="" ref="0x7feda870d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda870db70"/>
        <function-ref name="set" scoped="" ref="0x7feda870dd00"/>
        <function-ref name="clr" scoped="" ref="0x7feda870c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7feda87146b0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7feda87146b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8714a30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8714bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8714d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8713020"/>
        <function-ref name="get" scoped="" ref="0x7feda87131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8713340"/>
        <function-ref name="set" scoped="" ref="0x7feda87134d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8713660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7feda8711c10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7feda8711c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8710020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8710340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87104d0"/>
        <function-ref name="get" scoped="" ref="0x7feda8710660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87107f0"/>
        <function-ref name="set" scoped="" ref="0x7feda8710980"/>
        <function-ref name="clr" scoped="" ref="0x7feda8710b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7feda870c2b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7feda870c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda870c630"/>
        <function-ref name="isInput" scoped="" ref="0x7feda870c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda870c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda870cae0"/>
        <function-ref name="get" scoped="" ref="0x7feda870cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda870ce00"/>
        <function-ref name="set" scoped="" ref="0x7feda870b020"/>
        <function-ref name="clr" scoped="" ref="0x7feda870b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7feda87138f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7feda87138f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8713c70"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8713e00"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8712020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87121b0"/>
        <function-ref name="get" scoped="" ref="0x7feda8712340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87124d0"/>
        <function-ref name="set" scoped="" ref="0x7feda8712660"/>
        <function-ref name="clr" scoped="" ref="0x7feda87127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7feda8710da0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7feda8710da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda870e180"/>
        <function-ref name="isInput" scoped="" ref="0x7feda870e310"/>
        <function-ref name="toggle" scoped="" ref="0x7feda870e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda870e630"/>
        <function-ref name="get" scoped="" ref="0x7feda870e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda870e950"/>
        <function-ref name="set" scoped="" ref="0x7feda870eae0"/>
        <function-ref name="clr" scoped="" ref="0x7feda870ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7feda870b440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7feda870b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda870b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda870b950"/>
        <function-ref name="toggle" scoped="" ref="0x7feda870bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda870bc70"/>
        <function-ref name="get" scoped="" ref="0x7feda870be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda870a020"/>
        <function-ref name="set" scoped="" ref="0x7feda870a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda870a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72e79b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72e79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72e7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72e6020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72e61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72e6340"/>
        <function-ref name="get" scoped="" ref="0x7feda72e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72e6660"/>
        <function-ref name="set" scoped="" ref="0x7feda72e67f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda72e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72e4e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72e4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72e21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72e2350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72e24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72e2670"/>
        <function-ref name="get" scoped="" ref="0x7feda72e2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72e2990"/>
        <function-ref name="set" scoped="" ref="0x7feda72e2b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda72e2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72df0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72df0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72df420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72df5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72df740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72df8d0"/>
        <function-ref name="get" scoped="" ref="0x7feda72dfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72dfbf0"/>
        <function-ref name="set" scoped="" ref="0x7feda72dfd80"/>
        <function-ref name="clr" scoped="" ref="0x7feda72de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72dc3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72dc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72dc770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72dc900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72dca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72dcc20"/>
        <function-ref name="get" scoped="" ref="0x7feda72dcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72db020"/>
        <function-ref name="set" scoped="" ref="0x7feda72db1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda72db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72d96d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72d96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72d9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72d9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72d9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72d8020"/>
        <function-ref name="get" scoped="" ref="0x7feda72d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72d8340"/>
        <function-ref name="set" scoped="" ref="0x7feda72d84d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda72d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72d69b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72d69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72d6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72d5340"/>
        <function-ref name="get" scoped="" ref="0x7feda72d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72d5660"/>
        <function-ref name="set" scoped="" ref="0x7feda72d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda72d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72d3e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72d3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72d21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72d2350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72d24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72d2670"/>
        <function-ref name="get" scoped="" ref="0x7feda72d2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72d2990"/>
        <function-ref name="set" scoped="" ref="0x7feda72d2b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda72d2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72cf0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72cf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72cf420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72cf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72cf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72cf8d0"/>
        <function-ref name="get" scoped="" ref="0x7feda72cfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda72cfbf0"/>
        <function-ref name="set" scoped="" ref="0x7feda72cfd80"/>
        <function-ref name="clr" scoped="" ref="0x7feda72ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7feda8702da0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7feda8702da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8701180"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8701310"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87014a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8701630"/>
        <function-ref name="get" scoped="" ref="0x7feda87017c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8701950"/>
        <function-ref name="set" scoped="" ref="0x7feda8701ae0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8701c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7feda86fe440" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7feda86fe440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86fe7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86fe950"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86feae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86fec70"/>
        <function-ref name="get" scoped="" ref="0x7feda86fee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86fd020"/>
        <function-ref name="set" scoped="" ref="0x7feda86fd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7feda8705a20" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7feda8705a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8705da0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8704020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8704340"/>
        <function-ref name="get" scoped="" ref="0x7feda87044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8704660"/>
        <function-ref name="set" scoped="" ref="0x7feda87047f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8704980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7feda8700020" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7feda8700020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda87003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8700530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda87006c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8700850"/>
        <function-ref name="get" scoped="" ref="0x7feda87009e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8700b70"/>
        <function-ref name="set" scoped="" ref="0x7feda8700d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda86ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7feda86fd5d0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7feda86fd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86fd950"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86fdae0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86fdc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86fde00"/>
        <function-ref name="get" scoped="" ref="0x7feda86fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86fc1b0"/>
        <function-ref name="set" scoped="" ref="0x7feda86fc340"/>
        <function-ref name="clr" scoped="" ref="0x7feda86fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7feda8704c10" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7feda8704c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda8702020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda87021b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8702340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda87024d0"/>
        <function-ref name="get" scoped="" ref="0x7feda8702660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda87027f0"/>
        <function-ref name="set" scoped="" ref="0x7feda8702980"/>
        <function-ref name="clr" scoped="" ref="0x7feda8702b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7feda86ff2b0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7feda86ff2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86ff630"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86ff7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86ff950"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86ffae0"/>
        <function-ref name="get" scoped="" ref="0x7feda86ffc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86ffe00"/>
        <function-ref name="set" scoped="" ref="0x7feda86fe020"/>
        <function-ref name="clr" scoped="" ref="0x7feda86fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7feda86fc760" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7feda86fc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86fcae0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86fcc70"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86fce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86fb020"/>
        <function-ref name="get" scoped="" ref="0x7feda86fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86fb340"/>
        <function-ref name="set" scoped="" ref="0x7feda86fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda727cc90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda727cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda727b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda727b230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda727b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda727b550"/>
        <function-ref name="get" scoped="" ref="0x7feda727b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda727b870"/>
        <function-ref name="set" scoped="" ref="0x7feda727ba00"/>
        <function-ref name="clr" scoped="" ref="0x7feda727bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda7279e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda7279e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72771c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7277350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72774e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7277670"/>
        <function-ref name="get" scoped="" ref="0x7feda7277800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7277990"/>
        <function-ref name="set" scoped="" ref="0x7feda7277b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda7277cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72740a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7274420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72745b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7274740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72748d0"/>
        <function-ref name="get" scoped="" ref="0x7feda7274a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7274bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda7274d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda7273020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72713f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72713f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7271770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7271900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7271a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7271c20"/>
        <function-ref name="get" scoped="" ref="0x7feda7271db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7270020"/>
        <function-ref name="set" scoped="" ref="0x7feda72701b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7270340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda726e6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda726e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda726ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda726ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda726ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda726d020"/>
        <function-ref name="get" scoped="" ref="0x7feda726d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda726d340"/>
        <function-ref name="set" scoped="" ref="0x7feda726d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda726d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda726b9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda726b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda726bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda726a020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda726a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda726a340"/>
        <function-ref name="get" scoped="" ref="0x7feda726a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda726a660"/>
        <function-ref name="set" scoped="" ref="0x7feda726a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda726a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda7268e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda7268e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72671c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7267350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72674e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7267670"/>
        <function-ref name="get" scoped="" ref="0x7feda7267800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7267990"/>
        <function-ref name="set" scoped="" ref="0x7feda7267b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda7267cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72640a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7264420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda72645b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7264740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda72648d0"/>
        <function-ref name="get" scoped="" ref="0x7feda7264a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7264bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda7264d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda7263020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7feda86f2020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7feda86f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86f23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86f2530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86f26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86f2850"/>
        <function-ref name="get" scoped="" ref="0x7feda86f29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86f2b70"/>
        <function-ref name="set" scoped="" ref="0x7feda86f2d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda86f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7feda86ef5d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7feda86ef5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86ef950"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86efae0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86efc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86efe00"/>
        <function-ref name="get" scoped="" ref="0x7feda86ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86ee1b0"/>
        <function-ref name="set" scoped="" ref="0x7feda86ee340"/>
        <function-ref name="clr" scoped="" ref="0x7feda86ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7feda86f5d30" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7feda86f5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86f40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86f4270"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86f4400"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86f4590"/>
        <function-ref name="get" scoped="" ref="0x7feda86f4720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86f48b0"/>
        <function-ref name="set" scoped="" ref="0x7feda86f4a40"/>
        <function-ref name="clr" scoped="" ref="0x7feda86f4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7feda86f12b0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7feda86f12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86f1630"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86f17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86f1950"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86f1ae0"/>
        <function-ref name="get" scoped="" ref="0x7feda86f1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86f1e00"/>
        <function-ref name="set" scoped="" ref="0x7feda86f0020"/>
        <function-ref name="clr" scoped="" ref="0x7feda86f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7feda86ee760" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7feda86ee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86eeae0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86eec70"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86eee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86ed020"/>
        <function-ref name="get" scoped="" ref="0x7feda86ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86ed340"/>
        <function-ref name="set" scoped="" ref="0x7feda86ed4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7feda86f4e60" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7feda86f4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86f3210"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86f33a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86f3530"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86f36c0"/>
        <function-ref name="get" scoped="" ref="0x7feda86f3850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86f39e0"/>
        <function-ref name="set" scoped="" ref="0x7feda86f3b70"/>
        <function-ref name="clr" scoped="" ref="0x7feda86f3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7feda86f0440" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7feda86f0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86f07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86f0950"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86f0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86f0c70"/>
        <function-ref name="get" scoped="" ref="0x7feda86f0e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86ef020"/>
        <function-ref name="set" scoped="" ref="0x7feda86ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7feda86ed8f0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7feda86ed8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86edc70"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86ede00"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86ec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86ec1b0"/>
        <function-ref name="get" scoped="" ref="0x7feda86ec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86ec4d0"/>
        <function-ref name="set" scoped="" ref="0x7feda86ec660"/>
        <function-ref name="clr" scoped="" ref="0x7feda86ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda7211c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda7211c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda72100a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7210230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda72103c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7210550"/>
        <function-ref name="get" scoped="" ref="0x7feda72106e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7210870"/>
        <function-ref name="set" scoped="" ref="0x7feda7210a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda7210b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda720ee20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda720ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda720d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda720d350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda720d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda720d670"/>
        <function-ref name="get" scoped="" ref="0x7feda720d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda720d990"/>
        <function-ref name="set" scoped="" ref="0x7feda720db20"/>
        <function-ref name="clr" scoped="" ref="0x7feda720dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda720a0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda720a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda720a420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda720a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda720a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda720a8d0"/>
        <function-ref name="get" scoped="" ref="0x7feda720aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda720abf0"/>
        <function-ref name="set" scoped="" ref="0x7feda720ad80"/>
        <function-ref name="clr" scoped="" ref="0x7feda7208020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72063f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72063f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7206770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7206900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7206a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7206c20"/>
        <function-ref name="get" scoped="" ref="0x7feda7206db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7205020"/>
        <function-ref name="set" scoped="" ref="0x7feda72051b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7205340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72036d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72036d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7203a50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7203be0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7203d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7202020"/>
        <function-ref name="get" scoped="" ref="0x7feda72021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7202340"/>
        <function-ref name="set" scoped="" ref="0x7feda72024d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7202660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda72009b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda72009b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7200d30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71ff340"/>
        <function-ref name="get" scoped="" ref="0x7feda71ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda71ff660"/>
        <function-ref name="set" scoped="" ref="0x7feda71ff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda71ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71fde20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71fde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71fc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71fc350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71fc4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71fc670"/>
        <function-ref name="get" scoped="" ref="0x7feda71fc800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda71fc990"/>
        <function-ref name="set" scoped="" ref="0x7feda71fcb20"/>
        <function-ref name="clr" scoped="" ref="0x7feda71fccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71f90a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71f90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71f9420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71f95b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71f9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71f98d0"/>
        <function-ref name="get" scoped="" ref="0x7feda71f9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda71f9bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda71f9d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda71f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7feda86e3440" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7feda86e3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86e37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86e3950"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86e3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86e3c70"/>
        <function-ref name="get" scoped="" ref="0x7feda86e3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86e2020"/>
        <function-ref name="set" scoped="" ref="0x7feda86e21b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7feda86e08f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7feda86e08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86e0c70"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86e0e00"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86df020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86df1b0"/>
        <function-ref name="get" scoped="" ref="0x7feda86df340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86df4d0"/>
        <function-ref name="set" scoped="" ref="0x7feda86df660"/>
        <function-ref name="clr" scoped="" ref="0x7feda86df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7feda86e5020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7feda86e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86e53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86e5530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86e56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86e5850"/>
        <function-ref name="get" scoped="" ref="0x7feda86e59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86e5b70"/>
        <function-ref name="set" scoped="" ref="0x7feda86e5d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda86e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7feda86e25d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7feda86e25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86e2950"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86e2ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86e2c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86e2e00"/>
        <function-ref name="get" scoped="" ref="0x7feda86e1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86e11b0"/>
        <function-ref name="set" scoped="" ref="0x7feda86e1340"/>
        <function-ref name="clr" scoped="" ref="0x7feda86e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7feda86dfa80" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7feda86dfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86dfe00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86dd340"/>
        <function-ref name="get" scoped="" ref="0x7feda86dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86dd660"/>
        <function-ref name="set" scoped="" ref="0x7feda86dd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7feda86e42b0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7feda86e42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86e4630"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86e47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86e4950"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86e4ae0"/>
        <function-ref name="get" scoped="" ref="0x7feda86e4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86e4e00"/>
        <function-ref name="set" scoped="" ref="0x7feda86e3020"/>
        <function-ref name="clr" scoped="" ref="0x7feda86e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7feda86e1760" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7feda86e1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86e1ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86e1c70"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86e1e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86e0020"/>
        <function-ref name="get" scoped="" ref="0x7feda86e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86e0340"/>
        <function-ref name="set" scoped="" ref="0x7feda86e04d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7feda86ddc10" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7feda86ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86dc020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86dc4d0"/>
        <function-ref name="get" scoped="" ref="0x7feda86dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7feda86dc980"/>
        <function-ref name="clr" scoped="" ref="0x7feda86dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71a6c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71a6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71a5230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71a53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71a5550"/>
        <function-ref name="get" scoped="" ref="0x7feda71a56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda71a5870"/>
        <function-ref name="set" scoped="" ref="0x7feda71a5a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda71a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71a3e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71a3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71a21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71a2350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71a24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71a2670"/>
        <function-ref name="get" scoped="" ref="0x7feda71a2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda71a2990"/>
        <function-ref name="set" scoped="" ref="0x7feda71a2b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda71a2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda719f0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda719f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda719f420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda719f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda719f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda719f8d0"/>
        <function-ref name="get" scoped="" ref="0x7feda719fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda719fbf0"/>
        <function-ref name="set" scoped="" ref="0x7feda719fd80"/>
        <function-ref name="clr" scoped="" ref="0x7feda719d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda719b3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda719b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda719b770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda719b900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda719ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda719bc20"/>
        <function-ref name="get" scoped="" ref="0x7feda719bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda719a020"/>
        <function-ref name="set" scoped="" ref="0x7feda719a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda719a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71986d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71986d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7198a50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7198be0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7198d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7197020"/>
        <function-ref name="get" scoped="" ref="0x7feda71971b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7197340"/>
        <function-ref name="set" scoped="" ref="0x7feda71974d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7197660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71959b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71959b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7195d30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7194020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7194340"/>
        <function-ref name="get" scoped="" ref="0x7feda71944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7194660"/>
        <function-ref name="set" scoped="" ref="0x7feda71947f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7194980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda7192e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda7192e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71911c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7191350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71914e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7191670"/>
        <function-ref name="get" scoped="" ref="0x7feda7191800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7191990"/>
        <function-ref name="set" scoped="" ref="0x7feda7191b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda7191cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda718e0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda718e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda718e420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda718e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda718e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda718e8d0"/>
        <function-ref name="get" scoped="" ref="0x7feda718ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda718ebf0"/>
        <function-ref name="set" scoped="" ref="0x7feda718ed80"/>
        <function-ref name="clr" scoped="" ref="0x7feda718d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7feda86d4760" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7feda86d4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86d4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86d4c70"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86d4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86d3020"/>
        <function-ref name="get" scoped="" ref="0x7feda86d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86d3340"/>
        <function-ref name="set" scoped="" ref="0x7feda86d34d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7feda86d0c10" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7feda86d0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86cf020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86cf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7feda86cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86cf7f0"/>
        <function-ref name="set" scoped="" ref="0x7feda86cf980"/>
        <function-ref name="clr" scoped="" ref="0x7feda86cfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7feda86d63f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7feda86d63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86d6770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86d6900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86d6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86d6c20"/>
        <function-ref name="get" scoped="" ref="0x7feda86d6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86d5020"/>
        <function-ref name="set" scoped="" ref="0x7feda86d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7feda86d38f0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7feda86d38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86d3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86d3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86d11b0"/>
        <function-ref name="get" scoped="" ref="0x7feda86d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86d14d0"/>
        <function-ref name="set" scoped="" ref="0x7feda86d1660"/>
        <function-ref name="clr" scoped="" ref="0x7feda86d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7feda86cfda0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7feda86cfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86ce180"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86ce310"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86ce4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86ce630"/>
        <function-ref name="get" scoped="" ref="0x7feda86ce7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86ce950"/>
        <function-ref name="set" scoped="" ref="0x7feda86ceae0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86cec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7feda86d55d0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7feda86d55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86d5950"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86d5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86d5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86d5e00"/>
        <function-ref name="get" scoped="" ref="0x7feda86d4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86d41b0"/>
        <function-ref name="set" scoped="" ref="0x7feda86d4340"/>
        <function-ref name="clr" scoped="" ref="0x7feda86d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7feda86d1a80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7feda86d1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86d1e00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86d0340"/>
        <function-ref name="get" scoped="" ref="0x7feda86d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86d0660"/>
        <function-ref name="set" scoped="" ref="0x7feda86d07f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86d0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7feda86cd020" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7feda86cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86cd530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86cd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86cd850"/>
        <function-ref name="get" scoped="" ref="0x7feda86cd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86cdb70"/>
        <function-ref name="set" scoped="" ref="0x7feda86cdd00"/>
        <function-ref name="clr" scoped="" ref="0x7feda86cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda713bc90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda713bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda713a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda713a230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda713a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda713a550"/>
        <function-ref name="get" scoped="" ref="0x7feda713a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda713a870"/>
        <function-ref name="set" scoped="" ref="0x7feda713aa00"/>
        <function-ref name="clr" scoped="" ref="0x7feda713ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda7138e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda7138e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71371c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7137350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71374e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7137670"/>
        <function-ref name="get" scoped="" ref="0x7feda7137800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7137990"/>
        <function-ref name="set" scoped="" ref="0x7feda7137b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda7137cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71340a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7134420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71345b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7134740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71348d0"/>
        <function-ref name="get" scoped="" ref="0x7feda7134a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7134bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda7134d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda7133020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71313f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71313f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7131770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7131900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7131a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7131c20"/>
        <function-ref name="get" scoped="" ref="0x7feda7131db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda712f020"/>
        <function-ref name="set" scoped="" ref="0x7feda712f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda712f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda712d6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda712d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda712da50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda712dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda712dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda712c020"/>
        <function-ref name="get" scoped="" ref="0x7feda712c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda712c340"/>
        <function-ref name="set" scoped="" ref="0x7feda712c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda712c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda712a9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda712a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda712ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7129020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7129340"/>
        <function-ref name="get" scoped="" ref="0x7feda71294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7129660"/>
        <function-ref name="set" scoped="" ref="0x7feda71297f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7129980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda7127e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda7127e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda71261c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7126350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda71264e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7126670"/>
        <function-ref name="get" scoped="" ref="0x7feda7126800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7126990"/>
        <function-ref name="set" scoped="" ref="0x7feda7126b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda7126cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda71230a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda71230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7123420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda71235b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7123740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda71238d0"/>
        <function-ref name="get" scoped="" ref="0x7feda7123a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7123bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda7123d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda7122020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7feda86c4a80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7feda86c4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86c4e00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86c3020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86c31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86c3340"/>
        <function-ref name="get" scoped="" ref="0x7feda86c34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86c3660"/>
        <function-ref name="set" scoped="" ref="0x7feda86c37f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86c3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7feda86c0020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7feda86c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86c0530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86c06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86c0850"/>
        <function-ref name="get" scoped="" ref="0x7feda86c09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86c0b70"/>
        <function-ref name="set" scoped="" ref="0x7feda86c0d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda86bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7feda86c77a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7feda86c77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86c7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86c7cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86c7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86c5020"/>
        <function-ref name="get" scoped="" ref="0x7feda86c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86c5340"/>
        <function-ref name="set" scoped="" ref="0x7feda86c54d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7feda86c3c10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7feda86c3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86c2020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86c21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86c2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86c24d0"/>
        <function-ref name="get" scoped="" ref="0x7feda86c2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86c27f0"/>
        <function-ref name="set" scoped="" ref="0x7feda86c2980"/>
        <function-ref name="clr" scoped="" ref="0x7feda86c2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7feda86bf2b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7feda86bf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86bf630"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86bf7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86bf950"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86bfae0"/>
        <function-ref name="get" scoped="" ref="0x7feda86bfc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86bfe00"/>
        <function-ref name="set" scoped="" ref="0x7feda86be020"/>
        <function-ref name="clr" scoped="" ref="0x7feda86be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7feda86c58f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7feda86c58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86c5c70"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86c5e00"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86c41b0"/>
        <function-ref name="get" scoped="" ref="0x7feda86c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86c44d0"/>
        <function-ref name="set" scoped="" ref="0x7feda86c4660"/>
        <function-ref name="clr" scoped="" ref="0x7feda86c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7feda86c2da0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7feda86c2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86c1180"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86c1310"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86c14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86c1630"/>
        <function-ref name="get" scoped="" ref="0x7feda86c17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86c1950"/>
        <function-ref name="set" scoped="" ref="0x7feda86c1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86c1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7feda86be440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7feda86be440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86be7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86be950"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86beae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86bec70"/>
        <function-ref name="get" scoped="" ref="0x7feda86bee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86bd020"/>
        <function-ref name="set" scoped="" ref="0x7feda86bd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70cec90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70cec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70cd230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70cd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70cd550"/>
        <function-ref name="get" scoped="" ref="0x7feda70cd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70cd870"/>
        <function-ref name="set" scoped="" ref="0x7feda70cda00"/>
        <function-ref name="clr" scoped="" ref="0x7feda70cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70cbe20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70cbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70ca1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70ca350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70ca4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70ca670"/>
        <function-ref name="get" scoped="" ref="0x7feda70ca800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70ca990"/>
        <function-ref name="set" scoped="" ref="0x7feda70cab20"/>
        <function-ref name="clr" scoped="" ref="0x7feda70cacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70c70a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70c70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70c7420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70c75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70c7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70c78d0"/>
        <function-ref name="get" scoped="" ref="0x7feda70c7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70c7bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda70c7d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda70c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70c43f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70c43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70c4770"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70c4900"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70c4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70c4c20"/>
        <function-ref name="get" scoped="" ref="0x7feda70c4db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70c2020"/>
        <function-ref name="set" scoped="" ref="0x7feda70c21b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda70c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70c06d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70c06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70c0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70c0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70c0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70bf020"/>
        <function-ref name="get" scoped="" ref="0x7feda70bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70bf340"/>
        <function-ref name="set" scoped="" ref="0x7feda70bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda70bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70bd9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70bd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70bdd30"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70bc340"/>
        <function-ref name="get" scoped="" ref="0x7feda70bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70bc660"/>
        <function-ref name="set" scoped="" ref="0x7feda70bc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda70bc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70bae20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70bae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70b91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70b9350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70b94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70b9670"/>
        <function-ref name="get" scoped="" ref="0x7feda70b9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70b9990"/>
        <function-ref name="set" scoped="" ref="0x7feda70b9b20"/>
        <function-ref name="clr" scoped="" ref="0x7feda70b9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda70b60a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda70b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda70b6420"/>
        <function-ref name="isInput" scoped="" ref="0x7feda70b65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda70b6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda70b68d0"/>
        <function-ref name="get" scoped="" ref="0x7feda70b6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda70b6bf0"/>
        <function-ref name="set" scoped="" ref="0x7feda70b6d80"/>
        <function-ref name="clr" scoped="" ref="0x7feda70b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda86b6a20" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda86b6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86b6da0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda86a0020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86a01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda86a0340"/>
        <function-ref name="get" scoped="" ref="0x7feda86a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda86a0660"/>
        <function-ref name="set" scoped="" ref="0x7feda86a07f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda86a0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda869b6d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda869b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda869ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda869bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda869bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda869a020"/>
        <function-ref name="get" scoped="" ref="0x7feda869a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda869a340"/>
        <function-ref name="set" scoped="" ref="0x7feda869a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda869a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8695160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8695160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86954e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8695670"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8695800"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8695990"/>
        <function-ref name="get" scoped="" ref="0x7feda8695b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8695cb0"/>
        <function-ref name="set" scoped="" ref="0x7feda8695e40"/>
        <function-ref name="clr" scoped="" ref="0x7feda8694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8691c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8691c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8690230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8690550"/>
        <function-ref name="get" scoped="" ref="0x7feda86906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8690870"/>
        <function-ref name="set" scoped="" ref="0x7feda8690a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8690b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda868b6d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda868b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda868ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda868bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda868bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda868a020"/>
        <function-ref name="get" scoped="" ref="0x7feda868a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda868a340"/>
        <function-ref name="set" scoped="" ref="0x7feda868a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda868a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8685160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8685160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86854e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8685670"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8685800"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8685990"/>
        <function-ref name="get" scoped="" ref="0x7feda8685b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8685cb0"/>
        <function-ref name="set" scoped="" ref="0x7feda8685e40"/>
        <function-ref name="clr" scoped="" ref="0x7feda8684020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8681c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8681c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8680230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8680550"/>
        <function-ref name="get" scoped="" ref="0x7feda86806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8680870"/>
        <function-ref name="set" scoped="" ref="0x7feda8680a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8680b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda867b6d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda867b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda867ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda867bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda867bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda867a020"/>
        <function-ref name="get" scoped="" ref="0x7feda867a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda867a340"/>
        <function-ref name="set" scoped="" ref="0x7feda867a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda867a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8675160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8675160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86754e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8675670"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8675800"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8675990"/>
        <function-ref name="get" scoped="" ref="0x7feda8675b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8675cb0"/>
        <function-ref name="set" scoped="" ref="0x7feda8675e40"/>
        <function-ref name="clr" scoped="" ref="0x7feda8674020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8671c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8671c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8670230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86703c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8670550"/>
        <function-ref name="get" scoped="" ref="0x7feda86706e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8670870"/>
        <function-ref name="set" scoped="" ref="0x7feda8670a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8670b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda866b6d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda866b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda866ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda866bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda866bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda866a020"/>
        <function-ref name="get" scoped="" ref="0x7feda866a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda866a340"/>
        <function-ref name="set" scoped="" ref="0x7feda866a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda866a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8665160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8665160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86654e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8665670"/>
        <function-ref name="toggle" scoped="" ref="0x7feda8665800"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8665990"/>
        <function-ref name="get" scoped="" ref="0x7feda8665b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8665cb0"/>
        <function-ref name="set" scoped="" ref="0x7feda8665e40"/>
        <function-ref name="clr" scoped="" ref="0x7feda8664020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda8661c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda8661c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda86600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8660230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda86603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8660550"/>
        <function-ref name="get" scoped="" ref="0x7feda86606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8660870"/>
        <function-ref name="set" scoped="" ref="0x7feda8660a00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8660b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7feda865b6d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7feda865b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda865ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7feda865bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda865bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda865a020"/>
        <function-ref name="get" scoped="" ref="0x7feda865a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda865a340"/>
        <function-ref name="set" scoped="" ref="0x7feda865a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda865a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda861d020" loc="61:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda861d020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda861d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7feda861d690" loc="62:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda861d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7feda861da10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7feda861dba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7feda861dd30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7feda861c020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7feda861c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7feda85fc720" loc="60:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7feda85fc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda85fcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7feda87c3dd0" loc="57:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7feda87c3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feda85fe180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7feda85fc020" loc="59:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7feda85fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda85fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7feda85fe470" loc="58:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7feda85fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda85fe7f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feda85fe980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feda85feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7feda88b8e10" loc="48:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7feda88b8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda88c31c0"/>
        <function-ref name="runTask" scoped="" ref="0x7feda88c3350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7feda8909020" loc="47:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7feda8909020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda89093a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feda8909530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feda89096c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7feda8806850" loc="56:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7feda8806850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda8806bd0"/>
        <function-ref name="runTask" scoped="" ref="0x7feda8806d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7feda8805de0" loc="57:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7feda8805de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7feda8804180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7feda88078a0" loc="55:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7feda88078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda8807c20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7feda8807db0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7feda8806020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7feda87e5690" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7feda87e5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7feda87e5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7feda88c1a30" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7feda88c1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7feda88c1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7feda87e8020" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7feda87e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7feda87e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7feda84491c0" loc="65:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7feda84491c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7feda8449540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7feda8444a80" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7feda8444a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda8444e00"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda8448020"/>
        <function-ref name="start" scoped="" ref="0x7feda84481b0"/>
        <function-ref name="stop" scoped="" ref="0x7feda8448340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7feda83bb020" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7feda83bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda83bb3a0"/>
        <function-ref name="source" scoped="" ref="0x7feda83bb530"/>
        <function-ref name="address" scoped="" ref="0x7feda83bb6c0"/>
        <function-ref name="destination" scoped="" ref="0x7feda83bb850"/>
        <function-ref name="setSource" scoped="" ref="0x7feda83bb9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda83bbb70"/>
        <function-ref name="type" scoped="" ref="0x7feda83bbd00"/>
        <function-ref name="setType" scoped="" ref="0x7feda83b8020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda83b81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda83b8340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda83b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7feda84486d0" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7feda84486d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda8448a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda8448be0"/>
        <function-ref name="start" scoped="" ref="0x7feda8448d70"/>
        <function-ref name="stop" scoped="" ref="0x7feda8447020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7feda83be170" loc="76:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda83be170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda83be4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda83be680"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda83be810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda83be9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda83beb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7feda83b9e40" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda83b9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda83bf1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7feda838c5d0" loc="144:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7feda838c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda838c950"/>
        <function-ref name="runTask" scoped="" ref="0x7feda838cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="time" ref="0x7feda83b7250" loc="81:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="time" scoped="" ref="0x7feda83b7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda83aa6e0"/>
        <function-ref name="fired" scoped="" ref="0x7feda83b6c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda83aca70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda83ac5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7feda83a9020"/>
        <function-ref name="gett0" scoped="" ref="0x7feda83aab60"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda83ac170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda83b7e40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda83aa0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda83b6340"/>
        <function-ref name="stop" scoped="" ref="0x7feda83b6810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7feda83d1250" loc="70:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7feda83d1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda83d15d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda83d1760"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda83d18f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda83d1a80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda83d1c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7feda83d2020" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda83d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda83d23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda83d2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda83d26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda83d2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda83d29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feda839c0d0" loc="82:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda839c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda839c550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda839c6e0"/>
        <function-ref name="led1On" scoped="" ref="0x7feda839c870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda839ca00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda839cb90"/>
        <function-ref name="get" scoped="" ref="0x7feda839cd20"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda83a8020"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda83a8660"/>
        <function-ref name="set" scoped="" ref="0x7feda83a81b0"/>
        <function-ref name="led0On" scoped="" ref="0x7feda83a8340"/>
        <function-ref name="led2On" scoped="" ref="0x7feda83a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7feda8443020" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7feda8443020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda84433a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda8443530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda84436c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda8443850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda84439e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7feda83c02c0" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7feda83c02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda83c0640"/>
        <function-ref name="source" scoped="" ref="0x7feda83c07d0"/>
        <function-ref name="address" scoped="" ref="0x7feda83c0960"/>
        <function-ref name="destination" scoped="" ref="0x7feda83c0af0"/>
        <function-ref name="setSource" scoped="" ref="0x7feda83c0c80"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda83c0e10"/>
        <function-ref name="type" scoped="" ref="0x7feda83da020"/>
        <function-ref name="setType" scoped="" ref="0x7feda83da1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda83da340"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda83da4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda83da660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7feda83bfa70" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7feda83bfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda83bfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7feda8313bd0" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda8313bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda8310020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda83101b0"/>
        <function-ref name="led1On" scoped="" ref="0x7feda8310340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda83104d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda8310660"/>
        <function-ref name="get" scoped="" ref="0x7feda83107f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda8310980"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda830f020"/>
        <function-ref name="set" scoped="" ref="0x7feda8310b10"/>
        <function-ref name="led0On" scoped="" ref="0x7feda8310ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7feda8310e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7feda830bd20" loc="50:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7feda830bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda830a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda830a270"/>
        <function-ref name="toggle" scoped="" ref="0x7feda830a400"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda830a590"/>
        <function-ref name="get" scoped="" ref="0x7feda830a720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda830a8b0"/>
        <function-ref name="set" scoped="" ref="0x7feda830aa40"/>
        <function-ref name="clr" scoped="" ref="0x7feda830abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda830c020" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda830c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda830c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7feda8309020" loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7feda8309020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda83093a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8309530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda83096c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8309850"/>
        <function-ref name="get" scoped="" ref="0x7feda83099e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8309b70"/>
        <function-ref name="set" scoped="" ref="0x7feda8309d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda8308020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7feda830c620" loc="47:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda830c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda830c9a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda830cb30"/>
        <function-ref name="led1On" scoped="" ref="0x7feda830ccc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda830ce50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda830b020"/>
        <function-ref name="get" scoped="" ref="0x7feda830b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda830b340"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda830b980"/>
        <function-ref name="set" scoped="" ref="0x7feda830b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7feda830b660"/>
        <function-ref name="led2On" scoped="" ref="0x7feda830b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7feda8308340" loc="52:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7feda8308340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda83086c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda8308850"/>
        <function-ref name="toggle" scoped="" ref="0x7feda83089e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda8308b70"/>
        <function-ref name="get" scoped="" ref="0x7feda8308d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda8307020"/>
        <function-ref name="set" scoped="" ref="0x7feda83071b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda8307340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7feda830d9e0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7feda830d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda830dd60"/>
        <function-ref name="isInput" scoped="" ref="0x7feda82eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda82eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda82eb340"/>
        <function-ref name="get" scoped="" ref="0x7feda82eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda82eb660"/>
        <function-ref name="set" scoped="" ref="0x7feda82eb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda82eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7feda82ebce0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7feda82ebce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda82ea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda82ea230"/>
        <function-ref name="toggle" scoped="" ref="0x7feda82ea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda82ea550"/>
        <function-ref name="get" scoped="" ref="0x7feda82ea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda82ea870"/>
        <function-ref name="set" scoped="" ref="0x7feda82eaa00"/>
        <function-ref name="clr" scoped="" ref="0x7feda82eab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7feda82e82e0" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda82e82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda82e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7feda82e9020" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7feda82e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda82e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda82e9530"/>
        <function-ref name="toggle" scoped="" ref="0x7feda82e96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda82e9850"/>
        <function-ref name="get" scoped="" ref="0x7feda82e99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda82e9b70"/>
        <function-ref name="set" scoped="" ref="0x7feda82e9d00"/>
        <function-ref name="clr" scoped="" ref="0x7feda82e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda82e3bd0" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda82e3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda82e0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda82e01b0"/>
        <function-ref name="start" scoped="" ref="0x7feda82e0340"/>
        <function-ref name="stop" scoped="" ref="0x7feda82e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feda82db2e0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7feda82db2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda82db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda82db8f0" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda82db8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda82dbc70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda82dbe00"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda82da020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda82da1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda82da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda82e0ca0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda82e0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda82df0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda82df230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda82df3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda82df550"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda82df6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feda82dec00" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7feda82dec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feda82c95b0" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7feda82c95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feda82c9930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feda82c9ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feda82c9c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feda82c9de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda82de020" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda82de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feda82d19f0" loc="51:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda82d19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda82d1d70"/>
        <function-ref name="noAck" scoped="" ref="0x7feda82d7020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda82d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feda82c3880" loc="53:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7feda82c3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feda82c3c00"/>
        <function-ref name="setRetries" scoped="" ref="0x7feda82c3d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7feda82d0020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feda82d01b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feda82d0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda82da5f0" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda82da5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda82da970"/>
        <function-ref name="source" scoped="" ref="0x7feda82dab00"/>
        <function-ref name="address" scoped="" ref="0x7feda82dac90"/>
        <function-ref name="destination" scoped="" ref="0x7feda82dae20"/>
        <function-ref name="setSource" scoped="" ref="0x7feda82d8020"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda82d81b0"/>
        <function-ref name="type" scoped="" ref="0x7feda82d8340"/>
        <function-ref name="setType" scoped="" ref="0x7feda82d84d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda82d8660"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda82d87f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda82d8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7feda82bf650" loc="54:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7feda82bf650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7feda82bf9d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda82bfb60"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda82bfcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7feda82b57c0" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7feda82b57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda82c2d50"/>
        <function-ref name="clear" scoped="" ref="0x7feda82bd4c0"/>
        <function-ref name="isValid" scoped="" ref="0x7feda82c2620"/>
        <function-ref name="set" scoped="" ref="0x7feda82bdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feda82b4880" loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda82b4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda82b2020"/>
        <function-ref name="clear" scoped="" ref="0x7feda82b2750"/>
        <function-ref name="isValid" scoped="" ref="0x7feda82b37c0"/>
        <function-ref name="set" scoped="" ref="0x7feda82b2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda82ad140" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda82ad140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda82ad4c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda82ad650"/>
        <function-ref name="start" scoped="" ref="0x7feda82ad7e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda82ad970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7feda82961c0" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7feda82961c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda8295910"/>
        <function-ref name="get" scoped="" ref="0x7feda82953c0"/>
        <function-ref name="isSet" scoped="" ref="0x7feda8296df0"/>
        <function-ref name="set" scoped="" ref="0x7feda8295e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feda8289020" loc="71:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda8289020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda82885a0"/>
        <function-ref name="clear" scoped="" ref="0x7feda8288cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7feda8289e30"/>
        <function-ref name="set" scoped="" ref="0x7feda8287460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feda82aabb0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7feda82aabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda82a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda82a7b40" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda82a7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda82a6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda82a61b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda82a6340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda82a64d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda82a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda82ac1d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda82ac1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda82ac550"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda82ac6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda82ac870"/>
        <function-ref name="cancel" scoped="" ref="0x7feda82aca00"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda82acb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feda82aa020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7feda82aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7feda829ac90" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda829ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda82983c0"/>
        <function-ref name="get" scoped="" ref="0x7feda8299e30"/>
        <function-ref name="isSet" scoped="" ref="0x7feda82998e0"/>
        <function-ref name="set" scoped="" ref="0x7feda8298910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feda82a49c0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7feda82a49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feda82a4d40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feda82a3020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feda82a31b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feda82a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda82ab3f0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda82ab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82ab770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7feda8291e60" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda8291e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda828c3f0"/>
        <function-ref name="clear" scoped="" ref="0x7feda828cb20"/>
        <function-ref name="isValid" scoped="" ref="0x7feda828dca0"/>
        <function-ref name="set" scoped="" ref="0x7feda828b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7feda828e960" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda828e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda82915e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7feda829b630" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda829b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda82a1e70"/>
        <function-ref name="get" scoped="" ref="0x7feda82a1920"/>
        <function-ref name="isSet" scoped="" ref="0x7feda82a13d0"/>
        <function-ref name="set" scoped="" ref="0x7feda829a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feda82a4020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda82a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda82a43a0"/>
        <function-ref name="noAck" scoped="" ref="0x7feda82a4530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda82a46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7feda82a98f0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda82a98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82a9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feda82a3600" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7feda82a3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feda82a3980"/>
        <function-ref name="setRetries" scoped="" ref="0x7feda82a3b10"/>
        <function-ref name="getRetries" scoped="" ref="0x7feda82a3ca0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feda82a3e30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feda82a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda82a6910" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda82a6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda82a6c90"/>
        <function-ref name="source" scoped="" ref="0x7feda82a6e20"/>
        <function-ref name="address" scoped="" ref="0x7feda82a5020"/>
        <function-ref name="destination" scoped="" ref="0x7feda82a51b0"/>
        <function-ref name="setSource" scoped="" ref="0x7feda82a5340"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda82a54d0"/>
        <function-ref name="type" scoped="" ref="0x7feda82a5660"/>
        <function-ref name="setType" scoped="" ref="0x7feda82a57f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda82a5980"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda82a5b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda82a5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7feda82a22f0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7feda82a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7feda82a2770"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda82a2900"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda82a2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feda8290c70" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda8290c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feda8292020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7feda82a7530" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7feda82a7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82a78b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda8285600" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda8285600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda8285980"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda8285b10"/>
        <function-ref name="start" scoped="" ref="0x7feda8285ca0"/>
        <function-ref name="stop" scoped="" ref="0x7feda8285e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7feda8259c40" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7feda8259c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda82573c0"/>
        <function-ref name="get" scoped="" ref="0x7feda8258df0"/>
        <function-ref name="isSet" scoped="" ref="0x7feda82588a0"/>
        <function-ref name="set" scoped="" ref="0x7feda8257910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7feda82798c0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7feda82798c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda8279c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7feda826ce50" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7feda826ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda8271310"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda82714a0"/>
        <function-ref name="request" scoped="" ref="0x7feda8271630"/>
        <function-ref name="granted" scoped="" ref="0x7feda82717c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda8271950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feda827f020" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7feda827f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda827f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda8282640" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda8282640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda82829c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda8282b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda8282ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda8282e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda8281030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feda8280430" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7feda8280430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda82807b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7feda8270080" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda8270080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7feda8270400"/>
        <function-ref name="address" scoped="" ref="0x7feda8270590"/>
        <function-ref name="destination" scoped="" ref="0x7feda8270720"/>
        <function-ref name="setSource" scoped="" ref="0x7feda82708b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda8270a40"/>
        <function-ref name="pan" scoped="" ref="0x7feda8270bd0"/>
        <function-ref name="setPan" scoped="" ref="0x7feda8270d60"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda826b020"/>
        <function-ref name="localPan" scoped="" ref="0x7feda826b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7feda826b570" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7feda826b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda826b8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda826ba80"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda826bc10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda826bda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda8262020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7feda825c730" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda825c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda825be70"/>
        <function-ref name="get" scoped="" ref="0x7feda825b920"/>
        <function-ref name="isSet" scoped="" ref="0x7feda825b3d0"/>
        <function-ref name="set" scoped="" ref="0x7feda82593f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feda8262cf0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7feda8262cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feda82610a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feda8261230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feda82613c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feda8261550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7feda827b880" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7feda827b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda827bc00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda827bd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda827a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda827a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda827a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda8281810" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda8281810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda8281b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7feda8254d80" loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda8254d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda8252750"/>
        <function-ref name="clear" scoped="" ref="0x7feda8252e80"/>
        <function-ref name="isValid" scoped="" ref="0x7feda8252020"/>
        <function-ref name="set" scoped="" ref="0x7feda82505d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7feda8255880" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda8255880"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda8254500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7feda825f200" loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda825f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda825e910"/>
        <function-ref name="get" scoped="" ref="0x7feda825e3c0"/>
        <function-ref name="isSet" scoped="" ref="0x7feda825fe30"/>
        <function-ref name="set" scoped="" ref="0x7feda825ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feda8262350" loc="68:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda8262350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda82626d0"/>
        <function-ref name="noAck" scoped="" ref="0x7feda8262860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda82629f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7feda8272420" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7feda8272420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda82727a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda8272930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda8272ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda8272c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda8272de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7feda827fc70" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda827fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda827e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feda8261810" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7feda8261810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feda8261b90"/>
        <function-ref name="setRetries" scoped="" ref="0x7feda8261d20"/>
        <function-ref name="getRetries" scoped="" ref="0x7feda8260020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feda82601b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feda8260340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7feda8260610" loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7feda8260610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7feda8260990"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda8260b20"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda8260cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda827c020" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda827c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda827c3a0"/>
        <function-ref name="source" scoped="" ref="0x7feda827c530"/>
        <function-ref name="address" scoped="" ref="0x7feda827c6c0"/>
        <function-ref name="destination" scoped="" ref="0x7feda827c850"/>
        <function-ref name="setSource" scoped="" ref="0x7feda827c9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda827cb70"/>
        <function-ref name="type" scoped="" ref="0x7feda827cd00"/>
        <function-ref name="setType" scoped="" ref="0x7feda827b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda827b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda827b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda827b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feda824f270" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda824f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda824e800"/>
        <function-ref name="clear" scoped="" ref="0x7feda824c020"/>
        <function-ref name="isValid" scoped="" ref="0x7feda824e0d0"/>
        <function-ref name="set" scoped="" ref="0x7feda824c750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7feda8279190" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7feda8279190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda8279510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feda8255020" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda8255020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feda82553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7feda827e8c0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7feda827e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda827ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7feda821c860" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7feda821c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7feda821cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7feda82319f0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7feda82319f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7feda8231d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7feda821eb70" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7feda821eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda822b020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7feda822b1b0"/>
        <function-ref name="source" scoped="" ref="0x7feda822b340"/>
        <function-ref name="destination" scoped="" ref="0x7feda822b4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7feda822b660"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda822b7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda822b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7feda82265d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7feda82265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7feda8226950"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7feda8226ae0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7feda8226c70"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7feda8226e00"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7feda8230020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7feda81fc340" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81fc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda81fc6c0"/>
        <function-ref name="wait" scoped="" ref="0x7feda81fc850"/>
        <function-ref name="cancel" scoped="" ref="0x7feda81fc9e0"/>
        <function-ref name="isFree" scoped="" ref="0x7feda81fcb70"/>
        <function-ref name="getNow" scoped="" ref="0x7feda81fcd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7feda81f5960" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7feda81f5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda81f5ce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda81f5e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda81fb030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda81fb1c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda81fb350"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda81fb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7feda81fbab0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda81fbab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda81f4170"/>
        <function-ref name="clear" scoped="" ref="0x7feda81f48a0"/>
        <function-ref name="isValid" scoped="" ref="0x7feda81faa00"/>
        <function-ref name="set" scoped="" ref="0x7feda81f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7feda82421c0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7feda82421c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda8242540"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda82426d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda8242860"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7feda82429f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7feda8242b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7feda82323c0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7feda82323c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7feda8232740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7feda8239380" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7feda8239380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7feda8239700"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7feda8239890"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7feda8239a20"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7feda8239bb0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7feda8239d40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7feda8247020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7feda82471b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7feda8247340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7feda8202470" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda8202470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7feda82027f0"/>
        <function-ref name="getDSN" scoped="" ref="0x7feda8202980"/>
        <function-ref name="setFCF" scoped="" ref="0x7feda8202b10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7feda8202ca0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7feda8202e30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7feda821d020"/>
        <function-ref name="setDSN" scoped="" ref="0x7feda821d1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7feda821d340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7feda821d4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7feda821d660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7feda821d7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7feda821d980"/>
        <function-ref name="localAddr" scoped="" ref="0x7feda821db10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7feda821dda0"/>
        <function-ref name="localPan" scoped="" ref="0x7feda821b020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7feda821b1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7feda821b340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7feda821b4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7feda821b660"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda821b7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7feda821b980"/>
        <function-ref name="getFCF" scoped="" ref="0x7feda821bb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7feda821bca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7feda821be30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7feda8201020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7feda8234730" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7feda8234730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7feda8234ab0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7feda8234c40"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7feda8234dd0"/>
        <function-ref name="getSender" scoped="" ref="0x7feda8241020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7feda8233020" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7feda8233020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7feda82333a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7feda8233530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7feda82336c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7feda8233850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7feda81986b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda81986b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda8198a50"/>
        <function-ref name="wait" scoped="" ref="0x7feda8198be0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda8198d70"/>
        <function-ref name="isFree" scoped="" ref="0x7feda815c020"/>
        <function-ref name="getNow" scoped="" ref="0x7feda815c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7feda815c820" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda815c820"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7feda83ff850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda8158090"/>
        <function-ref name="fired" scoped="" ref="0x7feda815a090"/>
        <function-ref name="startAt" scoped="" ref="0x7feda815aa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda815a550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda8158550"/>
        <function-ref name="start" scoped="" ref="0x7feda815b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7feda815bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7feda6fc78a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda6fc78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda6fc7c40"/>
        <function-ref name="wait" scoped="" ref="0x7feda6fc7dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6fc6020"/>
        <function-ref name="isFree" scoped="" ref="0x7feda6fc61b0"/>
        <function-ref name="getNow" scoped="" ref="0x7feda6fc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7feda6fc6830" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda6fc6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7feda83ff850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda6fc2090"/>
        <function-ref name="fired" scoped="" ref="0x7feda6fc3090"/>
        <function-ref name="startAt" scoped="" ref="0x7feda6fc3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda6fc3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda6fc2550"/>
        <function-ref name="start" scoped="" ref="0x7feda6fc56a0"/>
        <function-ref name="stop" scoped="" ref="0x7feda6fc5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7feda6fc2940" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7feda6fc2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7feda6fc2cc0"/>
        <function-ref name="suspend" scoped="" ref="0x7feda6fc2e50"/>
        <function-ref name="resume" scoped="" ref="0x7feda6fc1020"/>
        <function-ref name="run" scoped="" ref="0x7feda6fc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tasklet" ref="0x7feda8164740" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tasklet" scoped="" ref="0x7feda8164740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda8164ac0"/>
        <function-ref name="runTask" scoped="" ref="0x7feda8164c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7feda8165130" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7feda8165130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7feda81654b0"/>
        <function-ref name="suspend" scoped="" ref="0x7feda8165640"/>
        <function-ref name="resume" scoped="" ref="0x7feda81657d0"/>
        <function-ref name="run" scoped="" ref="0x7feda8165960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda80a48f0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda80a48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda80a4c70"/>
        <function-ref name="cancel" scoped="" ref="0x7feda80a4e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda80a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda80a32b0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda80a32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda80a3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feda80a6420" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7feda80a6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda80a67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda80aa8b0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda80aa8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda80aac30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda80aadc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda80a9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda80a91b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda80a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda80a96c0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda80a96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda80a9a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda80a9bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda80a9d80"/>
        <function-ref name="cancel" scoped="" ref="0x7feda80a8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda80a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feda80a8c90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7feda80a8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda80a60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda80a5a70" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda80a5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda80a5df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda80a4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda80a41b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda80a4340"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda80a44d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda80a4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda80a38c0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda80a38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda80a3c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7feda80a3dd0"/>
        <function-ref name="source" scoped="" ref="0x7feda80a2020"/>
        <function-ref name="destination" scoped="" ref="0x7feda80a21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7feda80a2340"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda80a24d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda80a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda80a8530" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda80a8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda80a88d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7feda80a6b80" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda80a6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda80a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda80ab280" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda80ab280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda80ab600"/>
        <function-ref name="source" scoped="" ref="0x7feda80ab790"/>
        <function-ref name="address" scoped="" ref="0x7feda80ab920"/>
        <function-ref name="destination" scoped="" ref="0x7feda80abab0"/>
        <function-ref name="setSource" scoped="" ref="0x7feda80abc40"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda80abdd0"/>
        <function-ref name="type" scoped="" ref="0x7feda80aa020"/>
        <function-ref name="setType" scoped="" ref="0x7feda80aa1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda80aa340"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda80aa4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda80aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7feda80a53e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7feda80a53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda80a5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda6f96a50" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda6f96a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6f96dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda6f96120" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda6f96120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6f964a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6f96630"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6f967c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feda6f9ab00" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7feda6f9ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda6f99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda6f9c0e0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda6f9c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6f9c460"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6f9c5f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda6f9c780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6f9c910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6f9caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda6f9ce20" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda6f9ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6f9b1e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda6f9b370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6f9b500"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6f9b690"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6f9b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7feda6f9a3e0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7feda6f9a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6f9a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda6fa1d00" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda6fa1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6f9e0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6f9e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6f9e3c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6f9e550"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda6f9e6e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda6f9e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda6f950a0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda6f950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda6f95520"/>
        <function-ref name="checkFrame" scoped="" ref="0x7feda6f956b0"/>
        <function-ref name="source" scoped="" ref="0x7feda6f95840"/>
        <function-ref name="destination" scoped="" ref="0x7feda6f959d0"/>
        <function-ref name="setSource" scoped="" ref="0x7feda6f95b60"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda6f95cf0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda6f95e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7feda6f940f0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda6f940f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7feda6f94470"/>
        <function-ref name="changed" scoped="" ref="0x7feda6f94600"/>
        <function-ref name="amGroup" scoped="" ref="0x7feda6f94790"/>
        <function-ref name="setAddress" scoped="" ref="0x7feda6f94920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda6f97310" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda6f97310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6f97690"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6f97820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6f979b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6f97b40"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda6f97cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda6f97e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda6f9bba0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda6f9bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6f9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7feda6f993e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7feda6f993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6f99780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda6f9eac0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda6f9eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda6f9ee40"/>
        <function-ref name="source" scoped="" ref="0x7feda6f9d020"/>
        <function-ref name="address" scoped="" ref="0x7feda6f9d1b0"/>
        <function-ref name="destination" scoped="" ref="0x7feda6f9d340"/>
        <function-ref name="setSource" scoped="" ref="0x7feda6f9d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda6f9d660"/>
        <function-ref name="type" scoped="" ref="0x7feda6f9d7f0"/>
        <function-ref name="setType" scoped="" ref="0x7feda6f9d980"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda6f9db10"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda6f9dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda6f9de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7feda6f99b40" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7feda6f99b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6f97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7feda80c25a0" loc="54:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda80c25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7feda80c2920"/>
        <function-ref name="changed" scoped="" ref="0x7feda80c2ab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7feda80c2c40"/>
        <function-ref name="setAddress" scoped="" ref="0x7feda80c2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda808c020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda808c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda808c3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda808c530"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda808c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7feda808c910" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda808c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda808cc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda808ce20"/>
        <function-ref name="request" scoped="" ref="0x7feda808b020"/>
        <function-ref name="granted" scoped="" ref="0x7feda808b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda808b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7feda809b550" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7feda809b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda809b8d0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda809ba60"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda809bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feda8026150" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7feda8026150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feda80264f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feda8026680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feda80241f0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda80241f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feda8024590"/>
        <function-ref name="configure" scoped="" ref="0x7feda8024720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feda8027390" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda8027390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda8027730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda80278c0"/>
        <function-ref name="request" scoped="" ref="0x7feda8027a50"/>
        <function-ref name="granted" scoped="" ref="0x7feda8027be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda8027d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feda80268d0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda80268d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feda8026c50"/>
        <function-ref name="userId" scoped="" ref="0x7feda8026de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda6f42b40" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda6f42b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda6f41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7feda6f412b0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7feda6f412b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feda6f41630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feda6f417c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feda6f41950"/>
        <function-ref name="dequeue" scoped="" ref="0x7feda6f41ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feda6f3d020" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7feda6f3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feda6f3d3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feda6f3d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feda6f3c0d0" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda6f3c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feda6f3c470"/>
        <function-ref name="configure" scoped="" ref="0x7feda6f3c600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7feda6f3c890" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7feda6f3c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feda6f3cc10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feda6f3cda0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feda6f3b020"/>
        <function-ref name="dequeue" scoped="" ref="0x7feda6f3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feda6f3f210" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda6f3f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda6f3f5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda6f3f740"/>
        <function-ref name="request" scoped="" ref="0x7feda6f3f8d0"/>
        <function-ref name="granted" scoped="" ref="0x7feda6f3fa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda6f3fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feda6f3d7a0" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda6f3d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feda6f3db20"/>
        <function-ref name="userId" scoped="" ref="0x7feda6f3dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7feda6f3b480" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7feda6f3b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda6f3b800"/>
        <function-ref name="runTask" scoped="" ref="0x7feda6f3b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7fed2b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7fed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7fed630"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7fed7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7fed950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7fedbe0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7fedbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7feb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7feda7ff2d30" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7feda7ff2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7feda7ff10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda8021e00" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda8021e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ff31c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7ff3350"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda7ff34e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7ff3670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7ff3800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7feda7fee470" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7fee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7fee7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7fee980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7feeb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7feeca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7feee30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7fed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7feda7ff1390" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda7ff1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7feda7ff1710"/>
        <function-ref name="getDSN" scoped="" ref="0x7feda7ff18a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7feda7ff1a30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7feda7ff1bc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7feda7ff1d50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7feda7ff0020"/>
        <function-ref name="setDSN" scoped="" ref="0x7feda7ff01b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7feda7ff0340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7feda7ff04d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7feda7ff0660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7feda7ff07f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7feda7ff0980"/>
        <function-ref name="localAddr" scoped="" ref="0x7feda7ff0b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7feda7ff0da0"/>
        <function-ref name="localPan" scoped="" ref="0x7feda7fef020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7feda7fef1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7feda7fef340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7feda7fef4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7feda7fef660"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda7fef7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7feda7fef980"/>
        <function-ref name="getFCF" scoped="" ref="0x7feda7fefb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7feda7fefca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7feda7fefe30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7feda7fee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7feda7ff3a50" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7feda7ff3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7ff3dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda7ff2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7ff21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7ff2340"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7ff24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7feda7ff2760" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7feda7ff2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7ff2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7fb0c40" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7fb0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7faf020"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7faf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7faf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7faf5d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7faf5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7faf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7feda7fb3020" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda7fb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7fb33a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7fb3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7fb36c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7fb3850"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7fb39e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7fb3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7feda7fb1770" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7feda7fb1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7fb1af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7fafbe0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7fafbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7fae020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7fae1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7fae340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7fae4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7fae660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7fae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7feda7fb3e00" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7feda7fb3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7fb11c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7fb1350"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7fb14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7feda7fb40a0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7feda7fb40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7fb4420"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7fb45b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7fb4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7feda7fb49d0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7feda7fb49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7fb4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7feda7fb1d80" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7feda7fb1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7fb0180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7fb0310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7fb04a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7fb0630"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7fb07c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7fb0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7feda7f1bc40" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda7f1bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7feda7f19020"/>
        <function-ref name="address" scoped="" ref="0x7feda7f191b0"/>
        <function-ref name="destination" scoped="" ref="0x7feda7f19340"/>
        <function-ref name="setSource" scoped="" ref="0x7feda7f194d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda7f19660"/>
        <function-ref name="pan" scoped="" ref="0x7feda7f197f0"/>
        <function-ref name="setPan" scoped="" ref="0x7feda7f19980"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda7f19b10"/>
        <function-ref name="localPan" scoped="" ref="0x7feda7f19ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7f18020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7f18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7f183a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7f18530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7f186c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7f18850"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7f189e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7f18b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7feda7f1eb20" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda7f1eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7feda7f1d020"/>
        <function-ref name="getDSN" scoped="" ref="0x7feda7f1d1b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7feda7f1d340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7feda7f1d4d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7feda7f1d660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7feda7f1d7f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7feda7f1d980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7feda7f1db10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7feda7f1dca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7feda7f1de30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7feda7f1c020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7feda7f1c1b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7feda7f1c340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7feda7f1c5d0"/>
        <function-ref name="localPan" scoped="" ref="0x7feda7f1c760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7feda7f1c8f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7feda7f1ca80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7feda7f1cc10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7feda7f1cda0"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda7f1b020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7feda7f1b1b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7feda7f1b340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7feda7f1b4d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7feda7f1b660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7feda7f1b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7f18e60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7f18e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7f17210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7f173a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7f17530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7f176c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7f17850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7f179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7feda6ed22e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7feda6ed22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7feda6ed2660"/>
        <function-ref name="address" scoped="" ref="0x7feda6ed27f0"/>
        <function-ref name="destination" scoped="" ref="0x7feda6ed2980"/>
        <function-ref name="setSource" scoped="" ref="0x7feda6ed2b10"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda6ed2ca0"/>
        <function-ref name="pan" scoped="" ref="0x7feda6ed2e30"/>
        <function-ref name="setPan" scoped="" ref="0x7feda6ed1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda6ed11b0"/>
        <function-ref name="localPan" scoped="" ref="0x7feda6ed1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda6ed1590" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda6ed1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6ed1910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6ed1aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6ed1c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6ed1dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda6ed0020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda6ed01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7feda6ed5100" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7feda6ed5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7feda6ed5480"/>
        <function-ref name="getDSN" scoped="" ref="0x7feda6ed5610"/>
        <function-ref name="setFCF" scoped="" ref="0x7feda6ed57a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7feda6ed5930"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7feda6ed5ac0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7feda6ed5c50"/>
        <function-ref name="setDSN" scoped="" ref="0x7feda6ed5de0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7feda6ed4020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7feda6ed41b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7feda6ed4340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7feda6ed44d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7feda6ed4660"/>
        <function-ref name="localAddr" scoped="" ref="0x7feda6ed47f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7feda6ed4a80"/>
        <function-ref name="localPan" scoped="" ref="0x7feda6ed4c10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7feda6ed4da0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7feda6ed3020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7feda6ed31b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7feda6ed3340"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda6ed34d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7feda6ed3660"/>
        <function-ref name="getFCF" scoped="" ref="0x7feda6ed37f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7feda6ed3980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7feda6ed3b10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7feda6ed3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7feda6ed0460" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7feda6ed0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7feda6ed07e0"/>
        <function-ref name="changed" scoped="" ref="0x7feda6ed0970"/>
        <function-ref name="amGroup" scoped="" ref="0x7feda6ed0b00"/>
        <function-ref name="setAddress" scoped="" ref="0x7feda6ed0c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda6ecf020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda6ecf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6ecf3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6ecf530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6ecf6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6ecf850"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda6ecf9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda6ecfb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7eac4a0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7eac4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7eac820"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7eac9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7eacb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7eacdd0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7eacdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7eab180"/>
        <function-ref name="header" scoped="" ref="0x7feda7eab310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda7ead2f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda7ead2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7ead670"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7ead800"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7ead990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7eab5a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7eab5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7feda7eab920"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7feda7eabab0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7feda7eabc40"/>
        <function-ref name="getSender" scoped="" ref="0x7feda7eabdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7eadbe0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7eadbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7eac020"/>
        <function-ref name="header" scoped="" ref="0x7feda7eac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda6e81bd0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda6e81bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6e80020"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6e801b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6e80340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda6e805d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda6e805d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6e80950"/>
        <function-ref name="header" scoped="" ref="0x7feda6e80ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7feda6e7e410" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda6e7e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6e7e790"/>
        <function-ref name="clearAll" scoped="" ref="0x7feda6e7e920"/>
        <function-ref name="get" scoped="" ref="0x7feda6e7eab0"/>
        <function-ref name="set" scoped="" ref="0x7feda6e7ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda6e824a0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda6e824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6e82820"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6e829b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6e82b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7feda6e7f7e0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7feda6e7f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7feda6e7fb60"/>
        <function-ref name="insertNode" scoped="" ref="0x7feda6e7fcf0"/>
        <function-ref name="getNode" scoped="" ref="0x7feda6e7fe80"/>
        <function-ref name="evicted" scoped="" ref="0x7feda6e7e030"/>
        <function-ref name="getIndex" scoped="" ref="0x7feda6e7e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda6e82d90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda6e82d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6e81180"/>
        <function-ref name="header" scoped="" ref="0x7feda6e81310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda6e81560" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda6e81560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda6e818e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7feda6e80d30" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7feda6e80d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7feda6e7f0e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7feda6e7f270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7feda6e7f400"/>
        <function-ref name="getSender" scoped="" ref="0x7feda6e7f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7feda7ee2e30" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7feda7ee2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7feda7edf1e0"/>
        <function-ref name="insertNode" scoped="" ref="0x7feda7edf370"/>
        <function-ref name="getNode" scoped="" ref="0x7feda7edf500"/>
        <function-ref name="evicted" scoped="" ref="0x7feda7edf690"/>
        <function-ref name="getIndex" scoped="" ref="0x7feda7edf820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7feda7edbd10" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda7edbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7eda0e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7feda7eda270"/>
        <function-ref name="get" scoped="" ref="0x7feda7eda400"/>
        <function-ref name="set" scoped="" ref="0x7feda7eda590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7feda7edea00" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7feda7edea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7feda7eded80"/>
        <function-ref name="insertNode" scoped="" ref="0x7feda7edb020"/>
        <function-ref name="getNode" scoped="" ref="0x7feda7edb1b0"/>
        <function-ref name="evicted" scoped="" ref="0x7feda7edb340"/>
        <function-ref name="getIndex" scoped="" ref="0x7feda7edb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7ede3b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7ede3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7ede730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7feda6e7cd40" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7feda6e7cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6e7b0e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7feda6e7b270"/>
        <function-ref name="get" scoped="" ref="0x7feda6e7b400"/>
        <function-ref name="set" scoped="" ref="0x7feda6e7b590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7e9a7c0" loc="85:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7e9a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7e9ab40"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7e9acd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7e9ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7e99120" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7e99120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7e994a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7feda7e96cb0" loc="93:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7feda7e96cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda7e950a0"/>
        <function-ref name="noAck" scoped="" ref="0x7feda7e95230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda7e953c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda7ea6bb0" loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda7ea6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7e9c020"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7e9c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7e9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7e9b8b0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7e9b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7e9bc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7e9bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7e9a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7e9a1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7e9a340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7e9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7e99730" loc="87:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7e99730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7e99ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7e99c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7e99dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7e97020"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7e971b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7e97340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7feda7e96020" loc="92:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7feda7e96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feda7e963a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7feda7e96530"/>
        <function-ref name="getRetries" scoped="" ref="0x7feda7e966c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feda7e96850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feda7e969e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda7e9c5d0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda7e9c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7e9c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7feda7e97590" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7e97590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda7e97910"/>
        <function-ref name="noAck" scoped="" ref="0x7feda7e97aa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda7e97c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7feda7e9cba0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7feda7e9cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7feda7e9b020"/>
        <function-ref name="setRetries" scoped="" ref="0x7feda7e9b1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7feda7e9b340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7feda7e9b4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7feda7e9b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda7e7c0e0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda7e7c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7e7c460"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7e7c5f0"/>
        <function-ref name="start" scoped="" ref="0x7feda7e7c780"/>
        <function-ref name="stop" scoped="" ref="0x7feda7e7c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7e77120" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7e77120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7e774a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7e77630"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7e777c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7e77a50" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7e77a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7e77dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda7e7cba0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda7e7cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7e7a020"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7e7a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7e7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7e7aba0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7e7aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7e79020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7e791b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7e79340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7e794d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7e79660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7e797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feda7e79a40" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7feda7e79a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feda7e79dc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feda7e78020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feda7e781b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feda7e78340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7feda7e78630" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7feda7e78630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7e789b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7e78b40"/>
        <function-ref name="start" scoped="" ref="0x7feda7e78cd0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7e78e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda7e7a5d0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda7e7a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7e7a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7e760a0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7e760a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7e76420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7e765b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7e76740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7e768d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7e76a60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7e76bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7feda6e57da0" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7feda6e57da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7feda6e56180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7feda6e56310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7feda6e564a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7feda6e56630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda7e07cc0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda7e07cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7e060a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7e06230"/>
        <function-ref name="start" scoped="" ref="0x7feda7e063c0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7e06550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7feda7e04080" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7feda7e04080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7e04400"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7e04590"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7e04720"/>
        <function-ref name="done" scoped="" ref="0x7feda7e048b0"/>
        <function-ref name="standby" scoped="" ref="0x7feda7e04a40"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7e04bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda7e067e0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda7e067e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7e06b60"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7e06cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7e06e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7feda7e03730" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7e03730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7e03ab0"/>
        <function-ref name="header" scoped="" ref="0x7feda7e03c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda7e05130" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda7e05130"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7e054b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7feda7e04e20" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7e04e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7e031c0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7e03350"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7e034e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7feda7e05700" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7feda7e05700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7feda7e05a80"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7e05c10"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7e05da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda6e4f3a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda6e4f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda6e4f720"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda6e4f8b0"/>
        <function-ref name="start" scoped="" ref="0x7feda6e4fa40"/>
        <function-ref name="stop" scoped="" ref="0x7feda6e4fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7feda6e4fe60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7feda6e4fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda6e4e210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7feda6e4dd20" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7feda6e4dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda6e4b0e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda6e4b270"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda6e4b400"/>
        <function-ref name="done" scoped="" ref="0x7feda6e4b590"/>
        <function-ref name="standby" scoped="" ref="0x7feda6e4b720"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda6e4b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda6e4e4a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda6e4e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6e4e820"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6e4e9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6e4eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7feda6e48020" loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7feda6e48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda6e483a0"/>
        <function-ref name="runTask" scoped="" ref="0x7feda6e48530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7feda6e49020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda6e49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6e493a0"/>
        <function-ref name="header" scoped="" ref="0x7feda6e49530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7feda6e48800" loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7feda6e48800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda6e48b80"/>
        <function-ref name="runTask" scoped="" ref="0x7feda6e48d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda6e4edd0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda6e4edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6e4d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7feda6e49800" loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7feda6e49800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda6e49b80"/>
        <function-ref name="runTask" scoped="" ref="0x7feda6e49d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7feda6e4a5a0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda6e4a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6e4a920"/>
        <function-ref name="ready" scoped="" ref="0x7feda6e4aab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6e4ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7feda6e4d3d0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7feda6e4d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7feda6e4d750"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda6e4d8e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda6e4da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7feda6e4bb00" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7feda6e4bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7feda6e4be80"/>
        <function-ref name="suspend" scoped="" ref="0x7feda6e4a030"/>
        <function-ref name="resume" scoped="" ref="0x7feda6e4a1c0"/>
        <function-ref name="run" scoped="" ref="0x7feda6e4a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7dab020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7dab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7dab3a0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7dab530"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7dab6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7dab950" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7dab950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7dabcd0"/>
        <function-ref name="header" scoped="" ref="0x7feda7dabe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7feda7daa0e0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7daa0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda7daa460"/>
        <function-ref name="wait" scoped="" ref="0x7feda7daa5f0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7daa780"/>
        <function-ref name="isFree" scoped="" ref="0x7feda7daa910"/>
        <function-ref name="getNow" scoped="" ref="0x7feda7daaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7daad30" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7daad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7feda7da90e0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7feda7da9270"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7feda7da9400"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7feda7da9590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7dac6f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7dac6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7daca70"/>
        <function-ref name="header" scoped="" ref="0x7feda7dacc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda7dfddb0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7dfddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7dac180"/>
        <function-ref name="ready" scoped="" ref="0x7feda7dac310"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7dac4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda6e0f310" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda6e0f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6e0f690"/>
        <function-ref name="ready" scoped="" ref="0x7feda6e0f820"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6e0f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda6e0fc40" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda6e0fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6e0e020"/>
        <function-ref name="header" scoped="" ref="0x7feda6e0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7feda6e0e400" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda6e0e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda6e0e780"/>
        <function-ref name="wait" scoped="" ref="0x7feda6e0e910"/>
        <function-ref name="cancel" scoped="" ref="0x7feda6e0eaa0"/>
        <function-ref name="isFree" scoped="" ref="0x7feda6e0ec30"/>
        <function-ref name="getNow" scoped="" ref="0x7feda6e0edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7feda6e0c060" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7feda6e0c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feda6e0c3e0"/>
        <function-ref name="rand32" scoped="" ref="0x7feda6e0c570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda6e0c800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda6e0c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7feda6e0cb80"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7feda6e0cd10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7feda6e0b020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7feda6e0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda6e10a30" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda6e10a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda6e10db0"/>
        <function-ref name="header" scoped="" ref="0x7feda6e0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda6e10140" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda6e10140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda6e104c0"/>
        <function-ref name="ready" scoped="" ref="0x7feda6e10650"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda6e107e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7feda6e0b480" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7feda6e0b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda6e0b800"/>
        <function-ref name="runTask" scoped="" ref="0x7feda6e0b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7feda7dc2850" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7feda7dc2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feda7dc2bd0"/>
        <function-ref name="rand32" scoped="" ref="0x7feda7dc2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7feda7dbf6a0" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7feda7dbf6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7dc2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7dc6710" loc="44:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7dc6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7dc6a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7feda7dbb850" loc="48:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7feda7dbb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7feda7dbbbd0"/>
        <function-ref name="rand32" scoped="" ref="0x7feda7dbbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7feda7dbc6c0" loc="47:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7feda7dbc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7dbb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7dc0dc0" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7dc0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7dbc180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7d79630" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7d79630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7d799b0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7d79b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7d79cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7d77020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7d77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7d773a0"/>
        <function-ref name="header" scoped="" ref="0x7feda7d77530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7feda7d77780" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7d77780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda7d77b00"/>
        <function-ref name="wait" scoped="" ref="0x7feda7d77c90"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7d77e20"/>
        <function-ref name="isFree" scoped="" ref="0x7feda7d76020"/>
        <function-ref name="getNow" scoped="" ref="0x7feda7d761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7feda7d755d0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7feda7d755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7d75950"/>
        <function-ref name="get" scoped="" ref="0x7feda7d75ae0"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7d75c70"/>
        <function-ref name="set" scoped="" ref="0x7feda7d75e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7d76440" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7d76440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7feda7d767c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7feda7d76950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7feda7d76ae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7feda7d76c70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7feda7d76e00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7feda7d75020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7feda7d751b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7feda7d75340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7d7a400" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7d7a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7d7a780"/>
        <function-ref name="header" scoped="" ref="0x7feda7d7a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda7da3ac0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7da3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7da3e40"/>
        <function-ref name="ready" scoped="" ref="0x7feda7d7a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7d7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feda7d7ab60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7d7ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda7d79020"/>
        <function-ref name="noAck" scoped="" ref="0x7feda7d791b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda7d79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda7d5dd60" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda7d5dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7d5c180"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7d5c310"/>
        <function-ref name="start" scoped="" ref="0x7feda7d5c4a0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7d5c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7feda7d587c0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7feda7d587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7feda7d58b40"/>
        <function-ref name="request" scoped="" ref="0x7feda7d58cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7d53020" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7d533a0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7d53530"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7d536c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7d53950" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7d53950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7d53cd0"/>
        <function-ref name="header" scoped="" ref="0x7feda7d53e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7feda7d5b840" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7feda7d5b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7d5bbc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7d5bd50"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7d59020"/>
        <function-ref name="done" scoped="" ref="0x7feda7d591b0"/>
        <function-ref name="standby" scoped="" ref="0x7feda7d59340"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7d594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7d57020" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7d57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7d573a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7d57530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7d576c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7d57850"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7d579e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7d57b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7feda7d54020" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7feda7d54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7d544a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7d54630"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7d547c0"/>
        <function-ref name="done" scoped="" ref="0x7feda7d54950"/>
        <function-ref name="standby" scoped="" ref="0x7feda7d54ae0"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7d54c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7feda7d57e00" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7feda7d57e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7feda7d561c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7d58060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7d58060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7d583e0"/>
        <function-ref name="header" scoped="" ref="0x7feda7d58570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7feda7d55950" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7feda7d55950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7d55cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7feda7d564b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7feda7d564b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7d56830"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7d569c0"/>
        <function-ref name="start" scoped="" ref="0x7feda7d56b50"/>
        <function-ref name="stop" scoped="" ref="0x7feda7d56ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7d518c0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7d518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7d51c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7d51dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7d50020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7d501b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7d50340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7d504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7feda7d5b270" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7feda7d5b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7d5b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7d50760" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7d50760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7feda7d50ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7feda7d55020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7feda7d55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7d553a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7d55530"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7d556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda7d59720" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7d59720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7d59aa0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7d59c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7d59dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7feda7d51120" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7feda7d51120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7feda7d514a0"/>
        <function-ref name="request" scoped="" ref="0x7feda7d51630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7feda7d5c880" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7feda7d5c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7d5cc00"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7d5cd90"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7d5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7feda7b2d760" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7feda7b2d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7b2dae0"/>
        <function-ref name="get" scoped="" ref="0x7feda7b2dc70"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7b2de00"/>
        <function-ref name="set" scoped="" ref="0x7feda7b2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7b317e0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7b317e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7b31b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7b31cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7b31e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7b2f030"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7b2f1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7b2f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7b2e800" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7b2e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7b2eb80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7b2ed10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7b2d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7b2d1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7b2d340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7b2d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7feda7b35bb0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda7b35bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda7b32170"/>
        <function-ref name="clear" scoped="" ref="0x7feda7b328a0"/>
        <function-ref name="isValid" scoped="" ref="0x7feda7b33a00"/>
        <function-ref name="set" scoped="" ref="0x7feda7b31020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7feda7b2f760" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7b2f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7b2e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feda7b38d00" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda7b38d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda7b362e0"/>
        <function-ref name="clear" scoped="" ref="0x7feda7b36a10"/>
        <function-ref name="isValid" scoped="" ref="0x7feda7b37b60"/>
        <function-ref name="set" scoped="" ref="0x7feda7b35170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7feda6dba310" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7feda6dba310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6dba690"/>
        <function-ref name="get" scoped="" ref="0x7feda6dba820"/>
        <function-ref name="setValue" scoped="" ref="0x7feda6dba9b0"/>
        <function-ref name="set" scoped="" ref="0x7feda6dbab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda6dbc3b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda6dbc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6dbc730"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6dbc8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6dbca50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6dbcbe0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda6dbcd70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda6dba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda6db72b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda6db72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda6db7630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda6db77c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda6db7950"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda6db7ae0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda6db7c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda6db7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7feda6dbf630" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7feda6dbf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda6dbece0"/>
        <function-ref name="clear" scoped="" ref="0x7feda6dbd460"/>
        <function-ref name="isValid" scoped="" ref="0x7feda6dbe5b0"/>
        <function-ref name="set" scoped="" ref="0x7feda6dbdb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7feda6db9020" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda6db9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda6db9c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7feda6db81e0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7feda6db81e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda6db8e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7feda6dc36f0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7feda6dc36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda6dc2ce0"/>
        <function-ref name="clear" scoped="" ref="0x7feda6dc1460"/>
        <function-ref name="isValid" scoped="" ref="0x7feda6dc25b0"/>
        <function-ref name="set" scoped="" ref="0x7feda6dc1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feda7cfca60" loc="20:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7feda7cfca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7cf96b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7feda7cf4320" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7feda7cf4320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7cf1870"/>
        <function-ref name="fired" scoped="" ref="0x7feda7cf3e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda7cf2c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda7cf2780"/>
        <function-ref name="getdt" scoped="" ref="0x7feda7cef1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7feda7cf1cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7cf2300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda7cf3020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda7cf1260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda7cf34f0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7cf39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feda7cef7d0" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7feda7cef7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7cee440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7cf8540" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7cf8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7cf88c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7feda7ce4060" loc="29:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7feda7ce4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7ce4e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7ce3820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7ce3360"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7ce3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7cea020" loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7cea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7cea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7feda7ceaa10" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7feda7ceaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7ce62a0"/>
        <function-ref name="fired" scoped="" ref="0x7feda7ce72a0"/>
        <function-ref name="startAt" scoped="" ref="0x7feda7ce7c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7ce7760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda7ce6760"/>
        <function-ref name="start" scoped="" ref="0x7feda7ce8890"/>
        <function-ref name="stop" scoped="" ref="0x7feda7ce8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feda7be0890" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda7be0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7bdd0d0"/>
        <function-ref name="fired" scoped="" ref="0x7feda7bde0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7feda7bdea50"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7bde590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda7bdd590"/>
        <function-ref name="start" scoped="" ref="0x7feda7bdf6e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7bdfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7be0080" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7be0080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7feda88e29c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7feda88e29c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7be0400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda7bddbc0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda7bddbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7bdba00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7bda4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7bda020"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7bda9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7feda6d89190" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda6d89190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda6d89510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda6d896a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda6d89830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda6d899c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda6d89b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda6d89ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda6d89e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda6d88030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feda6d95830" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda6d95830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda6d92090"/>
        <function-ref name="fired" scoped="" ref="0x7feda6d93090"/>
        <function-ref name="startAt" scoped="" ref="0x7feda6d93a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda6d93550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda6d92550"/>
        <function-ref name="start" scoped="" ref="0x7feda6d946a0"/>
        <function-ref name="stop" scoped="" ref="0x7feda6d94bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda6d95020" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda6d95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda6d953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda6d92b80" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda6d92b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda6d909b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda6d8f360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda6d90e70"/>
        <function-ref name="overflow" scoped="" ref="0x7feda6d8f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7feda6d84780" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7feda6d84780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7feda6d84b00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7feda6d84c90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7feda6d84e20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7feda6d83020"/>
        <function-ref name="countBusy" scoped="" ref="0x7feda6d831b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7feda6d83340"/>
        <function-ref name="getAssr" scoped="" ref="0x7feda6d834d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7feda6d83660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7feda6d883e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7feda6d883e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda6d85e60"/>
        <function-ref name="fired" scoped="" ref="0x7feda6d87a60"/>
        <function-ref name="get" scoped="" ref="0x7feda6d87090"/>
        <function-ref name="reset" scoped="" ref="0x7feda6d85020"/>
        <function-ref name="isOn" scoped="" ref="0x7feda6d84350"/>
        <function-ref name="set" scoped="" ref="0x7feda6d87550"/>
        <function-ref name="start" scoped="" ref="0x7feda6d854e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda6d859a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feda6d8fdd0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda6d8fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda6d8a350"/>
        <function-ref name="test" scoped="" ref="0x7feda6d8b9a0"/>
        <function-ref name="get" scoped="" ref="0x7feda6d8eac0"/>
        <function-ref name="setScale" scoped="" ref="0x7feda6d8a810"/>
        <function-ref name="getScale" scoped="" ref="0x7feda6d8ad20"/>
        <function-ref name="reset" scoped="" ref="0x7feda6d8d9f0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda6d8d530"/>
        <function-ref name="isOn" scoped="" ref="0x7feda6d8be60"/>
        <function-ref name="set" scoped="" ref="0x7feda6d8d020"/>
        <function-ref name="start" scoped="" ref="0x7feda6d8b020"/>
        <function-ref name="stop" scoped="" ref="0x7feda6d8b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7feda7c53020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7c53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda7c533a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda7c53530"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda7c536c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda7c53850"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda7c539e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda7c53b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda7c53d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda7c52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7feda7c4ea40" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7feda7c4ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7feda7c4edc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7feda7c4d020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7feda7c4d1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7feda7c4d340"/>
        <function-ref name="countBusy" scoped="" ref="0x7feda7c4d4d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7feda7c4d660"/>
        <function-ref name="getAssr" scoped="" ref="0x7feda7c4d7f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7feda7c4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feda7c52520" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7feda7c52520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda7c4e020"/>
        <function-ref name="fired" scoped="" ref="0x7feda7c51b80"/>
        <function-ref name="get" scoped="" ref="0x7feda7c511b0"/>
        <function-ref name="reset" scoped="" ref="0x7feda7c4f090"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7c4e4e0"/>
        <function-ref name="set" scoped="" ref="0x7feda7c51670"/>
        <function-ref name="start" scoped="" ref="0x7feda7c4f550"/>
        <function-ref name="stop" scoped="" ref="0x7feda7c4fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda7c5bc70" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7c5bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda7c54020"/>
        <function-ref name="test" scoped="" ref="0x7feda7c55610"/>
        <function-ref name="get" scoped="" ref="0x7feda7c588e0"/>
        <function-ref name="setScale" scoped="" ref="0x7feda7c544e0"/>
        <function-ref name="getScale" scoped="" ref="0x7feda7c549f0"/>
        <function-ref name="reset" scoped="" ref="0x7feda7c577a0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7c572e0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7c55ad0"/>
        <function-ref name="set" scoped="" ref="0x7feda7c58da0"/>
        <function-ref name="start" scoped="" ref="0x7feda7c57c60"/>
        <function-ref name="stop" scoped="" ref="0x7feda7c55150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7feda7c442b0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7c442b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda7c44630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda7c447c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda7c44950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda7c44ae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda7c44c70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda7c44e00"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda7c42020"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda7c421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7feda7c3fa70" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7feda7c3fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7feda7c3fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7feda7c3d230" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7feda7c3d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7feda7c3d5b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7feda7c3d740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7feda7c3d8d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7feda7c3da60"/>
        <function-ref name="countBusy" scoped="" ref="0x7feda7c3dbf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7feda7c3dd80"/>
        <function-ref name="getAssr" scoped="" ref="0x7feda7c3c020"/>
        <function-ref name="setAssr" scoped="" ref="0x7feda7c3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feda7c426b0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7feda7c426b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda7c3f110"/>
        <function-ref name="fired" scoped="" ref="0x7feda7c41da0"/>
        <function-ref name="get" scoped="" ref="0x7feda7c413d0"/>
        <function-ref name="reset" scoped="" ref="0x7feda7c402a0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7c3f5d0"/>
        <function-ref name="set" scoped="" ref="0x7feda7c41890"/>
        <function-ref name="start" scoped="" ref="0x7feda7c40760"/>
        <function-ref name="stop" scoped="" ref="0x7feda7c40c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda7c49020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7c49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda7c45350"/>
        <function-ref name="test" scoped="" ref="0x7feda7c469a0"/>
        <function-ref name="get" scoped="" ref="0x7feda7c49c50"/>
        <function-ref name="setScale" scoped="" ref="0x7feda7c45810"/>
        <function-ref name="getScale" scoped="" ref="0x7feda7c45d20"/>
        <function-ref name="reset" scoped="" ref="0x7feda7c47b20"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7c47660"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7c46e60"/>
        <function-ref name="set" scoped="" ref="0x7feda7c47150"/>
        <function-ref name="start" scoped="" ref="0x7feda7c46020"/>
        <function-ref name="stop" scoped="" ref="0x7feda7c464e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7feda7ba7490" loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7feda7ba7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7ba7810"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7ba79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7feda7bab1d0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda7bab1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7ba9b30"/>
        <function-ref name="fired" scoped="" ref="0x7feda7baa9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7feda7ba94e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7ba9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda7ba7020"/>
        <function-ref name="start" scoped="" ref="0x7feda7baa020"/>
        <function-ref name="stop" scoped="" ref="0x7feda7baa530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda7bb1cf0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7bb1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7bac220"/>
        <function-ref name="fired" scoped="" ref="0x7feda7baf7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda7bae590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda7bae110"/>
        <function-ref name="getdt" scoped="" ref="0x7feda7bacb20"/>
        <function-ref name="gett0" scoped="" ref="0x7feda7bac6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7bafc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda7bb0940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda7baeba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda7bb0e10"/>
        <function-ref name="stop" scoped="" ref="0x7feda7baf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7feda7b57a00" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7feda7b57a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7b57d80"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7b56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7feda7b5c640" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7feda7b5c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7b59c40"/>
        <function-ref name="fired" scoped="" ref="0x7feda7b5a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda7b59020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda7b5aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7feda7b57590"/>
        <function-ref name="gett0" scoped="" ref="0x7feda7b57110"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7b5a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda7b5b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda7b59630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda7b5b860"/>
        <function-ref name="stop" scoped="" ref="0x7feda7b5bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda7b62150" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7b62150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7b5e700"/>
        <function-ref name="fired" scoped="" ref="0x7feda7b61c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda7b5fa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda7b5f5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7feda7b5c090"/>
        <function-ref name="gett0" scoped="" ref="0x7feda7b5eba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7b5f110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda7b62d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda7b5e0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda7b612a0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7b61790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feda7b54790" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7feda7b54790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7b533f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feda7b53a60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda7b53a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7b49890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7b48260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7b49d50"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7b48720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7feda7b40320" loc="49:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7feda7b40320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7b3c870"/>
        <function-ref name="fired" scoped="" ref="0x7feda7b3fe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda7b3ec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda7b3e780"/>
        <function-ref name="getdt" scoped="" ref="0x7feda7b3b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7feda7b3ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7b3e300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda7b3f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda7b3c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda7b3f4f0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7b3f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7b27590" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7b27590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7b27910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7b27aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7b27c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7b27dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7b07020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7b071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7b074a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7b074a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7b07820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7b079b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7b07b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7b07cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7b07e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7b06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7feda7b289b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7feda7b289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7b28d50"/>
        <function-ref name="get" scoped="" ref="0x7feda7b27020"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7b271b0"/>
        <function-ref name="set" scoped="" ref="0x7feda7b27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda7b042b0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda7b042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7b04630"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7b047c0"/>
        <function-ref name="start" scoped="" ref="0x7feda7b04950"/>
        <function-ref name="stop" scoped="" ref="0x7feda7b04ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7feda7b00b60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7feda7b00b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7feda7aff020"/>
        <function-ref name="request" scoped="" ref="0x7feda7aff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7afa440" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7afa440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7afa7c0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7afa950"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7afaae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7afad70" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7afad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7af9180"/>
        <function-ref name="header" scoped="" ref="0x7feda7af9310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7feda7b02c20" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7feda7b02c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7b01020"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7b011b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7b01340"/>
        <function-ref name="done" scoped="" ref="0x7feda7b014d0"/>
        <function-ref name="standby" scoped="" ref="0x7feda7b01660"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7b017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7aff400" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7aff400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aff780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7aff910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7affaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7affc30"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7affdc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7afe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7feda7afc410" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7feda7afc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7afc890"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7afca20"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7afcbb0"/>
        <function-ref name="done" scoped="" ref="0x7feda7afcd40"/>
        <function-ref name="standby" scoped="" ref="0x7feda7afa020"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7afa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7feda7afe2b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7feda7afe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7feda7afe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7b00400" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7b00400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7b00780"/>
        <function-ref name="header" scoped="" ref="0x7feda7b00910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7feda7afdd70" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7feda7afdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7afc180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7feda7afe920" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7feda7afe920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7afeca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7afee30"/>
        <function-ref name="start" scoped="" ref="0x7feda7afd020"/>
        <function-ref name="stop" scoped="" ref="0x7feda7afd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7feda7af9d40" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7feda7af9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7af80e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7af8270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7af8400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7af8590"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7af8720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7af88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7feda7b02650" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7feda7b02650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7b029d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7af8b40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7af8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7feda7af7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7feda7afd440" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7feda7afd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7afd7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7afd950"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7afdae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda7b01a40" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7b01a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7b01dc0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7b00020"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7b001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7feda7af95a0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7feda7af95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7feda7af9920"/>
        <function-ref name="request" scoped="" ref="0x7feda7af9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7feda7b04d30" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7feda7b04d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7b020e0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7b02270"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7b02400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7feda7aef5c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7feda7aef5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7feda7aef940"/>
        <function-ref name="request" scoped="" ref="0x7feda7aefad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7feda7aea3b0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7feda7aea3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ae9ac0"/>
        <function-ref name="get" scoped="" ref="0x7feda7ae9570"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7ae9020"/>
        <function-ref name="set" scoped="" ref="0x7feda7ae7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7feda7ad5ca0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7feda7ad5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ad40a0"/>
        <function-ref name="get" scoped="" ref="0x7feda7ad4230"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7ad43c0"/>
        <function-ref name="set" scoped="" ref="0x7feda7ad4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7feda7ad92e0" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda7ad92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda7ad8840"/>
        <function-ref name="clear" scoped="" ref="0x7feda7ad6020"/>
        <function-ref name="isValid" scoped="" ref="0x7feda7ad8110"/>
        <function-ref name="set" scoped="" ref="0x7feda7ad6750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7feda7af3610" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7feda7af3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7af3990"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7af3b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7af3cb0"/>
        <function-ref name="done" scoped="" ref="0x7feda7af3e40"/>
        <function-ref name="standby" scoped="" ref="0x7feda7af0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7af01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7feda7ad3470" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7ad3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda7ad37f0"/>
        <function-ref name="wait" scoped="" ref="0x7feda7ad3980"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7ad3b10"/>
        <function-ref name="isFree" scoped="" ref="0x7feda7ad3ca0"/>
        <function-ref name="getNow" scoped="" ref="0x7feda7ad3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7feda7aeee80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda7aeee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aeb5e0"/>
        <function-ref name="get" scoped="" ref="0x7feda7aeb090"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7aedad0"/>
        <function-ref name="set" scoped="" ref="0x7feda7aebb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7aefd90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7aefd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aee180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7aee310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7aee4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7aee630"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7aee7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7aee950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7ada1f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7ada1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7ada670"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7ada800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7ada990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7feda7adab20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7feda7adacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7af0dd0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7af0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7aef180"/>
        <function-ref name="header" scoped="" ref="0x7feda7aef310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feda7adfdd0" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda7adfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7feda83ff850"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7adb6e0"/>
        <function-ref name="fired" scoped="" ref="0x7feda7add6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7feda7adb090"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7addb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda7adbba0"/>
        <function-ref name="start" scoped="" ref="0x7feda7adeca0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7add1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7feda7ae7940" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feda7ae7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ae4090"/>
        <function-ref name="get" scoped="" ref="0x7feda7ae6af0"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7ae65a0"/>
        <function-ref name="set" scoped="" ref="0x7feda7ae45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7feda7ae0a40" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda7ae0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7adf6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda7af0460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7af0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7af07e0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7af0970"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7af0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7feda7ae4e70" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda7ae4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ae25e0"/>
        <function-ref name="get" scoped="" ref="0x7feda7ae2090"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7ae3ad0"/>
        <function-ref name="set" scoped="" ref="0x7feda7ae2b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7feda7ad48d0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7feda7ad48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ad4c50"/>
        <function-ref name="get" scoped="" ref="0x7feda7ad4de0"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7ad3020"/>
        <function-ref name="set" scoped="" ref="0x7feda7ad31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7feda7ad5110" loc="63:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7feda7ad5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ad5490"/>
        <function-ref name="get" scoped="" ref="0x7feda7ad5620"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7ad57b0"/>
        <function-ref name="set" scoped="" ref="0x7feda7ad5940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feda7ae01e0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda7ae01e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feda7ae0560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7feda7ac82d0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7feda7ac82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7feda7ac8650"/>
        <function-ref name="request" scoped="" ref="0x7feda7ac87e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7feda7aa8d20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7feda7aa8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7feda7aaab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7feda7ac30d0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7feda7ac30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ac17f0"/>
        <function-ref name="get" scoped="" ref="0x7feda7ac12a0"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7ac3d00"/>
        <function-ref name="set" scoped="" ref="0x7feda7ac1d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7feda7aa6ca0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7feda7aa6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aa50a0"/>
        <function-ref name="get" scoped="" ref="0x7feda7aa5230"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7aa53c0"/>
        <function-ref name="set" scoped="" ref="0x7feda7aa5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7feda7acbb60" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7feda7acbb60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7aca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7feda7aa4780" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7feda7aa4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7feda7aa1020"/>
        <function-ref name="clear" scoped="" ref="0x7feda7aa1750"/>
        <function-ref name="isValid" scoped="" ref="0x7feda7aa27c0"/>
        <function-ref name="set" scoped="" ref="0x7feda7aa1e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7feda7ab5980" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7feda7ab5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7ab5d00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7ab0020"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7ab01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7ab0340"/>
        <function-ref name="get" scoped="" ref="0x7feda7ab04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7ab0660"/>
        <function-ref name="set" scoped="" ref="0x7feda7ab07f0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7ab0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7feda7a9e2e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7feda7a9e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7feda7a9e660"/>
        <function-ref name="wait" scoped="" ref="0x7feda7a9e7f0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7a9e980"/>
        <function-ref name="isFree" scoped="" ref="0x7feda7a9eb10"/>
        <function-ref name="getNow" scoped="" ref="0x7feda7a9eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7feda7aca2e0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7feda7aca2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7feda7aca660"/>
        <function-ref name="turnOn" scoped="" ref="0x7feda7aca7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7feda7aca980"/>
        <function-ref name="done" scoped="" ref="0x7feda7acab10"/>
        <function-ref name="standby" scoped="" ref="0x7feda7acaca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7feda7acae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7feda7aa91a0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7feda7aa91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7aa9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7feda7ac7b90" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7feda7ac7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ac42e0"/>
        <function-ref name="get" scoped="" ref="0x7feda7ac6d40"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7ac67f0"/>
        <function-ref name="set" scoped="" ref="0x7feda7ac4830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7feda7ac8aa0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7feda7ac8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7ac8e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7ac7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7ac71b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda7ac7340"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7ac74d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7ac7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7feda7ab6670" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7feda7ab6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7ab69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7ab6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7ab6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7ab5020"/>
        <function-ref name="get" scoped="" ref="0x7feda7ab51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7ab5340"/>
        <function-ref name="set" scoped="" ref="0x7feda7ab54d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7ab5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7feda7aa7340" loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7feda7aa7340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7aa76c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7feda7aa7850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7feda7aa79e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7feda7aa7b70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7feda7aa7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7feda7ac9a90" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7feda7ac9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7ac9e10"/>
        <function-ref name="header" scoped="" ref="0x7feda7ac8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7feda7a0f8b0" loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7feda7a0f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7a0fc30"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7a0fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7feda7ac0630" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7feda7ac0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7abfe70"/>
        <function-ref name="get" scoped="" ref="0x7feda7abf920"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7abf3d0"/>
        <function-ref name="set" scoped="" ref="0x7feda7abd3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7feda7acb020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7feda7acb020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7feda88e2d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7acb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7feda7ab8b50" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7feda7ab8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda7ab7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda7ab71b0"/>
        <function-ref name="request" scoped="" ref="0x7feda7ab7340"/>
        <function-ref name="granted" scoped="" ref="0x7feda7ab74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda7ab7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7feda7ab9760" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7feda7ab9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7ab9be0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7ab9d70"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7ab8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7ab81b0"/>
        <function-ref name="get" scoped="" ref="0x7feda7ab8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7ab84d0"/>
        <function-ref name="set" scoped="" ref="0x7feda7ab8660"/>
        <function-ref name="clr" scoped="" ref="0x7feda7ab87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7feda7abdc80" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7feda7abdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aba3c0"/>
        <function-ref name="get" scoped="" ref="0x7feda7abce30"/>
        <function-ref name="isSet" scoped="" ref="0x7feda7abc8e0"/>
        <function-ref name="set" scoped="" ref="0x7feda7aba910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7feda7ac9120" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7feda7ac9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7ac94a0"/>
        <function-ref name="ready" scoped="" ref="0x7feda7ac9630"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7ac97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7feda7aab550" loc="72:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7feda7aab550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7feda7aab8d0"/>
        <function-ref name="disable" scoped="" ref="0x7feda7aaba60"/>
        <function-ref name="captured" scoped="" ref="0x7feda7aabbf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7feda7aabd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7feda7ab1aa0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7feda7ab1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feda7ab1e20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feda7ab6020"/>
        <function-ref name="splitRead" scoped="" ref="0x7feda7ab61b0"/>
        <function-ref name="write" scoped="" ref="0x7feda7ab6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7feda7aa58d0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7feda7aa58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aa5c50"/>
        <function-ref name="get" scoped="" ref="0x7feda7aa5de0"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7aa4020"/>
        <function-ref name="set" scoped="" ref="0x7feda7aa41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7feda7aa6110" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7feda7aa6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7aa6490"/>
        <function-ref name="get" scoped="" ref="0x7feda7aa6620"/>
        <function-ref name="setValue" scoped="" ref="0x7feda7aa67b0"/>
        <function-ref name="set" scoped="" ref="0x7feda7aa6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7feda7ab9020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7feda7ab9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7feda7ab93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7feda7aa06b0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7feda7aa06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7feda7aa0a30"/>
        <function-ref name="suspend" scoped="" ref="0x7feda7aa0bc0"/>
        <function-ref name="resume" scoped="" ref="0x7feda7aa0d50"/>
        <function-ref name="run" scoped="" ref="0x7feda7a9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7feda79cab10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7feda79cab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda79c9020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda79c9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79c94d0"/>
        <function-ref name="get" scoped="" ref="0x7feda79c9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79c97f0"/>
        <function-ref name="set" scoped="" ref="0x7feda79c9980"/>
        <function-ref name="clr" scoped="" ref="0x7feda79c9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7feda79cb880" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7feda79cb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda79cbc00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79cbd90"/>
        <function-ref name="toggle" scoped="" ref="0x7feda79ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79ca1b0"/>
        <function-ref name="get" scoped="" ref="0x7feda79ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79ca4d0"/>
        <function-ref name="set" scoped="" ref="0x7feda79ca660"/>
        <function-ref name="clr" scoped="" ref="0x7feda79ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feda79c8c80" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda79c8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda79c44e0"/>
        <function-ref name="fired" scoped="" ref="0x7feda79c54e0"/>
        <function-ref name="startAt" scoped="" ref="0x7feda79c5e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda79c59a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda79c49a0"/>
        <function-ref name="start" scoped="" ref="0x7feda79c6ac0"/>
        <function-ref name="stop" scoped="" ref="0x7feda79c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7feda79cc060" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7feda79cc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda79cc3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda79cc570"/>
        <function-ref name="request" scoped="" ref="0x7feda79cc700"/>
        <function-ref name="granted" scoped="" ref="0x7feda79cc890"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda79cca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7feda79d0e10" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7feda79d0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda79cd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79cd350"/>
        <function-ref name="toggle" scoped="" ref="0x7feda79cd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79cd670"/>
        <function-ref name="get" scoped="" ref="0x7feda79cd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79cd990"/>
        <function-ref name="set" scoped="" ref="0x7feda79cdb20"/>
        <function-ref name="clr" scoped="" ref="0x7feda79cdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7feda79c9e30" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7feda79c9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7feda79c81e0"/>
        <function-ref name="disable" scoped="" ref="0x7feda79c8370"/>
        <function-ref name="captured" scoped="" ref="0x7feda79c8500"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7feda79c8690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7feda79ccce0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7feda79ccce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feda79cb0a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feda79cb230"/>
        <function-ref name="splitRead" scoped="" ref="0x7feda79cb3c0"/>
        <function-ref name="write" scoped="" ref="0x7feda79cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7feda79c2060" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7feda79c2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7feda83ff420"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda79c2c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7feda79b23d0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7feda79b23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda79b2750"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79b28e0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda79b2a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79b2c00"/>
        <function-ref name="get" scoped="" ref="0x7feda79b2d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79b1020"/>
        <function-ref name="set" scoped="" ref="0x7feda79b11b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda79b1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7feda79b57f0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7feda79b57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7feda79b3e60"/>
        <function-ref name="test" scoped="" ref="0x7feda79b34e0"/>
        <function-ref name="get" scoped="" ref="0x7feda79bc4c0"/>
        <function-ref name="captured" scoped="" ref="0x7feda79b4020"/>
        <function-ref name="reset" scoped="" ref="0x7feda79b4530"/>
        <function-ref name="isOn" scoped="" ref="0x7feda79b39a0"/>
        <function-ref name="set" scoped="" ref="0x7feda79bc980"/>
        <function-ref name="start" scoped="" ref="0x7feda79b49f0"/>
        <function-ref name="stop" scoped="" ref="0x7feda79b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7feda79b1680" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7feda79b1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda79b1a00"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79b1b90"/>
        <function-ref name="toggle" scoped="" ref="0x7feda79b1d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79b0020"/>
        <function-ref name="get" scoped="" ref="0x7feda79b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79b0340"/>
        <function-ref name="set" scoped="" ref="0x7feda79b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7feda79b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7feda79be680" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7feda79be680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda79bea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7feda79c1a10" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7feda79c1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7feda79c1d90"/>
        <function-ref name="disable" scoped="" ref="0x7feda79be020"/>
        <function-ref name="captured" scoped="" ref="0x7feda79be1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7feda79be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7feda7996ae0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7feda7996ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7996e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda799f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7feda799e840" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7feda799e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feda799ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda79a11f0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda79a11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda79a1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7feda79a0020" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7feda79a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feda79a03a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feda79a0530"/>
        <function-ref name="splitRead" scoped="" ref="0x7feda79a06c0"/>
        <function-ref name="write" scoped="" ref="0x7feda79a0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feda799f850" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda799f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda799fbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda799fd60"/>
        <function-ref name="request" scoped="" ref="0x7feda799d020"/>
        <function-ref name="granted" scoped="" ref="0x7feda799d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda799d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7feda7950190" loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7feda7950190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7950510"/>
        <function-ref name="runTask" scoped="" ref="0x7feda79506a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7feda7991020" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7feda7991020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda79913a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7991530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7feda7973430" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7feda7973430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda79737b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda7973940"/>
        <function-ref name="request" scoped="" ref="0x7feda7973ad0"/>
        <function-ref name="granted" scoped="" ref="0x7feda7973c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda7973df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7feda7993e00" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7feda7993e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7feda79921c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda79937e0" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda79937e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7993b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7feda798f020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7feda798f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7feda798f3a0"/>
        <function-ref name="sleep" scoped="" ref="0x7feda7974980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7feda798f6c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7feda7974b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7feda798f9e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7feda798fb70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7feda798fd00"/>
        <function-ref name="read" scoped="" ref="0x7feda798e020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7feda798e1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7feda798e340"/>
        <function-ref name="setClock" scoped="" ref="0x7feda798e4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feda798e660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7feda798e7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7feda798ea80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7feda798ec10"/>
        <function-ref name="write" scoped="" ref="0x7feda798eda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feda7974020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7feda79741b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7feda7974340"/>
        <function-ref name="getClock" scoped="" ref="0x7feda79744d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7feda7974660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7feda798f530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7feda798f850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7feda79747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7feda7992480" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7feda7992480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7feda7992800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7feda7992990"/>
        <function-ref name="splitRead" scoped="" ref="0x7feda7992b20"/>
        <function-ref name="write" scoped="" ref="0x7feda7992cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feda7991d20" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda7991d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda79900e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda7990270"/>
        <function-ref name="request" scoped="" ref="0x7feda7990400"/>
        <function-ref name="granted" scoped="" ref="0x7feda7990590"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda7990720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7feda7971130" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda7971130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feda79714b0"/>
        <function-ref name="userId" scoped="" ref="0x7feda7971640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7feda7971920" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7feda7971920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7feda7971ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7feda79233e0" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7feda79233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7feda7923760"/>
        <function-ref name="sleep" scoped="" ref="0x7feda7921ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7feda7923a80"/>
        <function-ref name="dataReady" scoped="" ref="0x7feda7921e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7feda7923da0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7feda7922020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7feda79221b0"/>
        <function-ref name="read" scoped="" ref="0x7feda7922340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7feda79224d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7feda7922660"/>
        <function-ref name="setClock" scoped="" ref="0x7feda79227f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feda7922980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7feda7922b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7feda7922da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7feda7921020"/>
        <function-ref name="write" scoped="" ref="0x7feda79211b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feda7921340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7feda79214d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7feda7921660"/>
        <function-ref name="getClock" scoped="" ref="0x7feda79217f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7feda7921980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7feda79238f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7feda7923c10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7feda7921b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7feda7915b10" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7feda7915b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7914020"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7914340"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79144d0"/>
        <function-ref name="get" scoped="" ref="0x7feda7914660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79147f0"/>
        <function-ref name="set" scoped="" ref="0x7feda7914980"/>
        <function-ref name="clr" scoped="" ref="0x7feda7914b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7feda7918650" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7feda7918650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda79189d0"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7918b60"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7918cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7918e80"/>
        <function-ref name="get" scoped="" ref="0x7feda7916030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79161c0"/>
        <function-ref name="set" scoped="" ref="0x7feda7916350"/>
        <function-ref name="clr" scoped="" ref="0x7feda79164e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7feda7919390" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7feda7919390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7919710"/>
        <function-ref name="isInput" scoped="" ref="0x7feda79198a0"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7919a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda7919bc0"/>
        <function-ref name="get" scoped="" ref="0x7feda7919d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda7918020"/>
        <function-ref name="set" scoped="" ref="0x7feda79181b0"/>
        <function-ref name="clr" scoped="" ref="0x7feda7918340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7feda7917ac0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7feda7917ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda7917e40"/>
        <function-ref name="stop" scoped="" ref="0x7feda7919020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7feda7914e50" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7feda7914e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7feda7913210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7feda791d350" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7feda791d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7feda791d6d0"/>
        <function-ref name="sleep" scoped="" ref="0x7feda791bca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7feda791d9f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7feda791be30"/>
        <function-ref name="initMaster" scoped="" ref="0x7feda791dd10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7feda791c020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7feda791c1b0"/>
        <function-ref name="read" scoped="" ref="0x7feda791c340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7feda791c4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7feda791c660"/>
        <function-ref name="setClock" scoped="" ref="0x7feda791c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7feda791c980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7feda791cb10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7feda791cda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7feda791b020"/>
        <function-ref name="write" scoped="" ref="0x7feda791b1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7feda791b340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7feda791b4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7feda791b660"/>
        <function-ref name="getClock" scoped="" ref="0x7feda791b7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7feda791b980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7feda791d860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7feda791db80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7feda791bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7feda7916800" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7feda7916800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7feda7916b80"/>
        <function-ref name="isInput" scoped="" ref="0x7feda7916d10"/>
        <function-ref name="toggle" scoped="" ref="0x7feda7915020"/>
        <function-ref name="isOutput" scoped="" ref="0x7feda79151b0"/>
        <function-ref name="get" scoped="" ref="0x7feda7915340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7feda79154d0"/>
        <function-ref name="set" scoped="" ref="0x7feda7915660"/>
        <function-ref name="clr" scoped="" ref="0x7feda79157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feda78c8020" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7feda78c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feda78c83c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feda78c8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feda78c70d0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda78c70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feda78c7470"/>
        <function-ref name="configure" scoped="" ref="0x7feda78c7600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feda78c9210" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda78c9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda78c95b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda78c9740"/>
        <function-ref name="request" scoped="" ref="0x7feda78c98d0"/>
        <function-ref name="granted" scoped="" ref="0x7feda78c9a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda78c9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feda78c87a0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda78c87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feda78c8b20"/>
        <function-ref name="userId" scoped="" ref="0x7feda78c8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda6ce5420" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda6ce5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda6ce57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7feda6ce5a30" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7feda6ce5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feda6ce5db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feda6ce4020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feda6ce41b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7feda6ce4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7feda6ce2850" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7feda6ce2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7feda6ce2bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7feda6ce2d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7feda6ce1910" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7feda6ce1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7feda6ce1cb0"/>
        <function-ref name="configure" scoped="" ref="0x7feda6ce1e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7feda6cdf120" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7feda6cdf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7feda6cdf4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7feda6cdf630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7feda6cdf7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7feda6cdf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7feda6ce39d0" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7feda6ce39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7feda6ce3d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7feda6ce2020"/>
        <function-ref name="request" scoped="" ref="0x7feda6ce21b0"/>
        <function-ref name="granted" scoped="" ref="0x7feda6ce2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7feda6ce24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7feda6ce1020" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7feda6ce1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7feda6ce13a0"/>
        <function-ref name="userId" scoped="" ref="0x7feda6ce1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7feda6cdfc20" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7feda6cdfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda6cde020"/>
        <function-ref name="runTask" scoped="" ref="0x7feda6cde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7feda78aed80" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda78aed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7feda78b6180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda78b6310"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda78b64a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda78b6630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda78b67c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda78b6950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda78b6ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda78b6c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7feda78b6e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda78b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feda78b5530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7feda78b5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7feda78aa9a0"/>
        <function-ref name="test" scoped="" ref="0x7feda78aa020"/>
        <function-ref name="get" scoped="" ref="0x7feda78ad1b0"/>
        <function-ref name="captured" scoped="" ref="0x7feda78adb80"/>
        <function-ref name="reset" scoped="" ref="0x7feda78ab0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda78aa4e0"/>
        <function-ref name="set" scoped="" ref="0x7feda78ad670"/>
        <function-ref name="start" scoped="" ref="0x7feda78ab590"/>
        <function-ref name="stop" scoped="" ref="0x7feda78aba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feda78a9650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7feda78a9650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda78a5110"/>
        <function-ref name="fired" scoped="" ref="0x7feda78a8da0"/>
        <function-ref name="get" scoped="" ref="0x7feda78a83d0"/>
        <function-ref name="reset" scoped="" ref="0x7feda78a62a0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda78a55d0"/>
        <function-ref name="set" scoped="" ref="0x7feda78a8890"/>
        <function-ref name="start" scoped="" ref="0x7feda78a6760"/>
        <function-ref name="stop" scoped="" ref="0x7feda78a6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda78bfb20" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda78bfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda78b9e60"/>
        <function-ref name="test" scoped="" ref="0x7feda78b94e0"/>
        <function-ref name="get" scoped="" ref="0x7feda78bb790"/>
        <function-ref name="setScale" scoped="" ref="0x7feda78b8350"/>
        <function-ref name="getScale" scoped="" ref="0x7feda78b8860"/>
        <function-ref name="reset" scoped="" ref="0x7feda78ba670"/>
        <function-ref name="overflow" scoped="" ref="0x7feda78ba1b0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda78b99a0"/>
        <function-ref name="set" scoped="" ref="0x7feda78bbc50"/>
        <function-ref name="start" scoped="" ref="0x7feda78bab30"/>
        <function-ref name="stop" scoped="" ref="0x7feda78b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7feda789b020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda789b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7feda789b3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda789b530"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda789b6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda789b850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda789b9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda789bb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda789bd00"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda789a020"/>
        <function-ref name="setControlC" scoped="" ref="0x7feda789a1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda789a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7feda78955a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7feda78955a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda7891020"/>
        <function-ref name="fired" scoped="" ref="0x7feda7894c10"/>
        <function-ref name="get" scoped="" ref="0x7feda7894240"/>
        <function-ref name="reset" scoped="" ref="0x7feda7893110"/>
        <function-ref name="isOn" scoped="" ref="0x7feda78914e0"/>
        <function-ref name="set" scoped="" ref="0x7feda7894700"/>
        <function-ref name="start" scoped="" ref="0x7feda78935d0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7893a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feda789a850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7feda789a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7feda7897e60"/>
        <function-ref name="test" scoped="" ref="0x7feda78974e0"/>
        <function-ref name="get" scoped="" ref="0x7feda78994c0"/>
        <function-ref name="captured" scoped="" ref="0x7feda7898020"/>
        <function-ref name="reset" scoped="" ref="0x7feda7898530"/>
        <function-ref name="isOn" scoped="" ref="0x7feda78979a0"/>
        <function-ref name="set" scoped="" ref="0x7feda7899980"/>
        <function-ref name="start" scoped="" ref="0x7feda78989f0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7897020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7feda7891ba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7feda7891ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda788e550"/>
        <function-ref name="fired" scoped="" ref="0x7feda788f1f0"/>
        <function-ref name="get" scoped="" ref="0x7feda78907f0"/>
        <function-ref name="reset" scoped="" ref="0x7feda788f6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda788ea10"/>
        <function-ref name="set" scoped="" ref="0x7feda7890cb0"/>
        <function-ref name="start" scoped="" ref="0x7feda788fb70"/>
        <function-ref name="stop" scoped="" ref="0x7feda788e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7feda788c120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7feda788c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda788aa90"/>
        <function-ref name="fired" scoped="" ref="0x7feda788b770"/>
        <function-ref name="get" scoped="" ref="0x7feda788cd50"/>
        <function-ref name="reset" scoped="" ref="0x7feda788bc30"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7889020"/>
        <function-ref name="set" scoped="" ref="0x7feda788b260"/>
        <function-ref name="start" scoped="" ref="0x7feda788a110"/>
        <function-ref name="stop" scoped="" ref="0x7feda788a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda78a3b90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda78a3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda789d020"/>
        <function-ref name="test" scoped="" ref="0x7feda789e550"/>
        <function-ref name="get" scoped="" ref="0x7feda78a07f0"/>
        <function-ref name="setScale" scoped="" ref="0x7feda789d4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7feda789d9f0"/>
        <function-ref name="reset" scoped="" ref="0x7feda789f6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda789f1f0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda789ea10"/>
        <function-ref name="set" scoped="" ref="0x7feda78a0cb0"/>
        <function-ref name="start" scoped="" ref="0x7feda789fb70"/>
        <function-ref name="stop" scoped="" ref="0x7feda789e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feda77bb6e0" loc="30:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda77bb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TOne" ref="0x7feda880c410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda77b7020"/>
        <function-ref name="fired" scoped="" ref="0x7feda77b9020"/>
        <function-ref name="startAt" scoped="" ref="0x7feda77b99a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda77b94e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda77b74e0"/>
        <function-ref name="start" scoped="" ref="0x7feda77ba5b0"/>
        <function-ref name="stop" scoped="" ref="0x7feda77baac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7805b50" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7805b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7feda88e29c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7feda88e29c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda77f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feda77f8410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda77f8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda77f4810"/>
        <function-ref name="test" scoped="" ref="0x7feda77f6e60"/>
        <function-ref name="get" scoped="" ref="0x7feda77f7090"/>
        <function-ref name="setScale" scoped="" ref="0x7feda77f4cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7feda77f3260"/>
        <function-ref name="reset" scoped="" ref="0x7feda77f6020"/>
        <function-ref name="overflow" scoped="" ref="0x7feda77f7a60"/>
        <function-ref name="isOn" scoped="" ref="0x7feda77f4350"/>
        <function-ref name="set" scoped="" ref="0x7feda77f7550"/>
        <function-ref name="start" scoped="" ref="0x7feda77f64e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda77f69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7feda6cb4610" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7feda6cb4610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7feda88e2640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7feda88e2640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TOne" ref="0x7feda880c410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda6cb1020"/>
        <function-ref name="fired" scoped="" ref="0x7feda6cb2020"/>
        <function-ref name="startAt" scoped="" ref="0x7feda6cb29a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda6cb24e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7feda6cb14e0"/>
        <function-ref name="start" scoped="" ref="0x7feda6cb35b0"/>
        <function-ref name="stop" scoped="" ref="0x7feda6cb3ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7feda6cacdb0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7feda6cacdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda6ca89a0"/>
        <function-ref name="fired" scoped="" ref="0x7feda6ca9530"/>
        <function-ref name="get" scoped="" ref="0x7feda6caaa10"/>
        <function-ref name="reset" scoped="" ref="0x7feda6ca99f0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda6ca8e60"/>
        <function-ref name="set" scoped="" ref="0x7feda6ca9020"/>
        <function-ref name="start" scoped="" ref="0x7feda6ca8020"/>
        <function-ref name="stop" scoped="" ref="0x7feda6ca84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7feda6cb1a30" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7feda6cb1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda6cade60"/>
        <function-ref name="test" scoped="" ref="0x7feda6cad4e0"/>
        <function-ref name="get" scoped="" ref="0x7feda6caf6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7feda6cac350"/>
        <function-ref name="getScale" scoped="" ref="0x7feda6cac860"/>
        <function-ref name="reset" scoped="" ref="0x7feda6cae590"/>
        <function-ref name="overflow" scoped="" ref="0x7feda6cae0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda6cad9a0"/>
        <function-ref name="set" scoped="" ref="0x7feda6cafb70"/>
        <function-ref name="start" scoped="" ref="0x7feda6caea50"/>
        <function-ref name="stop" scoped="" ref="0x7feda6cad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feda77b33a0" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7feda77b33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda77b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda77af200" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda77af200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TOne" ref="0x7feda880c410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda77ae090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda77aea10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda77ae550"/>
        <function-ref name="overflow" scoped="" ref="0x7feda77ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda7798020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda7798020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TOne" ref="0x7feda880c410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7798e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7797800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7797340"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7797cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feda7796280" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7796280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda7792810"/>
        <function-ref name="test" scoped="" ref="0x7feda7793e60"/>
        <function-ref name="get" scoped="" ref="0x7feda7795020"/>
        <function-ref name="setScale" scoped="" ref="0x7feda7792cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7feda7791260"/>
        <function-ref name="reset" scoped="" ref="0x7feda7793020"/>
        <function-ref name="overflow" scoped="" ref="0x7feda77959f0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7792350"/>
        <function-ref name="set" scoped="" ref="0x7feda77954e0"/>
        <function-ref name="start" scoped="" ref="0x7feda77934e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda77939a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7feda776f0f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7feda776f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda776e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda776e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda776e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda776ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda778dcf0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda778dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7772b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7771550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7771090"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7771a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7feda776cb60" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7feda776cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda776a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feda776ae40" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda776ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7769ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7768670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda77681b0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7768b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7feda77619a0" loc="36:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7feda77619a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7feda775e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda7703710" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda7703710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7703a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda7703c20"/>
        <function-ref name="start" scoped="" ref="0x7feda7703db0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7700020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda77007f0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda77007f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7700b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda7700d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda76ff020"/>
        <function-ref name="cancel" scoped="" ref="0x7feda76ff1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda76ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda76fe2b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda76fe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda76fe630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda76fe7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda76fe950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda76feae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda76fec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda76ffb20" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda76ffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda76fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feda76fb300" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda76fb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda76fb680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda76fb810"/>
        <function-ref name="led1On" scoped="" ref="0x7feda76fb9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda76fbb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda76fbcc0"/>
        <function-ref name="get" scoped="" ref="0x7feda76fbe50"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda76fa020"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda76fa660"/>
        <function-ref name="set" scoped="" ref="0x7feda76fa1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7feda76fa340"/>
        <function-ref name="led2On" scoped="" ref="0x7feda76fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feda76fc800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda76fc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda76fcb80"/>
        <function-ref name="noAck" scoped="" ref="0x7feda76fcd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda76fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda76fd020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda76fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda76fd3a0"/>
        <function-ref name="source" scoped="" ref="0x7feda76fd530"/>
        <function-ref name="address" scoped="" ref="0x7feda76fd6c0"/>
        <function-ref name="destination" scoped="" ref="0x7feda76fd850"/>
        <function-ref name="setSource" scoped="" ref="0x7feda76fd9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda76fdb70"/>
        <function-ref name="type" scoped="" ref="0x7feda76fdd00"/>
        <function-ref name="setType" scoped="" ref="0x7feda76fc020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda76fc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda76fc340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda76fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7feda7698d90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7feda7698d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7696180"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda7696310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda76964a0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7696630"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda76967c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7feda7696a50" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7feda7696a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7696dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7feda76f8b40" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7feda76f8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda769b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda769b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda769b340"/>
        <function-ref name="cancel" scoped="" ref="0x7feda769b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda769b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7feda7699720" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7feda7699720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7feda7699aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7feda7699c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda7699dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda7698020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7feda76981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda769b9e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda769b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda769bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7feda7698400" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7feda7698400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7feda7698780"/>
        <function-ref name="noAck" scoped="" ref="0x7feda7698910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7feda7698aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7feda769a020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7feda769a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7feda769a3a0"/>
        <function-ref name="source" scoped="" ref="0x7feda769a530"/>
        <function-ref name="address" scoped="" ref="0x7feda769a6c0"/>
        <function-ref name="destination" scoped="" ref="0x7feda769a850"/>
        <function-ref name="setSource" scoped="" ref="0x7feda769a9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7feda769ab70"/>
        <function-ref name="type" scoped="" ref="0x7feda769ad00"/>
        <function-ref name="setType" scoped="" ref="0x7feda7699020"/>
        <function-ref name="isForMe" scoped="" ref="0x7feda76991b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7feda7699340"/>
        <function-ref name="localGroup" scoped="" ref="0x7feda76994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda76914e0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda76914e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7691860"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda76919f0"/>
        <function-ref name="start" scoped="" ref="0x7feda7691b80"/>
        <function-ref name="stop" scoped="" ref="0x7feda7691d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda768f020" loc="52:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda768f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feda85eb020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda768f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda768f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda768f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda768f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda768f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7694e60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7694e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7691210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda76904c0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda76904c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feda85eb020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7690840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feda768e940" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda768e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda768ecc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda768ee50"/>
        <function-ref name="led1On" scoped="" ref="0x7feda768d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda768d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda768d340"/>
        <function-ref name="get" scoped="" ref="0x7feda768d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda768d660"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda768dca0"/>
        <function-ref name="set" scoped="" ref="0x7feda768d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7feda768d980"/>
        <function-ref name="led2On" scoped="" ref="0x7feda768db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7feda768e020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7feda768e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feda85eb020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7feda768e3a0"/>
        <function-ref name="offset" scoped="" ref="0x7feda768e530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7feda768e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7feda7669b70" loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7feda7669b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7feda7668020"/>
        <function-ref name="stopDone" scoped="" ref="0x7feda76681b0"/>
        <function-ref name="start" scoped="" ref="0x7feda7668340"/>
        <function-ref name="stop" scoped="" ref="0x7feda76684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7feda7602e40" loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7feda7602e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda76001e0"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7600370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7feda7653530" loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7feda7653530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda76538b0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7653a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7feda7639d50" loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7feda7639d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7638100"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7638290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7669520" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7669520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda76698a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7feda7651130" loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7feda7651130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7feda76514b0"/>
        <function-ref name="flush" scoped="" ref="0x7feda7651640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7feda7604400" loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7feda7604400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7604780"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7604910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7feda7658410" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7feda7658410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7feda7658790"/>
        <function-ref name="resetSend" scoped="" ref="0x7feda7658920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7feda7658ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7feda7658c40"/>
        <function-ref name="putData" scoped="" ref="0x7feda7658dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7feda7661020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7feda76611b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feda7661430" loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda7661430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda76617b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda7661940"/>
        <function-ref name="led1On" scoped="" ref="0x7feda7661ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda7661c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda7661df0"/>
        <function-ref name="get" scoped="" ref="0x7feda765e020"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda765e1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda765e7f0"/>
        <function-ref name="set" scoped="" ref="0x7feda765e340"/>
        <function-ref name="led0On" scoped="" ref="0x7feda765e4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7feda765e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7feda75fd0c0" loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7feda75fd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda75fd440"/>
        <function-ref name="runTask" scoped="" ref="0x7feda75fd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7feda7662a40" loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7feda7662a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7feda7662dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7feda7667020"/>
        <function-ref name="startSend" scoped="" ref="0x7feda76671b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7feda7667340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7feda7666080" loc="68:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feda7666080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7feda7666400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7feda7666590"/>
        <function-ref name="endPacket" scoped="" ref="0x7feda7666720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7feda7532020" loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7feda7532020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda75323a0"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7532530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7feda7537de0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7feda7537de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feda85eb020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda75361c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7feda7536350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7feda75364e0"/>
        <function-ref name="cancel" scoped="" ref="0x7feda7536670"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7536800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7feda7532800" loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7feda7532800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7feda7532b80"/>
        <function-ref name="runTask" scoped="" ref="0x7feda7532d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7feda75376c0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7feda75376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feda85eb020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7feda7537a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7feda7536c20" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7feda7536c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7feda85eb020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7feda7535020"/>
        <function-ref name="offset" scoped="" ref="0x7feda75351b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7feda7535340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feda7534920" loc="57:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda7534920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda7534ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda7534e30"/>
        <function-ref name="led1On" scoped="" ref="0x7feda7533020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda75331b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda7533340"/>
        <function-ref name="get" scoped="" ref="0x7feda75334d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda7533660"/>
        <function-ref name="led2On" scoped="" ref="0x7feda7533ca0"/>
        <function-ref name="set" scoped="" ref="0x7feda7533980"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda75337f0"/>
        <function-ref name="led0On" scoped="" ref="0x7feda7533b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7feda7535e80" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7feda7535e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7feda7534220"/>
        <function-ref name="nextByte" scoped="" ref="0x7feda75343b0"/>
        <function-ref name="startSend" scoped="" ref="0x7feda7534540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7feda75346d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7feda7535590" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7feda7535590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7feda7535910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7feda7535aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7feda7535c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7feda7522d20" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7feda7522d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda752b0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feda752b270"/>
        <function-ref name="receive" scoped="" ref="0x7feda752b400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feda752b590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feda752b720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feda752b8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda752ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7feda7530e10" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7feda7530e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7feda752d1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7feda752d350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7feda752d4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7feda752d670"/>
        <function-ref name="putData" scoped="" ref="0x7feda752d800"/>
        <function-ref name="putDone" scoped="" ref="0x7feda752d990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7feda752db20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7feda752bcc0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7feda752bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7feda752a0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7feda752a230"/>
        <function-ref name="led1On" scoped="" ref="0x7feda752a3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7feda752a550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7feda752a6e0"/>
        <function-ref name="get" scoped="" ref="0x7feda752a870"/>
        <function-ref name="led1Off" scoped="" ref="0x7feda752aa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7feda75201b0"/>
        <function-ref name="set" scoped="" ref="0x7feda752ab90"/>
        <function-ref name="led0On" scoped="" ref="0x7feda752ad20"/>
        <function-ref name="led2On" scoped="" ref="0x7feda7520020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feda7500d50" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7feda7500d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7503100"/>
        <function-ref name="receive" scoped="" ref="0x7feda7503290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feda7505960" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7feda7505960"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda7505ce0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feda7505e70"/>
        <function-ref name="receive" scoped="" ref="0x7feda7504030"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feda75041c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feda7504350"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feda75044e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda7504670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feda7505150" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7feda7505150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda75054d0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7505660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feda74fe820" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7feda74fe820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda74feba0"/>
        <function-ref name="receive" scoped="" ref="0x7feda74fed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feda74fd080" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7feda74fd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda74fd400"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feda74fd590"/>
        <function-ref name="receive" scoped="" ref="0x7feda74fd720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feda74fd8b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feda74fda40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feda74fdbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda74fdd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feda74fc360" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda74fc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda74fa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda74fab30"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda74fa670"/>
        <function-ref name="overflow" scoped="" ref="0x7feda74f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feda74fe020" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7feda74fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74fe3a0"/>
        <function-ref name="stop" scoped="" ref="0x7feda74fe530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7feda74b5dd0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7feda74b5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda74b4180"/>
        <function-ref name="receive" scoped="" ref="0x7feda74b4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7feda74b3610" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7feda74b3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74b3990"/>
        <function-ref name="stop" scoped="" ref="0x7feda74b3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda74b5020" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda74b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda74b53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7feda74b45a0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7feda74b45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7feda74b4920"/>
        <function-ref name="receivedByte" scoped="" ref="0x7feda74b4ab0"/>
        <function-ref name="receive" scoped="" ref="0x7feda74b4c40"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7feda74b4dd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7feda74b3020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7feda74b31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7feda74b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7feda74b0cc0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda74b0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda74afb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda74ae550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda74ae090"/>
        <function-ref name="overflow" scoped="" ref="0x7feda74aea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7feda74b1620" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7feda74b1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feda74b19a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feda74b1b30"/>
        <function-ref name="rxDone" scoped="" ref="0x7feda74b1cc0"/>
        <function-ref name="txDone" scoped="" ref="0x7feda74b1e50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feda74b0020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feda74b01b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feda74b0340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7feda74b04d0"/>
        <function-ref name="tx" scoped="" ref="0x7feda74b0660"/>
        <function-ref name="rx" scoped="" ref="0x7feda74b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7feda74b5630" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7feda74b5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74b59b0"/>
        <function-ref name="stop" scoped="" ref="0x7feda74b5b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7feda74b3df0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7feda74b3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74b11c0"/>
        <function-ref name="stop" scoped="" ref="0x7feda74b1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7feda74915f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7feda74915f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feda7491970"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feda7491b00"/>
        <function-ref name="rxDone" scoped="" ref="0x7feda7491c90"/>
        <function-ref name="txDone" scoped="" ref="0x7feda7491e20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feda7490020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feda74901b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feda7490340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7feda74904d0"/>
        <function-ref name="tx" scoped="" ref="0x7feda7490660"/>
        <function-ref name="rx" scoped="" ref="0x7feda74907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7feda748fdd0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7feda748fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feda748e180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feda748e310"/>
        <function-ref name="rxDone" scoped="" ref="0x7feda748e4a0"/>
        <function-ref name="txDone" scoped="" ref="0x7feda748e630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feda748e7c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feda748e950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feda748eae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7feda748ec70"/>
        <function-ref name="tx" scoped="" ref="0x7feda748ee00"/>
        <function-ref name="rx" scoped="" ref="0x7feda748d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7feda7492d20" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7feda7492d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74910e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7491270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7feda7490b80" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7feda7490b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda748f020"/>
        <function-ref name="stop" scoped="" ref="0x7feda748f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7feda748f540" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7feda748f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda748f8c0"/>
        <function-ref name="stop" scoped="" ref="0x7feda748fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7feda7492480" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7feda7492480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda7492800"/>
        <function-ref name="stop" scoped="" ref="0x7feda7492990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7feda748dd80" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7feda748dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda7489180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7feda7488730" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7feda7488730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feda7488ab0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feda7488c40"/>
        <function-ref name="rxDone" scoped="" ref="0x7feda7488dd0"/>
        <function-ref name="txDone" scoped="" ref="0x7feda7487020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feda74871b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feda7487340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feda74874d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7feda7487660"/>
        <function-ref name="tx" scoped="" ref="0x7feda74877f0"/>
        <function-ref name="rx" scoped="" ref="0x7feda7487980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7feda7487ce0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7feda7487ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda74860a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7feda7485650" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7feda7485650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7feda74859d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7feda7485b60"/>
        <function-ref name="rxDone" scoped="" ref="0x7feda7485cf0"/>
        <function-ref name="txDone" scoped="" ref="0x7feda7485e80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7feda7484030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7feda74841c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7feda7484350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7feda74844e0"/>
        <function-ref name="tx" scoped="" ref="0x7feda7484670"/>
        <function-ref name="rx" scoped="" ref="0x7feda7484800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7feda7489e30" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7feda7489e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74881e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7488370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7feda7486470" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7feda7486470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74867f0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7486980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7feda7486d50" loc="121:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7feda7486d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda7485100"/>
        <function-ref name="stop" scoped="" ref="0x7feda7485290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7feda7484b30" loc="124:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7feda7484b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7feda7483020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7feda74831b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7feda7483340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7feda74834d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7feda7483660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7feda7483980" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7feda7483980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7feda7483d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7feda7489550" loc="115:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7feda7489550"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7feda74898d0"/>
        <function-ref name="stop" scoped="" ref="0x7feda7489a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda7424bb0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda7424bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7421a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda74204e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7420020"/>
        <function-ref name="overflow" scoped="" ref="0x7feda74209a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda741ec50" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda741ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TThree" ref="0x7feda880c7b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda741ba80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda741a4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda741a020"/>
        <function-ref name="overflow" scoped="" ref="0x7feda741a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7feda7412dc0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda7412dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7feda7411180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda7411310"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda74114a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda7411630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda74117c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda7411950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda7411ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda7411c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7feda7411e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda7410020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feda7410530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7feda7410530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7feda740c9a0"/>
        <function-ref name="test" scoped="" ref="0x7feda740c020"/>
        <function-ref name="get" scoped="" ref="0x7feda740e1b0"/>
        <function-ref name="captured" scoped="" ref="0x7feda740eb80"/>
        <function-ref name="reset" scoped="" ref="0x7feda740d0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda740c4e0"/>
        <function-ref name="set" scoped="" ref="0x7feda740e670"/>
        <function-ref name="start" scoped="" ref="0x7feda740d590"/>
        <function-ref name="stop" scoped="" ref="0x7feda740da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7feda740a650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7feda740a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda7407110"/>
        <function-ref name="fired" scoped="" ref="0x7feda7409da0"/>
        <function-ref name="get" scoped="" ref="0x7feda74093d0"/>
        <function-ref name="reset" scoped="" ref="0x7feda74082a0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda74075d0"/>
        <function-ref name="set" scoped="" ref="0x7feda7409890"/>
        <function-ref name="start" scoped="" ref="0x7feda7408760"/>
        <function-ref name="stop" scoped="" ref="0x7feda7408c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda7419b30" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7419b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda7413e60"/>
        <function-ref name="test" scoped="" ref="0x7feda74134e0"/>
        <function-ref name="get" scoped="" ref="0x7feda7416790"/>
        <function-ref name="setScale" scoped="" ref="0x7feda7412350"/>
        <function-ref name="getScale" scoped="" ref="0x7feda7412860"/>
        <function-ref name="reset" scoped="" ref="0x7feda7414670"/>
        <function-ref name="overflow" scoped="" ref="0x7feda74141b0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda74139a0"/>
        <function-ref name="set" scoped="" ref="0x7feda7416c50"/>
        <function-ref name="start" scoped="" ref="0x7feda7414b30"/>
        <function-ref name="stop" scoped="" ref="0x7feda7413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7feda73fd020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7feda73fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7feda73fd3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7feda73fd530"/>
        <function-ref name="getControlA" scoped="" ref="0x7feda73fd6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7feda73fd850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7feda73fd9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7feda73fdb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7feda73fdd00"/>
        <function-ref name="getControlB" scoped="" ref="0x7feda73fc020"/>
        <function-ref name="setControlC" scoped="" ref="0x7feda73fc1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7feda73fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7feda73f75a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7feda73f75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda73f3020"/>
        <function-ref name="fired" scoped="" ref="0x7feda73f6c10"/>
        <function-ref name="get" scoped="" ref="0x7feda73f6240"/>
        <function-ref name="reset" scoped="" ref="0x7feda73f4110"/>
        <function-ref name="isOn" scoped="" ref="0x7feda73f34e0"/>
        <function-ref name="set" scoped="" ref="0x7feda73f6700"/>
        <function-ref name="start" scoped="" ref="0x7feda73f45d0"/>
        <function-ref name="stop" scoped="" ref="0x7feda73f4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7feda73fc850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7feda73fc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7feda73f8e60"/>
        <function-ref name="test" scoped="" ref="0x7feda73f84e0"/>
        <function-ref name="get" scoped="" ref="0x7feda73fb4c0"/>
        <function-ref name="captured" scoped="" ref="0x7feda73fa020"/>
        <function-ref name="reset" scoped="" ref="0x7feda73fa530"/>
        <function-ref name="isOn" scoped="" ref="0x7feda73f89a0"/>
        <function-ref name="set" scoped="" ref="0x7feda73fb980"/>
        <function-ref name="start" scoped="" ref="0x7feda73fa9f0"/>
        <function-ref name="stop" scoped="" ref="0x7feda73f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7feda73f3ba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7feda73f3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda73ef550"/>
        <function-ref name="fired" scoped="" ref="0x7feda73f11f0"/>
        <function-ref name="get" scoped="" ref="0x7feda73f27f0"/>
        <function-ref name="reset" scoped="" ref="0x7feda73f16b0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda73efa10"/>
        <function-ref name="set" scoped="" ref="0x7feda73f2cb0"/>
        <function-ref name="start" scoped="" ref="0x7feda73f1b70"/>
        <function-ref name="stop" scoped="" ref="0x7feda73ef090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7feda73ee120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7feda73ee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7feda73eca90"/>
        <function-ref name="fired" scoped="" ref="0x7feda73ed770"/>
        <function-ref name="get" scoped="" ref="0x7feda73eed50"/>
        <function-ref name="reset" scoped="" ref="0x7feda73edc30"/>
        <function-ref name="isOn" scoped="" ref="0x7feda73ea020"/>
        <function-ref name="set" scoped="" ref="0x7feda73ed260"/>
        <function-ref name="start" scoped="" ref="0x7feda73ec110"/>
        <function-ref name="stop" scoped="" ref="0x7feda73ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda7405b90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7405b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda73fe020"/>
        <function-ref name="test" scoped="" ref="0x7feda7400550"/>
        <function-ref name="get" scoped="" ref="0x7feda74027f0"/>
        <function-ref name="setScale" scoped="" ref="0x7feda73fe4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7feda73fe9f0"/>
        <function-ref name="reset" scoped="" ref="0x7feda74016b0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda74011f0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda7400a10"/>
        <function-ref name="set" scoped="" ref="0x7feda7402cb0"/>
        <function-ref name="start" scoped="" ref="0x7feda7401b70"/>
        <function-ref name="stop" scoped="" ref="0x7feda7400090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7feda7370c60" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7feda7370c60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7feda88e29c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7feda88e29c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7feda736f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feda736f410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda736f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda736b810"/>
        <function-ref name="test" scoped="" ref="0x7feda736de60"/>
        <function-ref name="get" scoped="" ref="0x7feda736e090"/>
        <function-ref name="setScale" scoped="" ref="0x7feda736bcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7feda736a260"/>
        <function-ref name="reset" scoped="" ref="0x7feda736d020"/>
        <function-ref name="overflow" scoped="" ref="0x7feda736ea60"/>
        <function-ref name="isOn" scoped="" ref="0x7feda736b350"/>
        <function-ref name="set" scoped="" ref="0x7feda736e550"/>
        <function-ref name="start" scoped="" ref="0x7feda736d4e0"/>
        <function-ref name="stop" scoped="" ref="0x7feda736d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda73683c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda73683c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TThree" ref="0x7feda880c7b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7366240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda7366bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda7366700"/>
        <function-ref name="overflow" scoped="" ref="0x7feda73650d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7feda7365660" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda7365660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7feda7361a90"/>
        <function-ref name="test" scoped="" ref="0x7feda7361110"/>
        <function-ref name="get" scoped="" ref="0x7feda73643d0"/>
        <function-ref name="setScale" scoped="" ref="0x7feda7360020"/>
        <function-ref name="getScale" scoped="" ref="0x7feda7360530"/>
        <function-ref name="reset" scoped="" ref="0x7feda73622a0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7364da0"/>
        <function-ref name="isOn" scoped="" ref="0x7feda73615d0"/>
        <function-ref name="set" scoped="" ref="0x7feda7364890"/>
        <function-ref name="start" scoped="" ref="0x7feda7362760"/>
        <function-ref name="stop" scoped="" ref="0x7feda7362c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7feda73580f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7feda73580f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TThree" ref="0x7feda880c7b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda7357020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda73579a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda73574e0"/>
        <function-ref name="overflow" scoped="" ref="0x7feda7357e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7feda735ccd0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7feda735ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda8850d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7feda884f180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7feda735bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7feda735a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7feda735a090"/>
        <function-ref name="overflow" scoped="" ref="0x7feda735aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7feda734b1e0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7feda734b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7feda734b560"/>
        <function-ref name="offset" scoped="" ref="0x7feda734b6f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7feda734b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7feda733cbd0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.t1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7feda733cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7feda88529b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7feda8852d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7feda7330110"/>
        <function-ref name="fired" scoped="" ref="0x7feda73326a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7feda73314a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7feda7331020"/>
        <function-ref name="getdt" scoped="" ref="0x7feda7330a10"/>
        <function-ref name="gett0" scoped="" ref="0x7feda7330590"/>
        <function-ref name="isRunning" scoped="" ref="0x7feda7332b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7feda7333860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7feda7331ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7feda7333d30"/>
        <function-ref name="stop" scoped="" ref="0x7feda7332220"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7feda87c5d00" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7feda87c68e0" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7feda87bab70" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7feda87ba8f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7feda87bd020" loc="31:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7feda87bdaa0" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7feda87bd820" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7feda87bc5e0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7feda87bc360" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7feda87ba020" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7feda87a90e0" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7feda87a9810" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7feda87aa2b0" loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7feda87a7760" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda87aa9b0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7feda87a7020" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda87ab4c0" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7feda87abb90" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7feda9295c40" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7feda88c2bf0" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7feda88c23e0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7feda88bac50" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7feda88b84f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7feda8805ac0" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7feda87e51f0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7feda887c470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7feda881db80" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7feda8445110" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feda8446e40" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7feda8444600" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feda8444380" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feda8446460" loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda8445960" loc="130:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7feda83c39f0" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83c3770" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7feda83ce6d0" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83ce450" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7feda83dcad0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7feda83cf600" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83cf380" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7feda83cb020" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83caa00" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda83cad50" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7feda83cdac0" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83cd4e0" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda83cd830" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7feda83c74a0" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83c7220" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7feda83c6850" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83c62a0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7feda83c65c0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7feda85eec10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7feda83c82a0" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83c8020" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7feda83c5020" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7feda83c28c0" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7feda83c2c10" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7feda83c5e40" loc="195:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7feda83d9910" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83d9690" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7feda83d79d0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83d7750" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feda83d3020" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83d4910" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda83d4c40" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feda83d4020" loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7feda83d5020" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83d68f0" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda83d6c20" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7feda83bc060" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
              <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83bd6d0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7feda83bda20" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda83bdd50" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda83b5020" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda83b5020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7feda83afc50" loc="136:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feda83b25b0" loc="83:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7feda83b0360" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feda83b1d60" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7feda83b00d0" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7feda83b15b0" loc="98:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7feda83adca0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7feda83ad420" loc="144:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7feda83b2d90" loc="92:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7feda83b5b90" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feda83b5910" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7feda83af2f0" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feda83b0d00" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7feda83af060" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7feda83b4680" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feda83b4400" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda83b4e80" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7feda83e32c0" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7feda83e57e0" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7feda83e5b60" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda83e3020" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feda83df970" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83df370" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda83df6a0" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feda83dea60" loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feda83e1630" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83e13b0" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda83e0b80" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda83e05a0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feda83e08f0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7feda83a3070" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7feda83a3820" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7feda83a2030" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7feda83a0020" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7feda839f7d0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda839e020" loc="117:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7feda83a27c0" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda839eb90" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7feda839e910" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7feda83a48a0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7feda83a0800" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7feda839f020" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7feda82d9440" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7feda82dce10" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7feda82d91b0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7feda82cdb50" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82cd530" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7feda82cd8c0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7feda82cbd00" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82cba80" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7feda82cec60" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7feda82ce2a0" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7feda82ce020" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7feda82d5ad0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82d5850" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7feda82d2cd0" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82d2a50" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7feda82d1020" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82d3ce0" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7feda82c4040" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82c5d90" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7feda82c8040" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82d69f0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7feda82d6d80" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7feda82c5020" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82c7c80" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7feda82c7450" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82c8df0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7feda82c71c0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7feda82c3020" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82c4d70" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7feda82c0ab0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7feda82c02a0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7feda82c0020" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7feda82bf350" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7feda82ca510" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda82ca510"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feda82ca750" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda82ca750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7feda82bb5f0" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda82ca750"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82bb370" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7feda82b9780" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82b9500" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7feda82bc350" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82bc0d0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda82b8a90" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda82ca750"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82b84a0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7feda82b8800" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda82ca750"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7feda829f1d0" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7feda829f1d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7feda829c2e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda829c060" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda829e830" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7feda829f1d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda829e5b0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7feda829fd80" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda829fb00" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda829b050" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7feda829f1d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda829ca30" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7feda829cda0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7feda829f1d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda8292a70" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda8292a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7feda828e3b0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7feda82902a0" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8290020" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7feda826e9c0" loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7feda826f990" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7feda826f020" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7feda826e1f0" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7feda826c470" loc="128:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7feda8269a30" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82697b0" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7feda826a5f0" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7feda8269040" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda826ad90" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7feda82664c0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8267e80" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda8266230" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7feda8267790" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8267170" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda8267500" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7feda8265860" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7feda83fd8a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82655e0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7feda8263630" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7feda83fd8a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8263020" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7feda82633a0" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7feda83fd8a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7feda8266e50" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8266bd0" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7feda8263da0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7feda83fd8a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feda82779b0" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7feda8277060" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7feda82773e0" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda8277710" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feda8272020" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8273950" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda8273c80" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feda82730e0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feda8276790" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8276510" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda8275750" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8275170" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feda82754c0" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7feda821c570" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7feda8231720" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82314a0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7feda8220030" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8221d80" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7feda821e770" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda821e4f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7feda82227a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8222520" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7feda8224020" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8230d00" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7feda8221600" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8221020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda8221370" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7feda8224d60" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8224780" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda8224ad0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7feda8220d40" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8220760" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7feda8220ab0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7feda822a5e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7feda8229020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7feda82262e0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8226060" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7feda8229b30" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82298b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7feda8227680" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8227400" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7feda81fd7a0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7feda81fe8d0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7feda83ff850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7feda81fe650" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7feda83ff850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feda81fd070" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7feda8201df0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7feda81fc020" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7feda83ff850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7feda81f5550" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda81f52d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7feda81f9820" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda81f95a0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feda81f7020" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7feda81f86b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda81f80d0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7feda81f8420" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7feda81ffc90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda81ffa10" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7feda81f7ab0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda81f7830" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feda8246e10" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7feda82465f0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8246370" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7feda82449c0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8244740" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7feda82432b0" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7feda8243e30" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8243bb0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7feda8232020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8241c90" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7feda8239020" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7feda823b760" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda823b150" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7feda823b4d0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7feda823e2a0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda823e020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7feda823edb0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda823eb30" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7feda823dd40" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda823d730" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7feda823dab0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7feda82488a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7feda82406f0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8240150" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7feda8240460" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7feda823c8e0" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda823c660" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7feda820dd60" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820dae0" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7feda820e490" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820e210" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7feda821ac40" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda821a670" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7feda821a9b0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7feda8217d90" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8217b10" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7feda8207bd0" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82075f0" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda8207940" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7feda82172a0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8217020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7feda820d2f0" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820ecf0" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7feda820d060" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7feda82157d0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda82151c0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7feda8215540" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7feda8209e20" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8209ba0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7feda8219730" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82194b0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7feda82122a0" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8212020" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7feda82136e0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda82130d0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7feda8213450" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7feda8204390" loc="178:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7feda83fdcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7feda8206680" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8206400" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7feda8205b70" loc="173:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7feda83fd8a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7feda82093a0" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820ad90" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7feda8209110" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7feda8216910" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8216690" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7feda820f9d0" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820f400" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7feda820f740" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7feda820bb40" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820b570" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7feda820b8b0" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7feda8204dc0" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8204b40" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7feda82110c0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8212aa0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7feda8212db0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7feda8225e50" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8225bd0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7feda82052a0" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8205020" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7feda820a5f0" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda820a370" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7feda8211bc0" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8211940" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7feda8236b90" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda82365b0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7feda8236900" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7feda8234390" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7feda82372e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8237060" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7feda8237d70" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8237af0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7feda822e930" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda822e6b0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7feda8238d90" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8238b10" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7feda822d1f0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7feda822dcc0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda822da40" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda8196d10" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda8196d10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feda8193020" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7feda818fc50" loc="109:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feda8192ba0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7feda818f2b0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7feda8191bd0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7feda818f020" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7feda81913b0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7feda818e480" loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feda8193b80" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feda8193900" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda8193020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda81923e0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7feda817f780" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7feda817e0e0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7feda817ea60" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7feda817f020" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7feda8148020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda814bd50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feda8147b40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda81478c0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda8147020" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8148940" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feda8148c90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7feda8144630" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
              <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda8144370" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7feda8131ba0" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7feda812fb10" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7feda812f3b0" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7feda8131360" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7feda8134d00" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7feda85ed020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7feda81310d0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7feda8081540" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7feda8081e70" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7feda807b660" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7feda8082db0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7feda8083c80" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7feda807e530" loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7feda8072740" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feda807c7a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feda80724c0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feda807c7a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7feda8075750" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7feda80732a0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feda807c7a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feda8073020" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7feda807c7a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7feda8073bb0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7feda807c7a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7feda7f0e790" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
              <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7f0e4d0" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7feda7f11b20" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7f118a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7feda7efb2e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feda7efb060" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7feda7efba80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda7efc020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feda7f04d50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda7efc960" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feda7efc6e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7feda7f010b0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feda7f02db0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7feda7f005f0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feda7f00370" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7feda7f01b80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feda7f01900" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7feda7eff110" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7feda7f00e20" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7feda7f025b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7feda7f02330" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7feda85ed400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7feda7e6da50" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7feda7e69b70" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7feda7e68610" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7feda7e68390" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7feda7e68d90" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7feda7e69350" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7feda7e67670" loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7feda7e65350" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7e650d0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7feda7e63850" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda7e63020" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feda7e65c50" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7feda7def350" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7feda7df2ae0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7feda9204090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7feda7dc3360" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7feda7dc3360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7feda7dbf020" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7feda7dc3360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7feda7dc3c20" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7feda7dc3360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7feda7d986c0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7d98440" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda7d9b510" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7d9b290" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7feda7d9a2f0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7d9bcd0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7feda7d9a060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda7d9acc0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7d9aa40" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7feda7d66350" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feda7d660d0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7feda7d6a8b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda7ce24a0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda7ce24a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feda7ce26e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7ce26e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7feda7ce1030" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7ce26e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7feda7ce0190" loc="76:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7feda7ce18b0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7feda7ce08f0" loc="82:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7feda7cb2b20" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7feda7cb38e0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7feda7cb65a0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7feda7cb2350" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7feda7cb20d0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7feda7cb3110" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feda7cb4e30" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7feda7cb15c0" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7feda7cb1340" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7feda7cb6d40" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7feda7cb4710" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feda7cb4490" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7feda7ca1910" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7feda7ca3880" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7feda7ca2030" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7feda7ca2860" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7feda7c9f190" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7feda7ca10e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7feda7ca45e0" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7feda8836da0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7feda8835230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7feda7ca3040" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7feda8836da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7feda8835230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7feda7ca4da0" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7feda8836da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7feda8835230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7feda7cae0d0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7cae0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7feda7cab9f0" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7feda7cadbf0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda7caea10" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7cae0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7feda7cac390" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7feda7ca91f0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda7cad440" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7cae0d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7feda7cad1c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7cae0d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feda7cacb00" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda7cab270" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7feda7cc4430" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda7cc4430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7feda7cbe020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7feda7cbf020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda7cc4d60" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda7cc4430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7feda7cbea00" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7feda7cbe780" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7feda7cbd270" loc="110:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7feda7cc27b0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7feda7cc2020" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7feda7cbf7e0" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda7cc3760" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda7cc4430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7feda7cc34e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7feda7cc4430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feda7cc1020" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda7cc1770" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7feda7aae920" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7feda7aae920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7feda7aaeb60" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7aaeb60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7feda7aa86b0" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7aaeb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7feda7aa8430" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda7aaeb60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7feda7aac020" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7feda7aab1f0" loc="66:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7feda7aac9c0" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7feda7aac740" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7feda7aad760" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7feda7ab4810" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda7ab4590" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7feda7ab3bf0" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda7ab3970" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7feda7ab30e0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feda7ab16c0" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda7ab1440" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7feda79bd360" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda79bd360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7feda79b52a0" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7feda79b5020" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7feda79b6020" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7feda79bdca0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda79bd360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7feda79b9110" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda79bd360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7feda79bae10" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda79bd360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7feda79b98c0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7feda79b67e0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7feda79ba670" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda79bd360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7feda79ba3f0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7feda79bd360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7feda79b7070" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda79b77c0" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feda799b2c0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7feda799c8b0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7feda799cc40" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda799b020" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda799a800" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7feda7998ae0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7feda7998e70" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda799a1e0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feda799a550" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7feda799e4c0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7feda799e240" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7feda7984560" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7feda797a4d0" loc="126:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7feda797fdd0" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7feda7979020" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7feda797ac70" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7feda7985d80" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7feda797c9e0" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7feda797c760" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7feda7980510" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7feda7980290" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7feda79834e0" loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7feda7975c20" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7feda79759a0" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7feda7980cb0" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7feda79772a0" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7feda7977020" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7feda7976270" loc="136:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7feda797bc80" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7feda797ba00" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7feda7975270" loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7feda797e7d0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7feda797e550" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7feda7981020" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda7983c40" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7feda797f670" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7feda797f3f0" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7feda797b270" loc="123:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7feda7979790" loc="129:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7feda7977a00" loc="132:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7feda7976a20" loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7feda797c020" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7feda7984cf0" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7feda7981a20" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda79817a0" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7feda791ae10" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda79176a0" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7feda78b3850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7feda78b1de0" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7feda78b48f0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7feda78ae020" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7feda78af810" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7feda78af590" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7feda78b2c40" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feda78b29c0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7feda78aea20" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7feda78ae7a0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7feda78b30e0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7feda78b1610" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feda78b1390" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7feda78b22a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7feda78b2020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feda76ee2f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda76f1ce0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda76ee060" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7feda76ea890" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda76ea290" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda76ea5c0" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7feda76e99b0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7feda76ed5f0" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda76ed370" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda76ecac0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda76ec4e0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7feda76ec830" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7feda7689670" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda7689060" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7feda76893e0" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7feda768c820" loc="15:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7feda768b6d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7feda768b0d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7feda83e88e0"/>
                <typename><typedef-ref name="message_t" ref="0x7feda83e5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7feda768b440" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7feda7655760" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7feda7653020" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7feda7652e10" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7feda76526a0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7feda765d770" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7feda765bbe0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7feda7659840" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda76595c0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7feda765a4a0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7feda765b350" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda765b0d0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7feda76580e0" loc="100:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7feda765ad50" loc="85:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7feda76640e0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7feda7664a10" loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7feda7665720" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7feda76654a0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7feda76625c0" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7feda7662340" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7feda7660270" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7feda765f020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda7660c10" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7feda765faf0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7feda765f870" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feda752cde0" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feda752c810" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda752cb50" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7feda7526ac0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7feda7526840" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7feda7523930" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feda7523360" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda75236a0" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7feda7525740" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7feda75222c0" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feda7521920" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda7521c60" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feda7522020" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7feda7526070" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7feda7527720" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7feda7528db0" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7feda7527130" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7feda92055a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7feda7527480" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7feda75015b0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7feda7501330" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7feda7500430" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7feda7501e20" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7feda75001a0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7feda74ed820" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7feda74ef910" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7feda74e9110" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda74ebe60" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7feda74eb070" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7feda74f29b0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7feda74ef190" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7feda74ed0e0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7feda88bc600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7feda74ec020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7feda88e3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7feda74ec950" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7feda74ec6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7feda74eb790" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7feda9206a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
