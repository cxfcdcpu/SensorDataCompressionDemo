<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faf6e8e1530"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faf6ec5ecb0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7faf6ec5ecb0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7faf6ec5bdd0"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7faf6e8e0be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6e74b0c0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6e74b0c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6e718300"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7faf6e8e0020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6db6f710"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6db6f710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6dafc4e0"/></to>
    </wire>
    <wire loc="93:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7faf6e8db020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6db6c7f0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faf6db6c7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6db63b40"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7faf6e86ee30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6db6ab20"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6db6ab20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6db069e0"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7faf6e865870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6db692b0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faf6db692b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6db04720"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7faf6e8559b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6db68020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faf6db68020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6db05020"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6e8666e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6e74a1d0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faf6e74a1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6e717320"/></to>
    </wire>
    <wire loc="99:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e853a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e7493f0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e7493f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e716510"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7faf6e8526b0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7faf6e747020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7faf6e747020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7faf6e7151d0"/></to>
    </wire>
    <wire loc="101:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e852d70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6e742ce0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faf6e742ce0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6e712cd0"/></to>
    </wire>
    <wire loc="102:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7faf6e851b40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6e746990"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faf6e746990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6e711990"/></to>
    </wire>
    <wire loc="103:BaseStationC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7faf6e83b410"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7faf6d2e79c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7faf6d2e79c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7faf6caa4790"/></to>
    </wire>
    <wire loc="104:BaseStationC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7faf6e83fc70"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7faf6d2e5810"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7faf6d2e5810"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7faf6caa25d0"/></to>
    </wire>
    <wire loc="105:BaseStationC.nc">
      <from><interface-ref name="vLight" scoped="" ref="0x7faf6e83a4e0"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7faf6d20d310"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x7faf6d20d310"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x7faf6c7efb70"/></to>
    </wire>
    <wire loc="106:BaseStationC.nc">
      <from><interface-ref name="iLight" scoped="" ref="0x7faf6e839d30"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7faf6d20cbc0"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x7faf6d20cbc0"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x7faf6c7ed370"/></to>
    </wire>
    <wire loc="110:BaseStationC.nc">
      <from><interface-ref name="time" scoped="" ref="0x7faf6e844e10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d7a7bd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d7a7bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faf6dfab320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6e82a0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6e77b260"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6e77b260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6e777bc0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6c7b83b0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6c81f400"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6c8d93b0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6c90e590"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6c976cf0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6c9cf810"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7faf6d8f8d80"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7faf6d8f2ce0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6d920020"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6daffe60"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6cbd0420"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6df36b60"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e163540"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e22bdc0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6cd28e60"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e3493b0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6cd5b560"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6ce1a3b0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7faf6ea96470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7faf6eda1020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7faf6eda1020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7faf6ec9f8a0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ea94020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7faf6de29680"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ea94020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7faf6df36020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ea94020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6ec59b10"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6ec59b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6ec4f0c0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ea94720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7faf6ec57d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6d7dbc60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7faf6ec57d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6dc70b50"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6ec57020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6eab5690"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7faf6ec4e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6eab5020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7faf6ec4f7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e753920"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7faf6ec4f7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ec519e0"/></to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ec519e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ec46530"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7faf6ec49110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7faf6ec57d50"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7faf6ec3fad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7faf6ec34060"/></to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7faf6ec34060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7faf6eba8da0"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7faf6ec45cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7faf6ec49110"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7faf6ebfecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6eb0d160"/></to>
    </wire>
    <wire loc="165:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7faf6ec1a4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7faf6eb7c2b0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7faf6eb7c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d07ce20"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7faf6ec0d350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7faf6eb6b8f0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7faf6eb6b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0083f0"/></to>
    </wire>
    <wire loc="185:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7faf6ec04cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7faf6eb5bc10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7faf6eb5bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cf9d3f0"/></to>
    </wire>
    <wire loc="196:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7faf6ebf7060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6eaf36d0"/></to>
    </wire>
    <wire loc="143:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7faf6ec32670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7faf6eba42b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7faf6eba42b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1b1e20"/></to>
    </wire>
    <wire loc="183:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7faf6ec06670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7faf6eb5d8f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7faf6eb5d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cfa4e20"/></to>
    </wire>
    <wire loc="146:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7faf6ec30cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7faf6eb9da20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7faf6eb9da20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d155c90"/></to>
    </wire>
    <wire loc="157:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7faf6ec23cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7faf6eb8a020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7faf6eb8a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0e30a0"/></to>
    </wire>
    <wire loc="168:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7faf6ec17e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7faf6eb79760"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7faf6eb79760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0726d0"/></to>
    </wire>
    <wire loc="179:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7faf6ec0acb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7faf6eb67da0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7faf6eb67da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cfffe20"/></to>
    </wire>
    <wire loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7faf6ec38800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7faf6ebab8f0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7faf6ebab8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1c2e20"/></to>
    </wire>
    <wire loc="149:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7faf6ec2b670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7faf6eb98020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7faf6eb98020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d14b3f0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7faf6ec1f670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7faf6eb875d0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7faf6eb875d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0da9b0"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7faf6ec13670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7faf6eb75c10"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7faf6eb75c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0680a0"/></to>
    </wire>
    <wire loc="188:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7faf6ec00670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7faf6eb572b0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7faf6eb572b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cf94e20"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7faf6ebfab20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6eafd160"/></to>
    </wire>
    <wire loc="174:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7faf6ec11cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7faf6eb6d5d0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7faf6eb6d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d00fe20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7faf6eba8da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1b86d0"/></to>
    </wire>
    <wire loc="152:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7faf6ec27020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7faf6eb955d0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7faf6eb955d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d142e20"/></to>
    </wire>
    <wire loc="192:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7faf6ebfc4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6eb09c90"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7faf6ec25670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7faf6eb8dd30"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7faf6eb8dd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0eac90"/></to>
    </wire>
    <wire loc="166:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7faf6ec19800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7faf6eb7b440"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7faf6eb7b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0780a0"/></to>
    </wire>
    <wire loc="177:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7faf6ec0c670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7faf6eb69a80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7faf6eb69a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0056d0"/></to>
    </wire>
    <wire loc="186:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7faf6ec02020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7faf6eb5ada0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7faf6eb5ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cf9a6d0"/></to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7faf6ec31990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7faf6eba3440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7faf6eba3440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1ad0a0"/></to>
    </wire>
    <wire loc="147:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7faf6ec2e020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7faf6eb9cc10"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7faf6eb9cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d152e20"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7faf6ec21020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7faf6eb892b0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7faf6eb892b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0e03f0"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7faf6ec15060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7faf6eb788f0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7faf6eb788f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d06f9b0"/></to>
    </wire>
    <wire loc="180:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7faf6ec08020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7faf6eb65020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7faf6eb65020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cffb0a0"/></to>
    </wire>
    <wire loc="139:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7faf6ec37b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7faf6ebaaa80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7faf6ebaaa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1be0a0"/></to>
    </wire>
    <wire loc="150:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7faf6ec2a990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7faf6eb972b0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7faf6eb972b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1486d0"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7faf6ec1e990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7faf6eb86760"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7faf6eb86760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0d7e20"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7faf6ebff990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7faf6eb56440"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7faf6eb56440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cf900a0"/></to>
    </wire>
    <wire loc="164:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7faf6ec1b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7faf6eb7d020"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7faf6eb7d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d07fc90"/></to>
    </wire>
    <wire loc="175:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7faf6ec0e020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7faf6eb6c760"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7faf6eb6c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d00b0a0"/></to>
    </wire>
    <wire loc="184:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7faf6ec05990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7faf6eb5ca80"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7faf6eb5ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cfa00a0"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7faf6ebf9e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6eaf9c90"/></to>
    </wire>
    <wire loc="142:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7faf6ec33350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7faf6eba5020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7faf6eba5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1b59b0"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7faf6ec26350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7faf6eb94760"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7faf6eb94760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d13d0a0"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7faf6ec07350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7faf6eb5f7a0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7faf6eb5f7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cfa7c90"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7faf6ec24990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7faf6eb8ce60"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7faf6eb8ce60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0e7e20"/></to>
    </wire>
    <wire loc="167:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7faf6ec18b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7faf6eb7a5d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7faf6eb7a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0753f0"/></to>
    </wire>
    <wire loc="178:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7faf6ec0b990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7faf6eb68c10"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7faf6eb68c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0029b0"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7faf6ec01350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7faf6eb58020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7faf6eb58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6cf979b0"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7faf6ec47550"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7faf6ebac6b0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7faf6ebac6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1c5b00"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7faf6ec2d350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7faf6eb9ada0"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7faf6eb9ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d14e0a0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7faf6ec20350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7faf6eb88440"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7faf6eb88440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0dd6d0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7faf6ec14350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7faf6eb77a80"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7faf6eb77a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d06ce20"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7faf6ebfb800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6eb036d0"/></to>
    </wire>
    <wire loc="173:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7faf6ec12990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7faf6eb6e3f0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7faf6eb6e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d012c90"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7faf6ec1dcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7faf6eb858f0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7faf6eb858f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d0d20a0"/></to>
    </wire>
    <wire loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7faf6ec36e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7faf6eba9c10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7faf6eba9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1bb3f0"/></to>
    </wire>
    <wire loc="151:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7faf6ec29cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7faf6eb96440"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7faf6eb96440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7faf6d1459b0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ec9e850"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7faf6ec9dde0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7faf6ed59a30"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7faf6ec7d690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7faf6e0aaa70"/></to>
    </wire>
    <wire loc="146:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7faf6e81c810"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7faf6e81b730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6e753920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e7775c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7faf6e7753c0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7faf6e7560f0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7faf6e7560f0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7faf6ec37b20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7faf6e774660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7faf6e755380"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7faf6e755380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7faf6ec38800"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7faf6e773980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7faf6e7546a0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7faf6e7546a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7faf6ec47550"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6e718300"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6e6f08f0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e7426d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e715d60"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e715d60"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e6ea4d0"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faf6e712cd0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7faf6e6e6ba0"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faf6e717320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6e6ed980"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7faf6e7151d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7faf6e6eb900"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e7368a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e70fb40"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e70fb40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e6cc080"/></to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e716510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e6eccb0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e73ce00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e70f1a0"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e70f1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e6d5670"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7faf6e72ebf0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7faf6e70e790"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7faf6e70e790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7faf6e6ccb70"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faf6e711990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6e6e8470"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e7298e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e70d480"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e70d480"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e6cb930"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7faf6e7209e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6e6f8130"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6e6f8130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6e6be130"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e71faf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e6f4270"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e6f4270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e6ba3f0"/></to>
    </wire>
    <wire loc="215:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6e6f08f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6e2fa880"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6e7013b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6e6c3020"/></to>
    </wire>
    <wire loc="305:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6e6c3020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6df553b0"/></to>
    </wire>
    <wire loc="270:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e6ba3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6dfa3d00"/></to>
    </wire>
    <wire loc="124:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e6ea4d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e512420"/></to>
    </wire>
    <wire loc="126:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7faf6e6e6ba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6e5158b0"/></to>
    </wire>
    <wire loc="121:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faf6e6ed980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6e5146c0"/></to>
    </wire>
    <wire loc="123:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7faf6e6eb900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7faf6e513c90"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6e70ae80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6e6c7a90"/></to>
    </wire>
    <wire loc="303:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6e6c7a90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6df59e80"/></to>
    </wire>
    <wire loc="216:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e6cc080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e2e3270"/></to>
    </wire>
    <wire loc="122:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e6eccb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e513530"/></to>
    </wire>
    <wire loc="269:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6e6be130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6dfa0bb0"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6e6f9b70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6e6c0bb0"/></to>
    </wire>
    <wire loc="307:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6e6c0bb0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df4ba40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6e7068d0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6e6ca540"/></to>
    </wire>
    <wire loc="304:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6e6ca540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6df4fe70"/></to>
    </wire>
    <wire loc="248:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e6d5670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e1e5b60"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e714a50"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e6e91d0"/></to>
    </wire>
    <wire loc="128:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e6e91d0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e512b80"/></to>
    </wire>
    <wire loc="187:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7faf6e6ccb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7faf6e307ba0"/></to>
    </wire>
    <wire loc="125:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faf6e6e8470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6e516280"/></to>
    </wire>
    <wire loc="224:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e6cb930"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e270700"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6e6fbe60"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6e6c0350"/></to>
    </wire>
    <wire loc="306:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6e6c0350"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6df4b1e0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e7126c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e6e9df0"/></to>
    </wire>
    <wire loc="129:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e6e9df0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e5103e0"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6e2fa880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7faf6e2e3d90"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6df553b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6df2e0d0"/></to>
    </wire>
    <wire loc="160:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7faf6e6e3160"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e45dd30"/></to>
    </wire>
    <wire loc="148:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7faf6e6dc2c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6e492390"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6e492390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6ce189d0"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e512420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7faf6ce723a0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7faf6e5146c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7faf6ce74530"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7faf6e513c90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7faf6ce73b00"/></to>
    </wire>
    <wire loc="161:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e6cd490"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e386c40"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e386c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6cdac470"/></to>
    </wire>
    <wire loc="162:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7faf6e6d6890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6e48ce00"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6df59e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6df32b90"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e2e3270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6cd31da0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7faf6e5158b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7faf6ce75720"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e513530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6ce733a0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6dfa0bb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6cc99630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df4ba40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6de2d060"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6df4fe70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6df28c80"/></to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7faf6e6ddc10"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7faf6e45ea50"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e512b80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6ce72b00"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7faf6e307ba0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7faf6e301020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e270700"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7faf6cd263d0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7faf6e516280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7faf6ce76020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6dfa3d00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6cc9d6f0"/></to>
    </wire>
    <wire loc="159:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7faf6e6e49d0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7faf6e45d760"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6df4b1e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6df24020"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e5103e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6ce713e0"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e66d880"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e389b20"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e389b20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6cdaf3a0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e667780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e6036b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6e66ae40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6dfa0bb0"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7faf6e660ce0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df5ad90"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df5ad90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df33aa0"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6e5c7820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6df4add0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6df4add0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6de33c80"/></to>
    </wire>
    <wire loc="116:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6e50e8c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7faf6e689e30"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e50f8f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7faf6e506550"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e50e2b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7faf6e41c770"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6e510a70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7faf6e41cd80"/></to>
    </wire>
    <wire loc="137:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6e4f7910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6e492390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e4f7020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7faf6e41ee00"/></to>
    </wire>
    <wire loc="153:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e45c390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e389b20"/></to>
    </wire>
    <wire loc="154:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e4582b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7faf6e41f0a0"/></to>
    </wire>
    <wire loc="155:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e458be0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7faf6e41f9d0"/></to>
    </wire>
    <wire loc="156:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e459470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e41e020"/></to>
    </wire>
    <wire loc="169:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e41bc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6e3182f0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faf6e3182f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6cd5c4e0"/></to>
    </wire>
    <wire loc="170:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e41a5d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e3075d0"/></to>
    </wire>
    <wire loc="114:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e3075d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6e304120"/></to>
    </wire>
    <wire loc="171:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6e41abe0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e383020"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e383020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6cdab720"/></to>
    </wire>
    <wire loc="176:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6e383e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e3068b0"/></to>
    </wire>
    <wire loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e3068b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6e304730"/></to>
    </wire>
    <wire loc="181:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6e3165a0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7faf6e69f980"/></to>
    </wire>
    <wire loc="182:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e3174a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6e312bb0"/></to>
    </wire>
    <wire loc="113:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faf6e312bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6e3057c0"/></to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e302590"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e1e5b60"/></to>
    </wire>
    <wire loc="193:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e3057c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6e2e6440"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faf6e2e6440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6e2e28c0"/></to>
    </wire>
    <wire loc="194:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e304120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e2e6d70"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e2e6d70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6e2e12b0"/></to>
    </wire>
    <wire loc="195:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6e304730"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e2e43d0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e2e43d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6e2e18c0"/></to>
    </wire>
    <wire loc="211:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7faf6e2e3d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6e272cc0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6e272cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6cd283a0"/></to>
    </wire>
    <wire loc="212:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e2e28c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6e2717e0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faf6e2717e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6cd274a0"/></to>
    </wire>
    <wire loc="213:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e2e12b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6e270130"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6e270130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6cd27dd0"/></to>
    </wire>
    <wire loc="214:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6e2e18c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df9c7e0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df9c7e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6cc953b0"/></to>
    </wire>
    <wire loc="221:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6e26fe20"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6e268db0"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6e268db0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6cce9140"/></to>
    </wire>
    <wire loc="222:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e26e730"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e318be0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e318be0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6cd5cdd0"/></to>
    </wire>
    <wire loc="223:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7faf6e26f080"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7faf6df6dc20"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7faf6df6dc20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7faf6df67410"/></to>
    </wire>
    <wire loc="228:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e317dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e2176f0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e2176f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6cce9a30"/></to>
    </wire>
    <wire loc="237:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6e215d30"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7faf6e696340"/></to>
    </wire>
    <wire loc="238:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e216020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6e20eac0"/></to>
    </wire>
    <wire loc="239:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e216950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e1e5400"/></to>
    </wire>
    <wire loc="240:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e2150e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e6036b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7faf6e1e05d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7faf6df939b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e1e2780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e6036b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6e1e1440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7faf6e6a44f0"/></to>
    </wire>
    <wire loc="253:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e1e4630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6e1c4720"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6e1c4720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6e1be020"/></to>
    </wire>
    <wire loc="254:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e1e2020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e1c3060"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e1c3060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6e1be950"/></to>
    </wire>
    <wire loc="259:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6e1bb760"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7faf6e690a40"/></to>
    </wire>
    <wire loc="260:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6e1be020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6df6ca40"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6df6ca40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6df65440"/></to>
    </wire>
    <wire loc="261:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6e1be950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df6b400"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df6b400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6df65d70"/></to>
    </wire>
    <wire loc="262:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7faf6e1bc120"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df5a5c0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df5a5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df332d0"/></to>
    </wire>
    <wire loc="267:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df9b760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df4ba40"/></to>
    </wire>
    <wire loc="268:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6df99800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df92590"/></to>
    </wire>
    <wire loc="271:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7faf6df98760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7faf6df939b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6df724a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df5ad90"/></to>
    </wire>
    <wire loc="286:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6df63b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7faf6e690a40"/></to>
    </wire>
    <wire loc="287:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6df65440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6df5b460"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6df5b460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6df34120"/></to>
    </wire>
    <wire loc="288:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6df65d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df5bdd0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df5bdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df34a90"/></to>
    </wire>
    <wire loc="289:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7faf6df67410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7faf6df5e610"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7faf6df5e610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7faf6df352e0"/></to>
    </wire>
    <wire loc="301:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6df451f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7faf6e6ad350"/></to>
    </wire>
    <wire loc="302:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6df442e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6dfa0bb0"/></to>
    </wire>
    <wire loc="309:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7faf6df40110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7faf6df939b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7faf6df40ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7faf6df939b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7faf6df3f8d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7faf6df939b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6df3e470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e6036b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e6036b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6ce94c30"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6ce93b50"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6e5c7820"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7faf6ce90d90"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7faf6e5d0130"/></to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <from><interface-ref name="tasklet" scoped="" ref="0x7faf6e5cf740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6ce6da40"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6e52d5a0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6ce71a70"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6e510a70"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6ce708f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6e50f8f0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6ce6f2b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6e50e2b0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6ce6f8c0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7faf6e50e8c0"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6e491150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6ce17850"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6e4918d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6ce16020"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6ce16910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6e48f1f0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faf6ce15120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6ce1a9c0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faf6ce15c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6cdaa5f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6e52d5a0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6cda8120"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6e383e60"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7faf6cd587e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7faf6e34de30"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7faf6e34de30"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7faf6e349a00"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6cd57410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6cd55d40"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6cd55d40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6e346d10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6cd5bbd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6e3174a0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6cd595d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6e317dd0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7faf6cd59d30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7faf6e3165a0"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7faf6e301cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e302590"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7faf6cd26d20"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7faf6e26f080"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7faf6cd25b00"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7faf6e5d0130"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7faf6cd245a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7faf6e26fe20"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7faf6cd23020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e26e730"/></to>
    </wire>
    <wire loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7faf6cd22020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7faf6cd22800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7faf6cd23800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6cce8310"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7faf6e216020"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6cce6800"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7faf6e215d30"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6cce8c40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7faf6e216950"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6cce7400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e2150e0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7faf6cce6060"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7faf6e22c850"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7faf6e22c850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7faf6e226850"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7faf6cce5480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7faf6e22a6a0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7faf6e2276c0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6e231710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e22bdc0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6e1c8d60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7faf6e1c14b0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7faf6e1c37c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7faf6e1bc120"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7faf6e1c6840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7faf6e1bf020"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e1c2020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6e1bc8c0"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7faf6e1c2e00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7faf6e1bb760"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7faf6e1c6270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7faf6e1c0950"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7faf6e1c7880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7faf6e1c0020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6cc902b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6df99800"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6cc93020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df9b760"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7faf6cc921e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faf6e167a60"/></to>
    </wire>
    <wire loc="26:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7faf6e167a60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faf6e15b7d0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7faf6cc94310"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7faf6df98760"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7faf6e15b7d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faf6dfbf790"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7faf6e15f320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6dfcd150"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6e163540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e155020"/></to>
    </wire>
    <wire loc="35:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6e155020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6e04b080"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7faf6dfc7640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6e01ccf0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6e0161d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7faf6e155a10"/></to>
    </wire>
    <wire loc="36:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7faf6e155a10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6e04b890"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6dfbea60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7faf6e14f060"/></to>
    </wire>
    <wire loc="37:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7faf6e14f060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6e048bc0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6e048bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6cc6bb80"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6e04b080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6cc6f020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6e04b890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6cc6f830"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6cc69dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6e0c6c70"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6e0c6c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6e0b4020"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6cc62190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6e0be020"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6e0be020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6e0af2b0"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6cc613e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faf6e0bd520"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6e0bd520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faf6e0ae6b0"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7faf6cc5e780"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7faf6e0b9a40"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7faf6e0b9a40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7faf6e0a9230"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7faf6e012490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7faf6dfc2a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7faf6dfab320"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faf6e15f320"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6df6f2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7faf6df69920"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df6bb60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7faf6df645a0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df6a400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7faf6df64d40"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7faf6df692b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7faf6df63b40"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7faf6df6d650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7faf6df68d70"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7faf6df6fd30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7faf6df68440"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6de33c80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6dc266e0"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7faf6df52940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7faf6df2b630"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6de2d060"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faf6dc1e3a0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7faf6df12340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7faf6df451f0"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7faf6df11110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7faf6df40110"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7faf6df11ca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7faf6df40ca0"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7faf6df108d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7faf6df3f8d0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6df0f780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6df442e0"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7faf6df151a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6de2d060"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6df0a2e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6df3e470"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7faf6df24760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7faf6de3be10"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7faf6de3be10"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7faf6ec30cb0"/></to>
    </wire>
    <wire loc="104:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7faf6df23b50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7faf6de37060"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7faf6de37060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6de0a850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6df1caa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6de37ce0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6de37ce0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6de0b020"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7faf6df21670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7faf6de36880"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7faf6de36880"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7faf6ec26350"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7faf6df20980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7faf6de35b10"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7faf6de35b10"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7faf6ec32670"/></to>
    </wire>
    <wire loc="110:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7faf6df16550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7faf6de34e30"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7faf6de34e30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7faf6de2ca10"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7faf6df0b6b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7faf6e5d0130"/></to>
    </wire>
    <wire loc="112:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7faf6df13d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7faf6dbcc9a0"/></to>
    </wire>
    <wire loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7faf6de7a8b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7faf6dc266e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7faf6cb9e610"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6de0b020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6ddfd480"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7faf6dc1e3a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7faf6dbd7b60"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7faf6de1d3d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7faf6ec14350"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7faf6de1c680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7faf6ec17e40"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7faf6de207f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faf6dd20530"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7faf6dd20530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faf6dd05850"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7faf6de01ae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7faf6ddfc020"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7faf6de09840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7faf6ddfee00"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6de0c1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6ddfe7e0"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6de0a850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6ddfcd20"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7faf6ddde430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6dd34210"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6dd34210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6cbcd9d0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6dddc130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6dd337a0"/></to>
    </wire>
    <wire loc="100:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6dd337a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6cbcb020"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7faf6ddfa020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7faf6dd8e3e0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7faf6dd8e3e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7faf6dd88350"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7faf6dddc920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7faf6ec80020"/></to>
    </wire>
    <wire loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7faf6ddbb190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7faf6dd7fe50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7faf6ec80020"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7faf6dd84390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7faf6ec30cb0"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7faf6dd83650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7faf6ec2e020"/></to>
    </wire>
    <wire loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7faf6dd81800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7faf6ec2d350"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7faf6dd80b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7faf6ec2b670"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6dd33020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6cbcc850"/></to>
    </wire>
    <wire loc="101:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6cbcb910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6dd320d0"/></to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faf6cbca120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6cbd0a30"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faf6cbcac20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6dd19d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6dd06020"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6dd2ab20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6dd0eb90"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6dd14650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7faf6dd005a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6dd14650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7faf6dcfcba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6dd14650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7faf6dcf7120"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7faf6cb9ba30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6dd2ab20"/></to>
    </wire>
    <wire loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7faf6cb85db0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7faf6dd14650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6dc63410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6dd2ab20"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6dbd6e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6dbdecf0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7faf6dbda0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6dc1a200"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6dc1a200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6dc03020"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6dc01280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6dd2ab20"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6dafc4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6dad4b70"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6db67800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6db03400"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7faf6daffe60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7faf6dad4520"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6daf9940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6db66300"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7faf6db03d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6dafa020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7faf6db01a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6dafb4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7faf6daf9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7faf6d7b61e0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7faf6dafa020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7faf6d9a3de0"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7faf6dafb4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7faf6d9a36c0"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7faf6d9a1c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7faf6daf9020"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6dacc430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6daf9940"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6d99f920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6daf9940"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6d996cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6daf9940"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faf6d9a0590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faf6dad1080"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7faf6d9a0e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7faf6dacda40"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7faf6dac3410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7faf6d99be10"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7faf6dabe530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7faf6d970150"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7faf6d970150"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7faf6d969020"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faf6d98dd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faf6d970960"/></to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faf6d970960"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faf6d968080"/></to>
    </wire>
    <wire loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7faf6da6de40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7faf6daa4d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7faf6da6f400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7faf6da680c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7faf6d99d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7faf6d99d800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7faf6d96bd50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7faf6d969820"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7faf6d969820"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7faf6d920dd0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7faf6d968080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7faf6d91f5a0"/></to>
    </wire>
    <wire loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7faf6d969020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7faf6d920630"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6d967360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6d88fbb0"/></to>
    </wire>
    <wire loc="33:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6d88fbb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6d7c7cd0"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6d91bcc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6d967360"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7faf6d91e610"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7faf6d8fd480"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7faf6d8fd480"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7faf6d8f5550"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7faf6d91edf0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7faf6d8fdd20"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7faf6d8fdd20"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7faf6d8f5e30"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7faf6d91c620"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7faf6d8fc5f0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7faf6d8fc5f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7faf6d8f3730"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7faf6d8fadd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7faf6d8f0650"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7faf6d8fbb80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7faf6d8f1470"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7faf6d8fa540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7faf6d8f1d50"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6d8efb30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6ec57020"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7faf6d8ee980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7faf6ec80020"/></to>
    </wire>
    <wire loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7faf6d7c30f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6d889c50"/></to>
    </wire>
    <wire loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7faf6d889c50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7faf6d7d33c0"/></to>
    </wire>
    <wire loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d7d0660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d884b30"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d884b30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d870b90"/></to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6d87ddc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6d868020"/></to>
    </wire>
    <wire loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7faf6d87b530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7faf6d867850"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6d876650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7faf6d8625a0"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6d876650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7faf6d85eba0"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7faf6d876650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7faf6d859120"/></to>
    </wire>
    <wire loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d7da410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d884b30"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7faf6d2e2020"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7faf6caa3e30"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7faf6d2e50a0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7faf6caa4020"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7faf6caa1c80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d746020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7faf6ca9e7a0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7faf6d7452c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7faf6ca9f9b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d746020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7faf6ca9dc50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7faf6d7452c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7faf6d7452c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7faf6d6c7c90"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d746020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d6b21d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d6b21d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d548210"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7faf6d6c52f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7faf6d6b1020"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7faf6d6b1020"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7faf6d69eca0"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7faf6d6c4480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7faf6d6b0370"/></to>
    </wire>
    <wire loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7faf6d6b0370"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7faf6d6a74d0"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7faf6d6c2610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7faf6d6af730"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7faf6d6af730"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x7faf6d69a560"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d6c1240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d2f86a0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d2f86a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faf6dfab320"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6d6bc450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6e77b260"/></to>
    </wire>
    <wire loc="102:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7faf6d6ba2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7faf6d6bbac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7faf6d69a560"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7faf6d5f3b50"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7faf6d6a74d0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7faf6ec21020"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7faf6d69eca0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7faf6ec08020"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d548210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c9cb020"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7faf6d5ce190"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7faf6d69eca0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7faf6d5cd380"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x7faf6d6a74d0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d5dd110"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d5adc10"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d5adc10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faf6dfab320"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6d541a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6d5de460"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d5148b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d546400"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d546400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c9c9270"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d515b60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d5477a0"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d5477a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c9ca560"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7faf6d5cf730"/></from>
      <to><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7faf6d5098a0"/></to>
    </wire>
    <wire loc="124:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7faf6d5098a0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7faf6d3195d0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7faf6d5d6590"/></from>
      <to><interface-ref name="ChannelHumidityData" scoped="" ref="0x7faf6d508700"/></to>
    </wire>
    <wire loc="125:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x7faf6d508700"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7faf6d3182b0"/></to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7faf6d5d2410"/></from>
      <to><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7faf6d504020"/></to>
    </wire>
    <wire loc="130:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7faf6d504020"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7faf6d3102b0"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d5cc630"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d500b70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7faf6d69cd00"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7faf6d5fa680"/></to>
    </wire>
    <wire loc="92:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7faf6d6937b0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7faf6d690d10"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7faf6d6a4c90"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7faf6ec1e990"/></to>
    </wire>
    <wire loc="95:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7faf6d695bf0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7faf6d68c1a0"/></to>
    </wire>
    <wire loc="97:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7faf6d692a00"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7faf6d68b020"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7faf6d6a0660"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7faf6ec0b990"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7faf6d6976a0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7faf6ec18b20"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7faf6d6aa020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7faf6ec24990"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7faf6d6a67e0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7faf6ec20350"/></to>
    </wire>
    <wire loc="93:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7faf6d693e60"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7faf6d68d410"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7faf6d698380"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7faf6ec19800"/></to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7faf6d6a2020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7faf6ec1dcb0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7faf6d69c020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7faf6d60cb50"/></to>
    </wire>
    <wire loc="98:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7faf6d691350"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7faf6d68b6d0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7faf6d69f980"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7faf6ec0acb0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7faf6d6a9330"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7faf6ec23cb0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7faf6d6a5980"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7faf6ec1f670"/></to>
    </wire>
    <wire loc="94:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7faf6d695540"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7faf6d68dac0"/></to>
    </wire>
    <wire loc="96:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7faf6d692350"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7faf6d68c850"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7faf6d6a1340"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7faf6ec0c670"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7faf6d69b900"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7faf6d5f6120"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7faf6d699130"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7faf6ec15060"/></to>
    </wire>
    <wire loc="99:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7faf6d691a00"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7faf6d68bd80"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7faf6d6aeca0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7faf6ec25670"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5fd7a0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7faf6d675b70"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7faf6d675b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d627d60"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5f92f0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7faf6d674b70"/></to>
    </wire>
    <wire loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7faf6d674b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d623c90"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5f6c20"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7faf6d673b70"/></to>
    </wire>
    <wire loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7faf6d673b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d61fc90"/></to>
    </wire>
    <wire loc="89:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5f27a0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7faf6d672b70"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7faf6d672b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d61ac90"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7faf6d67cd10"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d634260"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7faf6d67bc30"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d62f0a0"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7faf6d677e20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d64c3f0"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7faf6d676b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7faf6d62b020"/></to>
    </wire>
    <wire loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d6372f0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7faf6d66ba00"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d632100"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7faf6d66d230"/></to>
    </wire>
    <wire loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d62e020"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7faf6d66d9b0"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d62be40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7faf6d66c150"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d626c20"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7faf6d66c8d0"/></to>
    </wire>
    <wire loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d622b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7faf6d6690b0"/></to>
    </wire>
    <wire loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d61eb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7faf6d669830"/></to>
    </wire>
    <wire loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d619b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7faf6d668020"/></to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d547020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c9cbd80"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c9c9b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d546cd0"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faf6c9c8440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c9cfe20"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faf6c9c57a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6c995b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6d541a10"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6c994720"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6d515590"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c994cf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d515b60"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c993930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d5148b0"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7faf6c991160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7faf6c991940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x7faf6d50ce00"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7faf6d31c020"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7faf6d31c020"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7faf6c937970"/></to>
    </wire>
    <wire loc="118:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7faf6d50d270"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7faf6d31e5d0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7faf6d31e5d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7faf6c9380a0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7faf6d3182b0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7faf6c934c70"/></to>
    </wire>
    <wire loc="129:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x7faf6d505190"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7faf6d3115d0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7faf6d3115d0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7faf6c849ab0"/></to>
    </wire>
    <wire loc="121:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x7faf6d50bbe0"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7faf6d31cc70"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7faf6d31cc70"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7faf6c9365e0"/></to>
    </wire>
    <wire loc="123:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7faf6d50aac0"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7faf6d31a8f0"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7faf6d31a8f0"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7faf6c9352b0"/></to>
    </wire>
    <wire loc="135:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7faf6d5018c0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7faf6d30c5d0"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7faf6d30c5d0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x7faf6c8449b0"/></to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7faf6d3102b0"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x7faf6c848760"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7faf6d3195d0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7faf6c934020"/></to>
    </wire>
    <wire loc="131:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelEepromPower" scoped="" ref="0x7faf6d504da0"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7faf6d30f020"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7faf6d30f020"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x7faf6c847440"/></to>
    </wire>
    <wire loc="127:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7faf6d507560"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7faf6d313b90"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7faf6d313b90"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7faf6c84a1f0"/></to>
    </wire>
    <wire loc="119:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x7faf6d50c060"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7faf6d31d2b0"/></to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7faf6d31d2b0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x7faf6c938cf0"/></to>
    </wire>
    <wire loc="115:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d500b70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d4fc020"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d4fc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c973540"/></to>
    </wire>
    <wire loc="128:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Channel2PowerNull" scoped="" ref="0x7faf6d5063d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7faf6d3128f0"/></to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7faf6d3128f0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7faf6c84ae40"/></to>
    </wire>
    <wire loc="117:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x7faf6d50e4c0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7faf6d31f910"/></to>
    </wire>
    <wire loc="57:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7faf6d31f910"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7faf6c9393f0"/></to>
    </wire>
    <wire loc="132:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x7faf6d503d00"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7faf6d30fc70"/></to>
    </wire>
    <wire loc="62:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7faf6d30fc70"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x7faf6c8460c0"/></to>
    </wire>
    <wire loc="133:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7faf6d502aa0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7faf6d30e8f0"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7faf6d30e8f0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x7faf6c846d10"/></to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d4fcd80"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c9723a0"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d4fb560"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c972b20"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d4fa270"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c9718b0"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c970210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d4fab40"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faf6c9709d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c975330"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faf6c96dc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7faf6c934020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7faf6c9380a0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7faf6c9365e0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7faf6c934c70"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7faf6c938cf0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7faf6c9352b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7faf6c9393f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7faf6c937970"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c933a30"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c929020"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c929020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d460a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6c92e7b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c92a120"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6c92a120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d461530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c916790"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c933a30"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6c911400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c92e7b0"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6c910060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6e77b260"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7faf6c90ebe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7faf6c90d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d461530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d4428b0"/></to>
    </wire>
    <wire loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d460a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d40c820"/></to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7faf6d4076c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d458a80"/></to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d458a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c8d7c80"/></to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7faf6d4065a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d397e30"/></to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7faf6d4012a0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7faf6d392ba0"/></to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7faf6d451020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7faf6d397570"/></to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d451d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d456020"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d456020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c8d5270"/></to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7faf6d3912f0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7faf6d387500"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7faf6d387500"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7faf6d381020"/></to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7faf6d38fc50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6d344870"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7faf6d38d2f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6d344870"/></to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d457850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c8d6a60"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d456c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c8d5e80"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c8d4790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d455570"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faf6c8d2020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c8d99c0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faf6c8d0160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7faf6d37fb80"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7faf6ec1b020"/></to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7faf6d37ee50"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7faf6ec1a4e0"/></to>
    </wire>
    <wire loc="69:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x7faf6c846d10"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7faf6c84ae40"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x7faf6c847440"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x7faf6c8449b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x7faf6c849ab0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x7faf6c8460c0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7faf6c84a1f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x7faf6c848760"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c8438a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c83bd90"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c83bd90"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d460a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6c83f550"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c83b020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6c83b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d461530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c827540"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c8438a0"/></to>
    </wire>
    <wire loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6c822260"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c83f550"/></to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7faf6c822e70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7faf6e77b260"/></to>
    </wire>
    <wire loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7faf6c81fa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x7faf6c81e2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLResource" scoped="" ref="0x7faf6c7ebaa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d2afcb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLRead" scoped="" ref="0x7faf6c7e95a0"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7faf6d2aeb90"/></to>
    </wire>
    <wire loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="VLight" scoped="" ref="0x7faf6d2aeb90"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x7faf6d27dd60"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRResource" scoped="" ref="0x7faf6c7ea7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d2afcb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRRead" scoped="" ref="0x7faf6c7e8da0"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7faf6d2ab480"/></to>
    </wire>
    <wire loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="IRLight" scoped="" ref="0x7faf6d2ab480"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x7faf6d27a580"/></to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d2afcb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d26dc90"/></to>
    </wire>
    <wire loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d26dc90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d236510"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d279d10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d218b70"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d218b70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d460a20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7faf6d274a50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d219dc0"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d219dc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d461530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7faf6d2737a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x7faf6d272800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7faf6d272020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d236510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6c7b5c80"/></to>
    </wire>
    <wire loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6d2315b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6d269870"/></to>
    </wire>
    <wire loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d22e270"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d2348b0"/></to>
    </wire>
    <wire loc="108:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d2348b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c7b3e80"/></to>
    </wire>
    <wire loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d230630"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d235b20"/></to>
    </wire>
    <wire loc="107:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d235b20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c7b3270"/></to>
    </wire>
    <wire loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x7faf6d268580"/></from>
      <to><interface-ref name="ChannelLightPower" scoped="" ref="0x7faf6d507560"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d25c7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d500b70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d2664d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7faf6d22a3d0"/></to>
    </wire>
    <wire loc="52:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7faf6d22a3d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7faf6dfab320"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d262ae0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d223d90"/></to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d223d90"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d460a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7faf6d25d9b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d223020"/></to>
    </wire>
    <wire loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7faf6d223020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7faf6d461530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x7faf6d2572a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x7faf6d2582a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d2353a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c7b4a60"/></to>
    </wire>
    <wire loc="109:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c7b2790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d2331f0"/></to>
    </wire>
    <wire loc="111:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7faf6c7b1020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c7b89c0"/></to>
    </wire>
    <wire loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7faf6c7af160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7faf6c77e400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7faf6d2315b0"/></to>
    </wire>
    <wire loc="81:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6c77ee80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6d230060"/></to>
    </wire>
    <wire loc="83:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c77d470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d230630"/></to>
    </wire>
    <wire loc="84:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c77c0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d22e270"/></to>
    </wire>
    <wire loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7faf6c77c8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7faf6c77b100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="63:BaseStationP.nc" safe="">
      <documentation loc="596:ZCompression_new.h">
        <short>*</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7faf6e146120"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TOne" ref="0x7faf6eca4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TOne" ref="0x7faf6eca4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TThree" ref="0x7faf6eca47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TThree" ref="0x7faf6eca47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7faf6eca20d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC.t1" loc="44(BaseStationC.t1):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.SensirionSht11C" loc="45(BaseStationC.SensirionSht11C):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP" loc="45(BaseStationC.SensirionSht11C.SensirionSht11ReaderP):/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715.h">
        <short>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.</short>
        <long>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to the mts420CA sensorboard and the adg715 that connects&#10; the communication wires.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC" loc="89(Adg715C.FcfsArbiterC):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Adg715.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Queue" loc="42(Adg715C.FcfsArbiterC.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Arbiter" loc="52(Adg715C.FcfsArbiterC.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm" loc="41(Adg715C.Comm):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC" loc="42(Adg715C.Comm.Adg715ControlC):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Comm.Adg715ControlC.Adg715ControlP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm.Atm128I2CMasterC" loc="43(Adg715C.Comm.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Adg715C.Power" loc="41(Adg715C.Power):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC" loc="42(Adg715C.Power.Adg715ControlC):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Power.Adg715ControlC.Adg715ControlP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Power.Atm128I2CMasterC" loc="43(Adg715C.Power.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.Taos2550C" loc="36(BaseStationC.Taos2550C):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseStationC.Taos2550C.Taos2550ReaderP" loc="34(BaseStationC.Taos2550C.Taos2550ReaderP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalTaos2550C" loc="34:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Taos2550LogicP" loc="36(HalTaos2550C.Taos2550LogicP):/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTaos2550P" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter" loc="89(HplTaos2550C.Arbiter):/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Taos2550.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Queue" loc="42(HplTaos2550C.Arbiter.Queue):/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Arbiter" loc="52(HplTaos2550C.Arbiter.Arbiter):/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC" loc="67(HplTaos2550C.SplitControlPowerManagerC):/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager" loc="58(HplTaos2550C.SplitControlPowerManagerC.PowerManager):/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Timer" loc="44(HplTaos2550C.Timer):/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Atm128I2CMasterC" loc="43(HplTaos2550C.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Atm128I2CMasterC" loc="43(HalTaos2550C.Atm128I2CMasterC):/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7faf6ebf35a0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7faf6ebf3910" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7faf6ebf3c80" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7faf6ebe59f0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7faf6ebe5d80" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7faf6ebe1170" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7faf6ebe14c0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7faf6eb4d0d0" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7faf6eb4d460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7faf6eb4d7f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7faf6eb4db40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7faf6e4f1210" loc="83:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7faf6e4e7cc0" loc="42:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7faf6e146120" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7faf6e146120"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7faf6e146430" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7faf6e13dd30" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7faf6e13dd30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7faf6e13a060" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e041430" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e041430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e010880" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e010880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7faf6e010bb0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6dfc0de0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6dfc0de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7faf6dc6f290" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6dc6f290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7faf6dc6f600" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7faf6dc73d60" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7faf6dc73d60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7faf6dc5a580" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6dc5a580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7faf6dc5a8a0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7faf6dc16920" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7faf6dc16920"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7faf6dc13120" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6dc13120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7faf6dbf7600" loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7faf6dbf7600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7faf6dbf7dd0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7faf6dbf7dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7faf6dbf6220" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7faf6dbf6220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7faf6dbf6a00" loc="58:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7faf6dbf6a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7faf6dbf6dd0" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7faf6dbf5630" loc="60:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7faf6dbf5630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7faf6d64b3f0" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7faf6d64b780" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7faf6d64bb10" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7faf6d64be60" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7faf6d5a3110" loc="89:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7faf6d596d90" loc="52:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAdg715C" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7faf6d4f5020" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7faf6d4f5370" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlC" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7faf6d4ea370" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x7faf6d4ea6c0" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlP" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x7faf6d4ce270" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA0High" ref="0x7faf6d4ce5c0" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550C" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc" abstract="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Taos2550ReaderP" loc="34:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc" abstract="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550LogicP" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc" abstract="">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7faf6ec5a210" loc="58:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ec5a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec5a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7faf6ec5ecb0" loc="57:/home/cxf/Desktop/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7faf6ec5ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faf6ec5d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7faf6ec57d50" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7faf6ec57d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec56100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6ec59b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6ec59b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7faf6ec57020" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6ec57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7faf6ec573a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7faf6ec57530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7faf6ec576c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7faf6ec57850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7faf6ec579e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7faf6ec4f7a0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7faf6ec4f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec4fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6ec4f0c0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6ec4f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec4f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7faf6ec4e020" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7faf6ec4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7faf6ec49110" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7faf6ec49110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec49490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7faf6ec519e0" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ec519e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec51d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7faf6ec45cd0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7faf6ec45cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec440a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7faf6ec3fad0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7faf6ec3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec3fe50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec45020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec45340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec45660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec457f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec45980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7faf6ec46530" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ec46530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec468b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7faf6ebfecb0" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7faf6ebfecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebfd610"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebfd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebfd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebfdac0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebfdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebfdde0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebfc020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebfc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7faf6ec1a4e0" loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7faf6ec1a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec1a860"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec1a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec1ab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec1ad10"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec19020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec191b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec19340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7faf6ec0d350" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7faf6ec0d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec0d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec0d860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec0d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec0db80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec0dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec0c020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7faf6ec04cb0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7faf6ec04cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec03230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec03550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec03870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec03a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7faf6ebf7060" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7faf6ebf7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebf73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebf7570"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebf7700"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebf7890"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebf7a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebf7bb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebf7d40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7faf6ec32670" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7faf6ec32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec329f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec32b80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec32d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec31020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec31340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec314d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7faf6ec06670" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7faf6ec06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec069f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec06b80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec06d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec05020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec05340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec054d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7faf6ec30cb0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7faf6ec30cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec2f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec2f230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec2f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec2f550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec2f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec2f870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec2fa00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec2fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7faf6ec23cb0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7faf6ec23cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec220a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec22230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec223c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec22550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec226e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec22870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec22a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec22b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7faf6ec17e40" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7faf6ec17e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec161e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec16370"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec16500"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec16690"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec16820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec169b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec16b40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec16cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7faf6ec0acb0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7faf6ec0acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec09230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec09550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec09870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec09a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec09b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7faf6ec38800" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7faf6ec38800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec38b80"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec38d10"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec37020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec371b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec37340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec374d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec37660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7faf6ec2b670" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7faf6ec2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec2b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec2bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec2bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec2a020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec2a340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec2a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec2a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7faf6ec1f670" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7faf6ec1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec1f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec1fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec1fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec1e020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec1e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec1e340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec1e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec1e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7faf6ec13670" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7faf6ec13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec139f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec13b80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec13d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec12020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec12340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec124d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec12660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7faf6ec00670" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7faf6ec00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec009f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec00b80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec00d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebff020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebff340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7faf6ebfab20" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7faf6ebfab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebf9020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebf91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebf9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebf94d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebf9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebf97f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebf9980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebf9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7faf6ec11cb0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7faf6ec11cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec0f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec0f230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec0f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec0f550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec0f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec0f870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec0fa00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec0fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7faf6ec34060" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7faf6ec34060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec343e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec34570"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec34700"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec34890"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec34a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec34bb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec34d40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7faf6ec27020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7faf6ec27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec27530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec27850"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec27b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec27d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7faf6ebfc4e0" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7faf6ebfc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebfc860"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebfc9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebfcb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebfcd10"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebfb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebfb1b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebfb340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebfb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7faf6ec25670" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7faf6ec25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec259f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec25b80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec25d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec24020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec24340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec244d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7faf6ec19800" loc="73:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7faf6ec19800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec19b80"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec19d10"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec18020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec181b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec18340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec184d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec18660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7faf6ec0c670" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7faf6ec0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec0c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec0cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec0cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec0b020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec0b340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7faf6ec02020" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7faf6ec02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec02530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec02850"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec02b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec02d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7faf6ec31990" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7faf6ec31990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec31d10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec30020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec30340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec30660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec307f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7faf6ec2e020" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7faf6ec2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec2e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec2e530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec2e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec2e850"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec2e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec2eb70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec2ed00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7faf6ec21020" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7faf6ec21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec21530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec21850"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec21b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec21d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7faf6ec15060" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7faf6ec15060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec153e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec15570"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec15700"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec15890"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec15a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec15bb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec15d40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7faf6ec08020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7faf6ec08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec08530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec08850"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec08b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec08d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7faf6ec37b20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7faf6ec37b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec36020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec361b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec36340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec364d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec36660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec367f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec36980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec36b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7faf6ec2a990" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7faf6ec2a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec2ae10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec29020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec29340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec29660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec297f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec29980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7faf6ec1e990" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7faf6ec1e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec1ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec1d020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec1d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec1d340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec1d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec1d660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec1d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec1d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7faf6ebff990" loc="96:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7faf6ebff990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebffd10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebfe020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebfe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebfe340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebfe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebfe660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebfe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebfe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7faf6ec1b020" loc="71:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7faf6ec1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec1b5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec1b730"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec1b8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec1ba50"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec1bbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec1bd70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec1a020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7faf6ec0e020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7faf6ec0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec0e530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec0e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec0e850"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec0e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec0eb70"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec0ed00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7faf6ec05990" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7faf6ec05990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec05d10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec04020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec04340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec04660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec047f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec04980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7faf6ebf9e40" loc="102:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7faf6ebf9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebf81e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebf8370"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebf8500"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebf8690"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebf8820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebf89b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebf8b40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebf8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7faf6ec33350" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7faf6ec33350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec336d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec33860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec339f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec33b80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec33d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec32020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec321b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7faf6ec26350" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7faf6ec26350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec266d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec26860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec269f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec26b80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec26d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec25020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec251b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7faf6ec07350" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7faf6ec07350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec076d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec07860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec079f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec07b80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec07d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec06020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec061b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7faf6ec24990" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7faf6ec24990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec24d10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec23020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec23340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec23660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec237f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec23980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7faf6ec18b20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7faf6ec18b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec17020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec171b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec17340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec174d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec17660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec177f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec17980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec17b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7faf6ec0b990" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7faf6ec0b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec0bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec0a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec0a340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec0a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec0a660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec0a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7faf6ec01350" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7faf6ec01350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec016d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec01860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec019f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec01b80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec01d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec00020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec001b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7faf6ec47550" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7faf6ec47550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec478d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec47a60"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec47bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec47d80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec38020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec381b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec38340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7faf6ec2d350" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7faf6ec2d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec2d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec2d860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec2d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec2db80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec2dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec2b020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7faf6ec20350" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7faf6ec20350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec206d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec20860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec209f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec20b80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec20d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec1f020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec1f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7faf6ec14350" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7faf6ec14350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec146d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec14860"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec149f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec14b80"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec14d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec13020"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec131b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7faf6ebfb800" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7faf6ebfb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebfbb80"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebfbd10"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebfa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebfa1b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebfa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebfa4d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebfa660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebfa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7faf6ec12990" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7faf6ec12990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec12d10"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec11020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec11340"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec11660"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec117f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec11980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7faf6ec1dcb0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7faf6ec1dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec1c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec1c230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec1c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec1c550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec1c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec1c870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec1ca00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec1cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7faf6ec36e40" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7faf6ec36e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec351e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec35370"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec35500"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec35690"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec35820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec359b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec35b40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec35cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7faf6ec29cb0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7faf6ec29cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ec280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ec28230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ec283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ec28550"/>
        <function-ref name="get" scoped="" ref="0x7faf6ec286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ec28870"/>
        <function-ref name="set" scoped="" ref="0x7faf6ec28a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ec28b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7faf6ebaaa80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7faf6ebaaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebaae00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eba9020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eba91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eba9340"/>
        <function-ref name="get" scoped="" ref="0x7faf6eba94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eba9660"/>
        <function-ref name="set" scoped="" ref="0x7faf6eba97f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eba9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7faf6eba5020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7faf6eba5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eba53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eba5530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eba56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eba5850"/>
        <function-ref name="get" scoped="" ref="0x7faf6eba59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eba5b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6eba5d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eba4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7faf6ebac6b0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7faf6ebac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebaca30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebacbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebacd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebab020"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebab340"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7faf6eba9c10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7faf6eba9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eba8020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eba81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eba8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eba84d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eba8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eba87f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eba8980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eba8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7faf6eba42b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7faf6eba42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eba4630"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eba47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eba4950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eba4ae0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eba4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eba4e00"/>
        <function-ref name="set" scoped="" ref="0x7faf6eba3020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eba31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7faf6ebab8f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7faf6ebab8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6ebabc70"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6ebabe00"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6ebaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6ebaa1b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6ebaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6ebaa4d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6ebaa660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6ebaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7faf6eba8da0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7faf6eba8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eba6180"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eba6310"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eba64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eba6630"/>
        <function-ref name="get" scoped="" ref="0x7faf6eba67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eba6950"/>
        <function-ref name="set" scoped="" ref="0x7faf6eba6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eba6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7faf6eba3440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7faf6eba3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eba37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eba3950"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eba3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eba3c70"/>
        <function-ref name="get" scoped="" ref="0x7faf6eba3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eba2020"/>
        <function-ref name="set" scoped="" ref="0x7faf6eba21b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eba2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1c5b00" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1c5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1c5e80"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1c4030"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1c41c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1c4350"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1c44e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1c4670"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1c4800"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1c4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1c2e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1c2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1c11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1c1350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1c14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1c1670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1c1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1c1990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1c1b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1be0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1be420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1be5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1be740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1be8d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1bea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1bebf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1bed80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1bb3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1bb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1bb770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1bb900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1bba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1bbc20"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1bbdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1ba020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1ba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1b86d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1b86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1b8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1b8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1b7020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1b7340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1b59b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1b59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1b5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1b31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1b3340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1b3660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1b37f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1b3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1b1e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1b1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1b01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1b0350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1b04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1b0670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1b0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1b0990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1b0b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1b0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1ad0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1ad0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1ad420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d1ad5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1ad740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d1ad8d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1ada60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d1adbf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1add80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d1ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7faf6eb9ada0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7faf6eb9ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb99180"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb99310"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb994a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb99630"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb997c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb99950"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb99ae0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb99c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7faf6eb96440" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7faf6eb96440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb967c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb96950"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb96ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb96c70"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb96e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb95020"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb951b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7faf6eb9da20" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7faf6eb9da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb9dda0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb9c020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb9c340"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb9c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb9c660"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb9c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7faf6eb98020" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7faf6eb98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb98530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb98850"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb98b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb98d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7faf6eb955d0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7faf6eb955d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb95950"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb95ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb95c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb95e00"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb94020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb941b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb94340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7faf6eb9cc10" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7faf6eb9cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb9a020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb9a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb9a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb9a4d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb9a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb9a7f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb9a980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb9ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7faf6eb972b0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7faf6eb972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb97630"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb977c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb97950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb97ae0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb97c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb97e00"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb96020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7faf6eb94760" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7faf6eb94760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb94ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb94c70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb94e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb93020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb93340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb934d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d155c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d155c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1540a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d154230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1543c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d154550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1546e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d154870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d154a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d154b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d152e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d152e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1511c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d151350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1514e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d151670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d151800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d151990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d151b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d151cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d14e0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d14e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d14e420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d14e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d14e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d14e8d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d14ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d14ebf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d14ed80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d14d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d14b3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d14b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d14b770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d14b900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d14ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d14bc20"/>
        <function-ref name="get" scoped="" ref="0x7faf6d14bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d14a020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d14a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d14a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1486d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1486d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d148a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d148be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d148d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d147020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d147340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1474d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d147660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d1459b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d1459b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d145d30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d144020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d144340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d1444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d144660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d1447f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d144980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d142e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d142e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d1401c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d140350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d1404e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d140670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d140800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d140990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d140b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d140cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d13d0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d13d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d13d420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d13d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d13d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d13d8d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d13da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d13dbf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d13dd80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d13c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7faf6eb8a020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7faf6eb8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb8a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb8a530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb8a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb8a850"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb8a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb8ab70"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb8ad00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7faf6eb875d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7faf6eb875d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb87950"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb87ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb87c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb87e00"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb86020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb861b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb86340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7faf6eb8dd30" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7faf6eb8dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb8c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb8c270"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb8c400"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb8c590"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb8c720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb8c8b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb8ca40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb8cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7faf6eb892b0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7faf6eb892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb89630"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb897c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb89950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb89ae0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb89c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb89e00"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb88020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7faf6eb86760" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7faf6eb86760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb86ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb86c70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb86e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb85020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb85340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb854d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb85660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7faf6eb8ce60" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7faf6eb8ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb8b210"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb8b3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb8b530"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb8b6c0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb8b850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb8b9e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb8bb70"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb8bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7faf6eb88440" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7faf6eb88440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb887c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb88950"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb88ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb88c70"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb88e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb87020"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb871b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7faf6eb858f0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7faf6eb858f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb85c70"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb85e00"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb84020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb841b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb84340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb844d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb84660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0eac90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0eac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0e9230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0e93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0e9550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0e96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0e9870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0e9a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0e9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0e7e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0e7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0e61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0e6350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0e64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0e6670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0e6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0e6990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0e6b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0e6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0e30a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0e30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0e3420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0e35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0e3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0e38d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0e3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0e3bf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0e3d80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0e03f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0e03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0e0770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0e0900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0e0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0e0c20"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0e0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0df020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0df1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0dd6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0dd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0dda50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0ddbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0ddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0dc020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0dc340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0dc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0da9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0da9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0dad30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0d9020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0d91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0d9340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0d9660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0d97f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0d9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0d7e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0d7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0d51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0d5350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0d54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0d5670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0d5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0d5990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0d5b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0d5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0d20a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0d2420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0d25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0d2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0d28d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0d2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d0d2bf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0d2d80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d0d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7faf6eb7b440" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7faf6eb7b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb7b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb7b950"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb7bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb7bc70"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb7be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb7a020"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb7a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7faf6eb788f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7faf6eb788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb78c70"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb78e00"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb77020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb771b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb774d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb77660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7faf6eb7d020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7faf6eb7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb7d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb7d530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb7d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb7d850"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb7d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb7db70"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb7dd00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7faf6eb7a5d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7faf6eb7a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb7a950"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb7aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb7ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb7ae00"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb79020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb791b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb79340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7faf6eb77a80" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7faf6eb77a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb77e00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb75020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb75340"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb75660"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb757f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb75980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7faf6eb7c2b0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7faf6eb7c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb7c630"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb7c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb7c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb7cae0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb7cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb7ce00"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb7b020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7faf6eb79760" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7faf6eb79760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb79ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb79c70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb79e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb78020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb78340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb784d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7faf6eb75c10" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7faf6eb75c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb74020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb741b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb74340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb744d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb74660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb747f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb74980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb74b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d07fc90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d07fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d07e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d07e230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d07e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d07e550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d07e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d07e870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d07ea00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d07eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d07ce20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d07ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d07b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d07b350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d07b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d07b670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d07b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d07b990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d07bb20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d07bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0780a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0780a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d078420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0785b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d078740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0788d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d078a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d078bf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d078d80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d077020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0753f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0753f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d075770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d075900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d075a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d075c20"/>
        <function-ref name="get" scoped="" ref="0x7faf6d075db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d074020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0741b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d074340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0726d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d072a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d072be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d072d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d071020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d071340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0714d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d071660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d06f9b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d06f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d06fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d06e020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d06e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d06e340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d06e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d06e660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d06e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d06e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d06ce20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d06ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d06b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d06b350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d06b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d06b670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d06b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d06b990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d06bb20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d06bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0680a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d068420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d0685b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d068740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d0688d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d068a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d068bf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d068d80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d066020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7faf6eb6c760" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7faf6eb6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb6cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb6cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb6ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb6b020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb6b340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb6b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7faf6eb68c10" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7faf6eb68c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb67020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb67340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb674d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb67660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb677f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb67980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb67b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7faf6eb6e3f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7faf6eb6e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb6e770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb6e900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb6ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb6ec20"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb6edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb6d020"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb6d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7faf6eb6b8f0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7faf6eb6b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb6bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb6be00"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb69020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb691b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb69340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb694d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb69660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7faf6eb67da0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7faf6eb67da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb66180"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb66310"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb664a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb66630"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb667c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb66950"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb66ae0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb66c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7faf6eb6d5d0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7faf6eb6d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb6d950"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb6dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb6dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb6de00"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb6c1b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb6c340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7faf6eb69a80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7faf6eb69a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb69e00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb68020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb681b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb68340"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb684d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb68660"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb687f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb68980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7faf6eb65020" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7faf6eb65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb65530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb65850"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb65b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb65d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d012c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d012c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d0110a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d011230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0113c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d011550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0116e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d011870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d011a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d011b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d00fe20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d00fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d00e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d00e350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d00e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d00e670"/>
        <function-ref name="get" scoped="" ref="0x7faf6d00e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d00e990"/>
        <function-ref name="set" scoped="" ref="0x7faf6d00eb20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d00ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d00b0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d00b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d00b420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d00b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d00b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d00b8d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d00ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d00bbf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d00bd80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d00a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0083f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0083f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d008770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d008900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d008a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d008c20"/>
        <function-ref name="get" scoped="" ref="0x7faf6d008db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d007020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0071b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d007340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0056d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d005a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d005be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d005d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d004020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d004340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0044d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d004660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6d0029b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6d0029b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d002d30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d001020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d0011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d001340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d0014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d001660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d0017f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d001980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cfffe20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cfffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cffe1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cffe350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cffe4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cffe670"/>
        <function-ref name="get" scoped="" ref="0x7faf6cffe800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cffe990"/>
        <function-ref name="set" scoped="" ref="0x7faf6cffeb20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cffecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cffb0a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cffb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cffb420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cffb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cffb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cffb8d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6cffba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cffbbf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cffbd80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cff9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7faf6eb5ca80" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7faf6eb5ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb5ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb5b020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb5b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb5b340"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb5b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb5b660"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb5b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb5b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7faf6eb58020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7faf6eb58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb58530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb586c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb58850"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb589e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb58b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb58d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7faf6eb5f7a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7faf6eb5f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb5fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb5fcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb5fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb5d020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb5d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb5d340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb5d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7faf6eb5bc10" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7faf6eb5bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb5a020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb5a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb5a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb5a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb5a7f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb5a980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb5ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7faf6eb572b0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7faf6eb572b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb57630"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb577c0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb57950"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb57ae0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb57c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb57e00"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb56020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7faf6eb5d8f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7faf6eb5d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb5dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb5de00"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb5c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb5c1b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb5c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb5c4d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb5c660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7faf6eb5ada0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7faf6eb5ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb59180"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb59310"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb594a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb59630"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb597c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb59950"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb59ae0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb59c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7faf6eb56440" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7faf6eb56440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb567c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb56950"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb56ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb56c70"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb56e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb55020"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb551b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cfa7c90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cfa7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cfa60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cfa6230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cfa63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cfa6550"/>
        <function-ref name="get" scoped="" ref="0x7faf6cfa66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cfa6870"/>
        <function-ref name="set" scoped="" ref="0x7faf6cfa6a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cfa6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cfa4e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cfa4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cfa31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cfa3350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cfa34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cfa3670"/>
        <function-ref name="get" scoped="" ref="0x7faf6cfa3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cfa3990"/>
        <function-ref name="set" scoped="" ref="0x7faf6cfa3b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cfa3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cfa00a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cfa00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cfa0420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cfa05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cfa0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cfa08d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6cfa0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cfa0bf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cfa0d80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cf9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cf9d3f0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cf9d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cf9d770"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cf9d900"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cf9da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cf9dc20"/>
        <function-ref name="get" scoped="" ref="0x7faf6cf9ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cf9c020"/>
        <function-ref name="set" scoped="" ref="0x7faf6cf9c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cf9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cf9a6d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cf9a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cf9aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cf9abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cf9ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cf99020"/>
        <function-ref name="get" scoped="" ref="0x7faf6cf991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cf99340"/>
        <function-ref name="set" scoped="" ref="0x7faf6cf994d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cf99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cf979b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cf979b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cf97d30"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cf96020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cf961b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cf96340"/>
        <function-ref name="get" scoped="" ref="0x7faf6cf964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cf96660"/>
        <function-ref name="set" scoped="" ref="0x7faf6cf967f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cf96980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cf94e20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cf94e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cf931c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cf93350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cf934e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cf93670"/>
        <function-ref name="get" scoped="" ref="0x7faf6cf93800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cf93990"/>
        <function-ref name="set" scoped="" ref="0x7faf6cf93b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cf93cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6cf900a0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6cf900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6cf90420"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6cf905b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6cf90740"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6cf908d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6cf90a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6cf90bf0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cf90d80"/>
        <function-ref name="clr" scoped="" ref="0x7faf6cf8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb4ea20" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb4ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb4eda0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb38020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb38340"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb38660"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb387f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb38980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb336d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb33a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb33be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb33d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb32020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb32340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb324d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb2d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb2d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb2d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb2d670"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb2d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb2d990"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb2db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb2dcb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb2de40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb29c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb29c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb28230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb28550"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb28870"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb28a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb28b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb236d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb236d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb23a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb23be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb23d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb22020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb22340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb224d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb22660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb1d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb1d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb1d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb1d670"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb1d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb1d990"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb1db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb1dcb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb1de40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb19c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb19c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb180a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb18230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb183c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb18550"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb186e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb18870"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb18a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb18b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb136d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb13a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb13be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb13d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb12020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb12340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb124d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb12660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb0d160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb0d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb0d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb0d670"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb0d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb0d990"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb0db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb0dcb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb0de40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb09c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb09c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb080a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb08230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb083c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb08550"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb086e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb08870"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb08a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb08b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eb036d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eb036d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eb03a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eb03be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eb03d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eb02020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eb021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eb02340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eb024d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eb02660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eafd160" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eafd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eafd4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eafd670"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eafd800"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eafd990"/>
        <function-ref name="get" scoped="" ref="0x7faf6eafdb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eafdcb0"/>
        <function-ref name="set" scoped="" ref="0x7faf6eafde40"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eafc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eaf9c90" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eaf9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eaf80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eaf8230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eaf83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eaf8550"/>
        <function-ref name="get" scoped="" ref="0x7faf6eaf86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eaf8870"/>
        <function-ref name="set" scoped="" ref="0x7faf6eaf8a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eaf8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7faf6eaf36d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7faf6eaf36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6eaf3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6eaf3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6eaf3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6eaf2020"/>
        <function-ref name="get" scoped="" ref="0x7faf6eaf21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6eaf2340"/>
        <function-ref name="set" scoped="" ref="0x7faf6eaf24d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6eaf2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6eab5020" loc="61:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6eab5020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6eab53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7faf6eab5690" loc="62:/home/cxf/Desktop/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6eab5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7faf6eab5a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7faf6eab5ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7faf6eab5d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7faf6eab4020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7faf6eab41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7faf6ea94720" loc="60:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6ea94720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ea94aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7faf6ec5bdd0" loc="57:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7faf6ec5bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faf6ea96180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7faf6ea94020" loc="59:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7faf6ea94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ea943a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7faf6ea96470" loc="58:/home/cxf/Desktop/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7faf6ea96470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ea967f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faf6ea96980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faf6ea96b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7faf6ed50e10" loc="48:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ed50e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6ed5b1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6ed5b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7faf6eda1020" loc="47:/home/cxf/Desktop/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7faf6eda1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6eda13a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faf6eda1530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faf6eda16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7faf6ec9e850" loc="56:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7faf6ec9e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6ec9ebd0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6ec9ed60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7faf6ec9dde0" loc="57:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7faf6ec9dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7faf6ec9c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7faf6ec9f8a0" loc="55:/home/cxf/Desktop/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7faf6ec9f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ec9fc20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7faf6ec9fdb0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7faf6ec9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7faf6ec7d690" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7faf6ec7d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7faf6ec7da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7faf6ed59a30" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7faf6ed59a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7faf6ed59db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7faf6ec80020" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7faf6ec80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7faf6ec803a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7faf6e8e1530" loc="65:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7faf6e8e1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7faf6e8e18b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7faf6e8e0020" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7faf6e8e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e8e03a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e8e0530"/>
        <function-ref name="start" scoped="" ref="0x7faf6e8e06c0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e8e0850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7faf6e86ee30" loc="70:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x7faf6e86ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e8741e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7faf6e851b40" loc="78:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x7faf6e851b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e850020"/>
        <function-ref name="source" scoped="" ref="0x7faf6e8501b0"/>
        <function-ref name="address" scoped="" ref="0x7faf6e850340"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e8504d0"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e850660"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e8507f0"/>
        <function-ref name="type" scoped="" ref="0x7faf6e850980"/>
        <function-ref name="setType" scoped="" ref="0x7faf6e850b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e850ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e850e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6e84f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="vLight" ref="0x7faf6e83a4e0" loc="84:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="vLight" scoped="" ref="0x7faf6e83a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6e839110"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6e839590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7faf6e8e0be0" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7faf6e8e0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e8df020"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e8df1b0"/>
        <function-ref name="start" scoped="" ref="0x7faf6e8df340"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e8df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7faf6e852d70" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e852d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e851180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e851310"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e8514a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e851630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e8517c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x7faf6e83fc70" loc="83:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7faf6e83fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6e83e8a0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6e83ed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7faf6e853a50" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e853a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e853dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="iLight" ref="0x7faf6e839d30" loc="85:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="iLight" scoped="" ref="0x7faf6e839d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6e837940"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6e837dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7faf6e81c810" loc="146:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7faf6e81c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6e81cb90"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6e81cd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7faf6e81b730" loc="147:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x7faf6e81b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6e81bab0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6e81bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="time" ref="0x7faf6e844e10" loc="81:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="time" scoped="" ref="0x7faf6e844e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e841410"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e84d9e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6e842790"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6e842310"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6e841d10"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6e841890"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e84de60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6e84eb80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6e842da0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6e84d090"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e84d560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7faf6e865870" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x7faf6e865870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e865bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e865d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e872020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e8721b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e872340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7faf6e8666e0" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6e8666e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e866a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e866bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e866d80"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e853020"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e8531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6e82a0d0" loc="89:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6e82a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6e82a450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6e82a5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6e82a770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6e82a900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6e82aa90"/>
        <function-ref name="get" scoped="" ref="0x7faf6e82ac20"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6e82adb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6e8354d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e835020"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6e8351b0"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6e835340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7faf6e8db020" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x7faf6e8db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e8db3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e8db530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e8db6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e8db850"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e8db9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7faf6e8559b0" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x7faf6e8559b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e855d30"/>
        <function-ref name="source" scoped="" ref="0x7faf6e86f020"/>
        <function-ref name="address" scoped="" ref="0x7faf6e86f1b0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e86f340"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e86f4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e86f660"/>
        <function-ref name="type" scoped="" ref="0x7faf6e86f7f0"/>
        <function-ref name="setType" scoped="" ref="0x7faf6e86f980"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e86fb10"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e86fca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6e86fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7faf6e8526b0" loc="76:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x7faf6e8526b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e852a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7faf6e83b410" loc="82:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7faf6e83b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6e83f020"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6e83f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faf6e77b260" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6e77b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6e77b5e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6e77b770"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6e77b900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6e77ba90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6e77bc20"/>
        <function-ref name="get" scoped="" ref="0x7faf6e77bdb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6e77a020"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6e77a660"/>
        <function-ref name="set" scoped="" ref="0x7faf6e77a1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6e77a340"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6e77a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7faf6e7753c0" loc="50:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7faf6e7753c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6e775740"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6e7758d0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6e775a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6e775bf0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e775d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6e774020"/>
        <function-ref name="set" scoped="" ref="0x7faf6e7741b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6e774340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e7775c0" loc="46:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e7775c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e777940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7faf6e774660" loc="51:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7faf6e774660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6e7749e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6e774b70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6e774d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6e773020"/>
        <function-ref name="get" scoped="" ref="0x7faf6e7731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6e773340"/>
        <function-ref name="set" scoped="" ref="0x7faf6e7734d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6e773660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faf6e777bc0" loc="47:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6e777bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6e776020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6e7761b0"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6e776340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6e7764d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6e776660"/>
        <function-ref name="get" scoped="" ref="0x7faf6e7767f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6e776980"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6e775020"/>
        <function-ref name="set" scoped="" ref="0x7faf6e776b10"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6e776ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6e776e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7faf6e773980" loc="52:/home/cxf/Desktop/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7faf6e773980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6e773d00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6e772020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6e7721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6e772340"/>
        <function-ref name="get" scoped="" ref="0x7faf6e7724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6e772660"/>
        <function-ref name="set" scoped="" ref="0x7faf6e7727f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6e772980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7faf6e7560f0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7faf6e7560f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6e756470"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6e756600"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6e756790"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6e756920"/>
        <function-ref name="get" scoped="" ref="0x7faf6e756ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6e756c40"/>
        <function-ref name="set" scoped="" ref="0x7faf6e756dd0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6e755020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7faf6e755380" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7faf6e755380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6e755700"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6e755890"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6e755a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6e755bb0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e755d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6e754020"/>
        <function-ref name="set" scoped="" ref="0x7faf6e7541b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6e754340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7faf6e753920" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e753920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e753ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7faf6e7546a0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7faf6e7546a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6e754a20"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6e754bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6e754d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6e753020"/>
        <function-ref name="get" scoped="" ref="0x7faf6e7531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6e753340"/>
        <function-ref name="set" scoped="" ref="0x7faf6e7534d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6e753660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6e74b0c0" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6e74b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e74b440"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e74b5d0"/>
        <function-ref name="start" scoped="" ref="0x7faf6e74b760"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e74b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7faf6e7426d0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e7426d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6e742a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6e742ce0" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6e742ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e7460a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e746230"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e7463c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e746550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e7466e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6e74a1d0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6e74a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e74a550"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e74a6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e74a870"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e74aa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e74ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7faf6e747020" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7faf6e747020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e7473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7faf6e7368a0" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e7368a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7faf6e736c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7faf6e736db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7faf6e73b020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7faf6e73b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e7493f0" loc="44:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e7493f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e749770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faf6e73ce00" loc="51:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e73ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6e7411c0"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6e741350"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6e7414e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7faf6e72ebf0" loc="53:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7faf6e72ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7faf6e73a020"/>
        <function-ref name="setRetries" scoped="" ref="0x7faf6e73a1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7faf6e73a340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7faf6e73a4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7faf6e73a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6e746990" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6e746990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e746d10"/>
        <function-ref name="source" scoped="" ref="0x7faf6e745020"/>
        <function-ref name="address" scoped="" ref="0x7faf6e7451b0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e745340"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e7454d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e745660"/>
        <function-ref name="type" scoped="" ref="0x7faf6e7457f0"/>
        <function-ref name="setType" scoped="" ref="0x7faf6e745980"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e745b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e745ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6e745e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7faf6e7298e0" loc="54:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e7298e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7faf6e729c60"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e729df0"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e735020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7faf6e7209e0" loc="56:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7faf6e7209e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e728020"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e728750"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e72b890"/>
        <function-ref name="set" scoped="" ref="0x7faf6e728e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7faf6e71faf0" loc="57:/home/cxf/Desktop/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e71faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e71d210"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e71d940"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e71ea80"/>
        <function-ref name="set" scoped="" ref="0x7faf6e71b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6e718300" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6e718300"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e718680"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e718810"/>
        <function-ref name="start" scoped="" ref="0x7faf6e7189a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e718b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7faf6e7013b0" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6e7013b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e700ac0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e700570"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6e700020"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6ff090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7faf6e6f4270" loc="71:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e6f4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e6f3800"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e6f2020"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e6f30d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6f2750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7faf6e715d60" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e715d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6e714180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6e712cd0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6e712cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e7110a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e711230"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e7113c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e711550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e7116e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6e717320" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6e717320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e7176a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e717830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e7179c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e717b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e717ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7faf6e7151d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7faf6e7151d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e715550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7faf6e70ae80" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6e70ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e7035e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e703090"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6e704ad0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e703b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7faf6e70fb40" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e70fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7faf6e70e020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7faf6e70e1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7faf6e70e340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7faf6e70e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e716510" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e716510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e716890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7faf6e6f8130" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6e6f8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e6f7750"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e6f7e80"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e6f7020"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6f65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7faf6e6f9b70" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6e6f9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6e6fc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7faf6e7068d0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6e7068d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e70a090"/>
        <function-ref name="get" scoped="" ref="0x7faf6e70baf0"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6e70b5a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e70a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faf6e70f1a0" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e70f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6e70f520"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6e70f6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6e70f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7faf6e714a50" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e714a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e714dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7faf6e70e790" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7faf6e70e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7faf6e70eb10"/>
        <function-ref name="setRetries" scoped="" ref="0x7faf6e70eca0"/>
        <function-ref name="getRetries" scoped="" ref="0x7faf6e70ee30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7faf6e70d020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7faf6e70d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6e711990" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6e711990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e711d10"/>
        <function-ref name="source" scoped="" ref="0x7faf6e710020"/>
        <function-ref name="address" scoped="" ref="0x7faf6e7101b0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e710340"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e7104d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e710660"/>
        <function-ref name="type" scoped="" ref="0x7faf6e7107f0"/>
        <function-ref name="setType" scoped="" ref="0x7faf6e710980"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e710b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e710ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6e710e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7faf6e70d480" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e70d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7faf6e70d900"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e70da90"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e70dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7faf6e6fbe60" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6e6fbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7faf6e6fd210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7faf6e7126c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e7126c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e712a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6e6f08f0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6e6f08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e6f0c70"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e6f0e00"/>
        <function-ref name="start" scoped="" ref="0x7faf6e6ed020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e6ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7faf6e6c3020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6e6c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e6c2740"/>
        <function-ref name="get" scoped="" ref="0x7faf6e6c21f0"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6e6c3c50"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6c2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7faf6e6e3160" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7faf6e6e3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6e6e34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7faf6e6dc2c0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7faf6e6dc2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6e6dc740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6e6dc8d0"/>
        <function-ref name="request" scoped="" ref="0x7faf6e6dca60"/>
        <function-ref name="granted" scoped="" ref="0x7faf6e6dcbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6e6dcd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7faf6e6ea4d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e6ea4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6e6ea850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6e6ed980" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6e6ed980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e6edd00"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e6ec020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e6ec1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e6ec340"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e6ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7faf6e6eb900" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7faf6e6eb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e6ebc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7faf6e6cd490" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e6cd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7faf6e6cd810"/>
        <function-ref name="address" scoped="" ref="0x7faf6e6cd9a0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e6cdb30"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e6cdcc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e6cde50"/>
        <function-ref name="pan" scoped="" ref="0x7faf6e6d6020"/>
        <function-ref name="setPan" scoped="" ref="0x7faf6e6d61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e6d6340"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6e6d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7faf6e6d6890" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7faf6e6d6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e6d6c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e6d6da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e6d5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e6d51b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e6d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7faf6e6c7a90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6e6c7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e6c41f0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e6c6c40"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6e6c66f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6c4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7faf6e6cc080" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e6cc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7faf6e6cc400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7faf6e6cc590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7faf6e6cc720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7faf6e6cc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7faf6e6e6ba0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7faf6e6e6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e6e5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e6e51b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e6e5340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e6e54d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e6e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e6eccb0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e6eccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e6eb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7faf6e6be130" loc="84:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6e6be130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e6bd8a0"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e6bb020"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e6bd170"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6bb750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7faf6e6c0bb0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6e6c0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6e6bf820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7faf6e6ca540" loc="78:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6e6ca540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e6c9c50"/>
        <function-ref name="get" scoped="" ref="0x7faf6e6c9700"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6e6c91b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6c71f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faf6e6d5670" loc="68:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e6d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6e6d59f0"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6e6d5b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6e6d5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7faf6e6ddc10" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7faf6e6ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e6e4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e6e41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e6e4340"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e6e44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e6e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7faf6e6e91d0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e6e91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e6e9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7faf6e6ccb70" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7faf6e6ccb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7faf6e6cb020"/>
        <function-ref name="setRetries" scoped="" ref="0x7faf6e6cb1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7faf6e6cb340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7faf6e6cb4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7faf6e6cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7faf6e6cb930" loc="76:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e6cb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7faf6e6cbcb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e6cbe40"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e6ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6e6e8470" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6e6e8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e6e87f0"/>
        <function-ref name="source" scoped="" ref="0x7faf6e6e8980"/>
        <function-ref name="address" scoped="" ref="0x7faf6e6e8b10"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e6e8ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e6e8e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e6e6020"/>
        <function-ref name="type" scoped="" ref="0x7faf6e6e61b0"/>
        <function-ref name="setType" scoped="" ref="0x7faf6e6e6340"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e6e64d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e6e6660"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6e6e67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7faf6e6ba3f0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6e6ba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e6b9970"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e6b70d0"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e6b9240"/>
        <function-ref name="set" scoped="" ref="0x7faf6e6b7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7faf6e6e49d0" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7faf6e6e49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e6e4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7faf6e6c0350" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6e6c0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7faf6e6c06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7faf6e6e9df0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e6e9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e6e81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7faf6e690a40" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7faf6e690a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7faf6e690dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7faf6e69cc80" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7faf6e69cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7faf6e6a30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7faf6e689e30" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7faf6e689e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e6951e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7faf6e695370"/>
        <function-ref name="source" scoped="" ref="0x7faf6e695500"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e695690"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e695820"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e6959b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e695b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7faf6e6918e0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7faf6e6918e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7faf6e691c60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7faf6e691df0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7faf6e69a020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7faf6e69a1b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7faf6e69a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7faf6e667780" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e667780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6e667b00"/>
        <function-ref name="wait" scoped="" ref="0x7faf6e667c90"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e667e20"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6e66b020"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6e66b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7faf6e660ce0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7faf6e660ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e66a0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e66a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e66a3c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e66a550"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e66a6e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e66a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7faf6e66ae40" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6e66ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6e65f500"/>
        <function-ref name="clear" scoped="" ref="0x7faf6e65fc30"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6e666da0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e65d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7faf6e6ad350" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7faf6e6ad350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e6ad6d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e6ad860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e6ad9f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7faf6e6adb80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7faf6e6add10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7faf6e69d640" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7faf6e69d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7faf6e69d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7faf6e6a44f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7faf6e6a44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7faf6e6a4870"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7faf6e6a4a00"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7faf6e6a4b90"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7faf6e6a4d20"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7faf6e6b2020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7faf6e6b21b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7faf6e6b2340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7faf6e6b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7faf6e66d880" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e66d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7faf6e66dc00"/>
        <function-ref name="getDSN" scoped="" ref="0x7faf6e66dd90"/>
        <function-ref name="setFCF" scoped="" ref="0x7faf6e687020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7faf6e6871b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7faf6e687340"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7faf6e6874d0"/>
        <function-ref name="setDSN" scoped="" ref="0x7faf6e687660"/>
        <function-ref name="createAckReply" scoped="" ref="0x7faf6e6877f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7faf6e687980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7faf6e687b10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7faf6e687ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7faf6e687e30"/>
        <function-ref name="localAddr" scoped="" ref="0x7faf6e686020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7faf6e6862b0"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6e686440"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7faf6e6865d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7faf6e686760"/>
        <function-ref name="setFramePending" scoped="" ref="0x7faf6e6868f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7faf6e686a80"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e686c10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7faf6e686da0"/>
        <function-ref name="getFCF" scoped="" ref="0x7faf6e66c020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7faf6e66c1b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7faf6e66c340"/>
        <function-ref name="getFramePending" scoped="" ref="0x7faf6e66c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7faf6e69f980" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7faf6e69f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7faf6e69fd00"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7faf6e6ac020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7faf6e6ac1b0"/>
        <function-ref name="getSender" scoped="" ref="0x7faf6e6ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7faf6e696340" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7faf6e696340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7faf6e6966c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7faf6e696850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7faf6e6969e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7faf6e696b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7faf6e6036b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e6036b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6e603a50"/>
        <function-ref name="wait" scoped="" ref="0x7faf6e603be0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e603d70"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6e5c7020"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6e5c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7faf6e5c7820" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6e5c7820"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7faf6e897d90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e5c3090"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e5c5090"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6e5c5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e5c5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6e5c3550"/>
        <function-ref name="start" scoped="" ref="0x7faf6e5c66a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e5c6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7faf6ce94c30" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6ce94c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6ce93020"/>
        <function-ref name="wait" scoped="" ref="0x7faf6ce931b0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6ce93340"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6ce934d0"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6ce93660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7faf6ce93b50" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6ce93b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7faf6e897d90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6ce904e0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6ce914e0"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6ce91e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6ce919a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6ce909a0"/>
        <function-ref name="start" scoped="" ref="0x7faf6ce929b0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6ce91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7faf6ce90d90" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7faf6ce90d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7faf6ce8e180"/>
        <function-ref name="suspend" scoped="" ref="0x7faf6ce8e310"/>
        <function-ref name="resume" scoped="" ref="0x7faf6ce8e4a0"/>
        <function-ref name="run" scoped="" ref="0x7faf6ce8e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tasklet" ref="0x7faf6e5cf740" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tasklet" scoped="" ref="0x7faf6e5cf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6e5cfac0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6e5cfc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7faf6e5d0130" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7faf6e5d0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7faf6e5d04b0"/>
        <function-ref name="suspend" scoped="" ref="0x7faf6e5d0640"/>
        <function-ref name="resume" scoped="" ref="0x7faf6e5d07d0"/>
        <function-ref name="run" scoped="" ref="0x7faf6e5d0960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e50f8f0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e50f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e50fc70"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e50fe00"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e50e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e50e2b0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e50e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e50e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7faf6e512420" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e512420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6e5127c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6e5158b0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6e5158b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e515c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e515dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e514020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e5141b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e514340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6e5146c0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6e5146c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e514a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e514bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e514d80"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e513020"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e5131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7faf6e513c90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7faf6e513c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e5120a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6e510a70" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6e510a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e510df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e50f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e50f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e50f340"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e50f4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e50f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6e50e8c0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6e50e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e50ec40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7faf6e50edd0"/>
        <function-ref name="source" scoped="" ref="0x7faf6e50d020"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e50d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e50d340"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e50d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e50d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e513530" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e513530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e5138d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7faf6e512b80" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6e512b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e510020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6e516280" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6e516280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6e516600"/>
        <function-ref name="source" scoped="" ref="0x7faf6e516790"/>
        <function-ref name="address" scoped="" ref="0x7faf6e516920"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e516ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e516c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e516dd0"/>
        <function-ref name="type" scoped="" ref="0x7faf6e515020"/>
        <function-ref name="setType" scoped="" ref="0x7faf6e5151b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e515340"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6e5154d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6e515660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7faf6e5103e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6e5103e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e510780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6ce6f2b0" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6ce6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6ce6f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6ce708f0" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6ce708f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6ce70c70"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6ce70e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6ce6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7faf6ce723a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7faf6ce723a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6ce72740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6ce75720" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6ce75720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6ce75aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6ce75c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6ce75dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6ce74020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6ce741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6ce74530" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6ce74530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6ce748d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6ce74a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6ce74bf0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6ce74d80"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6ce73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7faf6ce73b00" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7faf6ce73b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6ce72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6ce781d0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6ce781d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6ce78550"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6ce786e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6ce78870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6ce78a00"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6ce78b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6ce78d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6ce6f8c0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6ce6f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6ce6fd40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7faf6ce6d020"/>
        <function-ref name="source" scoped="" ref="0x7faf6ce6d1b0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6ce6d340"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6ce6d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6ce6d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6ce6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7faf6ce6da40" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6ce6da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7faf6ce6ddc0"/>
        <function-ref name="changed" scoped="" ref="0x7faf6ce6c020"/>
        <function-ref name="amGroup" scoped="" ref="0x7faf6ce6c1b0"/>
        <function-ref name="setAddress" scoped="" ref="0x7faf6ce6c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6ce71a70" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6ce71a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6ce71df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6ce70020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6ce701b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6ce70340"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6ce704d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6ce70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6ce733a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6ce733a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6ce73740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7faf6ce72b00" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7faf6ce72b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6ce71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6ce76020" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6ce76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6ce763a0"/>
        <function-ref name="source" scoped="" ref="0x7faf6ce76530"/>
        <function-ref name="address" scoped="" ref="0x7faf6ce766c0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6ce76850"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6ce769e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6ce76b70"/>
        <function-ref name="type" scoped="" ref="0x7faf6ce76d00"/>
        <function-ref name="setType" scoped="" ref="0x7faf6ce75020"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6ce751b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6ce75340"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6ce754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7faf6ce713e0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7faf6ce713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6ce71780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7faf6e52d5a0" loc="54:/home/cxf/Desktop/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6e52d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7faf6e52d920"/>
        <function-ref name="changed" scoped="" ref="0x7faf6e52dab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7faf6e52dc40"/>
        <function-ref name="setAddress" scoped="" ref="0x7faf6e52ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e4f7020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e4f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e4f73a0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e4f7530"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e4f76c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6e4f7910" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6e4f7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6e4f7c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6e4f7e20"/>
        <function-ref name="request" scoped="" ref="0x7faf6e4f6020"/>
        <function-ref name="granted" scoped="" ref="0x7faf6e4f61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6e4f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7faf6e506550" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7faf6e506550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e5068d0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e506a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e506bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6e491150" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6e491150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6e4914f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6e491680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6e48f1f0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6e48f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6e48f590"/>
        <function-ref name="configure" scoped="" ref="0x7faf6e48f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6e492390" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6e492390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6e492730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6e4928c0"/>
        <function-ref name="request" scoped="" ref="0x7faf6e492a50"/>
        <function-ref name="granted" scoped="" ref="0x7faf6e492be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6e492d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6e4918d0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6e4918d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6e491c50"/>
        <function-ref name="userId" scoped="" ref="0x7faf6e491de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6ce1a3b0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6ce1a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ce1a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faf6ce1a9c0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6ce1a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6ce1ad40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6ce19020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6ce191b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6ce19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6ce17850" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6ce17850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6ce17bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6ce17d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6ce16910" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6ce16910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6ce16cb0"/>
        <function-ref name="configure" scoped="" ref="0x7faf6ce16e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faf6ce15120" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7faf6ce15120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6ce154a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6ce15630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6ce157c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6ce15950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6ce189d0" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6ce189d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6ce18d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6ce17020"/>
        <function-ref name="request" scoped="" ref="0x7faf6ce171b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6ce17340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6ce174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6ce16020" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6ce16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6ce163a0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6ce16530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faf6ce15c20" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7faf6ce15c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6ce13020"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6ce131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e4582b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e4582b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e458630"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e4587c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e458950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e458be0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e458be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e456020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7faf6e45dd30" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7faf6e45dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7faf6e45c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6e48ce00" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6e48ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e45e1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e45e350"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e45e4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e45e670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e45e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7faf6e459470" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e459470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e4597f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e459980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e459b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e459ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e459e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e458020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7faf6e45c390" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e45c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7faf6e45c710"/>
        <function-ref name="getDSN" scoped="" ref="0x7faf6e45c8a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7faf6e45ca30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7faf6e45cbc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7faf6e45cd50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7faf6e45b020"/>
        <function-ref name="setDSN" scoped="" ref="0x7faf6e45b1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7faf6e45b340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7faf6e45b4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7faf6e45b660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7faf6e45b7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7faf6e45b980"/>
        <function-ref name="localAddr" scoped="" ref="0x7faf6e45bb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7faf6e45bda0"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6e45a020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7faf6e45a1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7faf6e45a340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7faf6e45a4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7faf6e45a660"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e45a7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7faf6e45a980"/>
        <function-ref name="getFCF" scoped="" ref="0x7faf6e45ab10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7faf6e45aca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7faf6e45ae30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7faf6e459020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7faf6e45ea50" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7faf6e45ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e45edd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6e45d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e45d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e45d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e45d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7faf6e45d760" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7faf6e45d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e45dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e41bc40" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e41bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e41a020"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e41a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e41a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e41a5d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e41a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e41a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7faf6e41e020" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e41e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e41e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e41e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e41e6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e41e850"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e41e9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e41eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7faf6e41c770" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7faf6e41c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e41caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6e41abe0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6e41abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e419020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e4191b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e419340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e4194d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e419660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e4197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7faf6e41ee00" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7faf6e41ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e41c1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e41c350"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e41c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7faf6e41f0a0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7faf6e41f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e41f420"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e41f5b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e41f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7faf6e41f9d0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7faf6e41f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e41fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7faf6e41cd80" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7faf6e41cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e41b180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e41b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e41b4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e41b630"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e41b7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e41b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7faf6e386c40" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6e386c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7faf6e384020"/>
        <function-ref name="address" scoped="" ref="0x7faf6e3841b0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6e384340"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6e3844d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6e384660"/>
        <function-ref name="pan" scoped="" ref="0x7faf6e3847f0"/>
        <function-ref name="setPan" scoped="" ref="0x7faf6e384980"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e384b10"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6e384ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6e383020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e383020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e3833a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e383530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e3836c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e383850"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e3839e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e383b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7faf6e389b20" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6e389b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7faf6e388020"/>
        <function-ref name="getDSN" scoped="" ref="0x7faf6e3881b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7faf6e388340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7faf6e3884d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7faf6e388660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7faf6e3887f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7faf6e388980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7faf6e388b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7faf6e388ca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7faf6e388e30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7faf6e387020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7faf6e3871b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7faf6e387340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7faf6e3875d0"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6e387760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7faf6e3878f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7faf6e387a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7faf6e387c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7faf6e387da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6e386020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7faf6e3861b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7faf6e386340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7faf6e3864d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7faf6e386660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7faf6e3867f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6e383e60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6e383e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e382210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e3823a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e382530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e3826c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e382850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e3829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7faf6cdac470" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7faf6cdac470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7faf6cdac7f0"/>
        <function-ref name="address" scoped="" ref="0x7faf6cdac980"/>
        <function-ref name="destination" scoped="" ref="0x7faf6cdacb10"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6cdacca0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6cdace30"/>
        <function-ref name="pan" scoped="" ref="0x7faf6cdab020"/>
        <function-ref name="setPan" scoped="" ref="0x7faf6cdab1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6cdab340"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6cdab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6cdab720" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6cdab720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cdabaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6cdabc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6cdabdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6cdaa020"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6cdaa1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6cdaa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7faf6cdaf3a0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7faf6cdaf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7faf6cdaf720"/>
        <function-ref name="getDSN" scoped="" ref="0x7faf6cdaf8b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7faf6cdafa40"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7faf6cdafbd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7faf6cdafd60"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7faf6cdae020"/>
        <function-ref name="setDSN" scoped="" ref="0x7faf6cdae1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7faf6cdae340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7faf6cdae4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7faf6cdae660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7faf6cdae7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7faf6cdae980"/>
        <function-ref name="localAddr" scoped="" ref="0x7faf6cdaeb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7faf6cdaeda0"/>
        <function-ref name="localPan" scoped="" ref="0x7faf6cdad020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7faf6cdad1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7faf6cdad340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7faf6cdad4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7faf6cdad660"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6cdad7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7faf6cdad980"/>
        <function-ref name="getFCF" scoped="" ref="0x7faf6cdadb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7faf6cdadca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7faf6cdade30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7faf6cdac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7faf6cdaa5f0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7faf6cdaa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7faf6cdaa970"/>
        <function-ref name="changed" scoped="" ref="0x7faf6cdaab00"/>
        <function-ref name="amGroup" scoped="" ref="0x7faf6cdaac90"/>
        <function-ref name="setAddress" scoped="" ref="0x7faf6cdaae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6cda8120" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6cda8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cda84a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6cda8630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6cda87c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6cda8950"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6cda8ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6cda8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e3174a0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e3174a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e317820"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e3179b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e317b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e317dd0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e317dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e316180"/>
        <function-ref name="header" scoped="" ref="0x7faf6e316310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6e3182f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6e3182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e318670"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e318800"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e318990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6e3165a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6e3165a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7faf6e316920"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7faf6e316ab0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7faf6e316c40"/>
        <function-ref name="getSender" scoped="" ref="0x7faf6e316dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6e318be0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e318be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e317020"/>
        <function-ref name="header" scoped="" ref="0x7faf6e3171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6cd5bbd0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6cd5bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6cd59020"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6cd591b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6cd59340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6cd595d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6cd595d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6cd59950"/>
        <function-ref name="header" scoped="" ref="0x7faf6cd59ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7faf6cd57410" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6cd57410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cd57790"/>
        <function-ref name="clearAll" scoped="" ref="0x7faf6cd57920"/>
        <function-ref name="get" scoped="" ref="0x7faf6cd57ab0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cd57c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6cd5c4e0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6cd5c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6cd5c860"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6cd5c9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6cd5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7faf6cd587e0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7faf6cd587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7faf6cd58b60"/>
        <function-ref name="insertNode" scoped="" ref="0x7faf6cd58cf0"/>
        <function-ref name="getNode" scoped="" ref="0x7faf6cd58e80"/>
        <function-ref name="evicted" scoped="" ref="0x7faf6cd57030"/>
        <function-ref name="getIndex" scoped="" ref="0x7faf6cd571c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6cd5cdd0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6cd5cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6cd5b180"/>
        <function-ref name="header" scoped="" ref="0x7faf6cd5b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6cd5b560" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6cd5b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6cd5b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7faf6cd59d30" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7faf6cd59d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7faf6cd580e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7faf6cd58270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7faf6cd58400"/>
        <function-ref name="getSender" scoped="" ref="0x7faf6cd58590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7faf6e34de30" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7faf6e34de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7faf6e34a1e0"/>
        <function-ref name="insertNode" scoped="" ref="0x7faf6e34a370"/>
        <function-ref name="getNode" scoped="" ref="0x7faf6e34a500"/>
        <function-ref name="evicted" scoped="" ref="0x7faf6e34a690"/>
        <function-ref name="getIndex" scoped="" ref="0x7faf6e34a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7faf6e346d10" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6e346d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e3450e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7faf6e345270"/>
        <function-ref name="get" scoped="" ref="0x7faf6e345400"/>
        <function-ref name="set" scoped="" ref="0x7faf6e345590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7faf6e349a00" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7faf6e349a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7faf6e349d80"/>
        <function-ref name="insertNode" scoped="" ref="0x7faf6e346020"/>
        <function-ref name="getNode" scoped="" ref="0x7faf6e3461b0"/>
        <function-ref name="evicted" scoped="" ref="0x7faf6e346340"/>
        <function-ref name="getIndex" scoped="" ref="0x7faf6e3464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e3493b0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e3493b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e349730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7faf6cd55d40" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7faf6cd55d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cd540e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7faf6cd54270"/>
        <function-ref name="get" scoped="" ref="0x7faf6cd54400"/>
        <function-ref name="set" scoped="" ref="0x7faf6cd54590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e3057c0" loc="85:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e3057c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e305b40"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e305cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e305e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e304120" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e304120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e3044a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7faf6e301cb0" loc="93:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7faf6e301cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6e3000a0"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6e300230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6e3003c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6e312bb0" loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6e312bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e307020"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e3071b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e307340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6e3068b0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e3068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e306c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e306dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e305020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e3051b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e305340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e3054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6e304730" loc="87:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6e304730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e304ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e304c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e304dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e302020"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e3021b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e302340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7faf6e301020" loc="92:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7faf6e301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7faf6e3013a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7faf6e301530"/>
        <function-ref name="getRetries" scoped="" ref="0x7faf6e3016c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7faf6e301850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7faf6e3019e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e3075d0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e3075d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e307950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7faf6e302590" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e302590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6e302910"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6e302aa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6e302c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7faf6e307ba0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7faf6e307ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7faf6e306020"/>
        <function-ref name="setRetries" scoped="" ref="0x7faf6e3061b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7faf6e306340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7faf6e3064d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7faf6e306660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6e2fa880" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6e2fa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e2fac00"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e2fad90"/>
        <function-ref name="start" scoped="" ref="0x7faf6e2e6020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e2e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e2e28c0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e2e28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e2e2c40"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e2e2dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e2e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e2e12b0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e2e12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e2e1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6e2e6440" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6e2e6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e2e67c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e2e6950"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e2e6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6e2e43d0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e2e43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e2e4750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e2e48e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e2e4a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e2e4c00"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e2e4d90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e2e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7faf6e2e3270" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6e2e3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7faf6e2e35f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7faf6e2e3780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7faf6e2e3910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7faf6e2e3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7faf6e2e3d90" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7faf6e2e3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e2e2180"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e2e2310"/>
        <function-ref name="start" scoped="" ref="0x7faf6e2e24a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e2e2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e2e6d70" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e2e6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e2e4180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6e2e18c0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6e2e18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e2e1c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e2e1dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e2e0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e2e01b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e2e0340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e2e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7faf6cd31da0" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7faf6cd31da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7faf6cd30180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7faf6cd30310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7faf6cd304a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7faf6cd30630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6e272cc0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6e272cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e2710a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e271230"/>
        <function-ref name="start" scoped="" ref="0x7faf6e2713c0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e271550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7faf6e26f080" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7faf6e26f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6e26f400"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6e26f590"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e26f720"/>
        <function-ref name="done" scoped="" ref="0x7faf6e26f8b0"/>
        <function-ref name="standby" scoped="" ref="0x7faf6e26fa40"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e26fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6e2717e0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6e2717e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e271b60"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e271cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e271e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7faf6e26e730" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e26e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e26eab0"/>
        <function-ref name="header" scoped="" ref="0x7faf6e26ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6e270130" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6e270130"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e2704b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7faf6e26fe20" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6e26fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e26e1c0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e26e350"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e26e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7faf6e270700" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7faf6e270700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7faf6e270a80"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e270c10"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e270da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6cd283a0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6cd283a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6cd28720"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6cd288b0"/>
        <function-ref name="start" scoped="" ref="0x7faf6cd28a40"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cd28bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7faf6cd28e60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6cd28e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6cd27210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7faf6cd26d20" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7faf6cd26d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6cd250e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6cd25270"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6cd25400"/>
        <function-ref name="done" scoped="" ref="0x7faf6cd25590"/>
        <function-ref name="standby" scoped="" ref="0x7faf6cd25720"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6cd258b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6cd274a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6cd274a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6cd27820"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6cd279b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6cd27b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7faf6cd22020" loc="189:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7faf6cd22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6cd223a0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6cd22530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7faf6cd23020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6cd23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6cd233a0"/>
        <function-ref name="header" scoped="" ref="0x7faf6cd23530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7faf6cd22800" loc="144:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7faf6cd22800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6cd22b80"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6cd22d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6cd27dd0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6cd27dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6cd26180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7faf6cd23800" loc="322:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7faf6cd23800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6cd23b80"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6cd23d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7faf6cd245a0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6cd245a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6cd24920"/>
        <function-ref name="ready" scoped="" ref="0x7faf6cd24ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6cd24c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7faf6cd263d0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7faf6cd263d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7faf6cd26750"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6cd268e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6cd26a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7faf6cd25b00" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7faf6cd25b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7faf6cd25e80"/>
        <function-ref name="suspend" scoped="" ref="0x7faf6cd24030"/>
        <function-ref name="resume" scoped="" ref="0x7faf6cd241c0"/>
        <function-ref name="run" scoped="" ref="0x7faf6cd24350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e216020" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e2163a0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e216530"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e2166c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e216950" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e216950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e216cd0"/>
        <function-ref name="header" scoped="" ref="0x7faf6e216e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7faf6e2150e0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e2150e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6e215460"/>
        <function-ref name="wait" scoped="" ref="0x7faf6e2155f0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e215780"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6e215910"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6e215aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6e215d30" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6e215d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7faf6e2140e0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7faf6e214270"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7faf6e214400"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7faf6e214590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6e2176f0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e2176f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e217a70"/>
        <function-ref name="header" scoped="" ref="0x7faf6e217c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6e268db0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6e268db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e217180"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e217310"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e2174a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6cce8310" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6cce8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6cce8690"/>
        <function-ref name="ready" scoped="" ref="0x7faf6cce8820"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6cce89b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6cce8c40" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6cce8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6cce7020"/>
        <function-ref name="header" scoped="" ref="0x7faf6cce71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7faf6cce7400" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6cce7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6cce7780"/>
        <function-ref name="wait" scoped="" ref="0x7faf6cce7910"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6cce7aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6cce7c30"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6cce7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7faf6cce6060" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7faf6cce6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7faf6cce63e0"/>
        <function-ref name="rand32" scoped="" ref="0x7faf6cce6570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6cce6800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6cce6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7faf6cce6b80"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7faf6cce6d10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7faf6cce5020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7faf6cce51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6cce9a30" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6cce9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6cce9db0"/>
        <function-ref name="header" scoped="" ref="0x7faf6cce8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6cce9140" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6cce9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6cce94c0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6cce9650"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6cce97e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7faf6cce5480" loc="78:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7faf6cce5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6cce5800"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6cce5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7faf6e22c850" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7faf6e22c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7faf6e22cbd0"/>
        <function-ref name="rand32" scoped="" ref="0x7faf6e22cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7faf6e22a6a0" loc="45:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7faf6e22a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e22c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e231710" loc="44:/home/cxf/Desktop/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e231710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e231a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7faf6e226850" loc="48:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7faf6e226850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7faf6e226bd0"/>
        <function-ref name="rand32" scoped="" ref="0x7faf6e226d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7faf6e2276c0" loc="47:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7faf6e2276c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e226390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e22bdc0" loc="46:/home/cxf/Desktop/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e22bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e227180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e1e4630" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e1e4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e1e49b0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e1e4b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e1e4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e1e2020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e1e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e1e23a0"/>
        <function-ref name="header" scoped="" ref="0x7faf6e1e2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7faf6e1e2780" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6e1e2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6e1e2b00"/>
        <function-ref name="wait" scoped="" ref="0x7faf6e1e2c90"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e1e2e20"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6e1e1020"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6e1e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7faf6e1e05d0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7faf6e1e05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e1e0950"/>
        <function-ref name="get" scoped="" ref="0x7faf6e1e0ae0"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6e1e0c70"/>
        <function-ref name="set" scoped="" ref="0x7faf6e1e0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6e1e1440" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6e1e1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7faf6e1e17c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7faf6e1e1950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7faf6e1e1ae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7faf6e1e1c70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7faf6e1e1e00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7faf6e1e0020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7faf6e1e01b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7faf6e1e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6e1e5400" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e1e5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e1e5780"/>
        <function-ref name="header" scoped="" ref="0x7faf6e1e5910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6e20eac0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6e20eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e20ee40"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e1e5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e1e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faf6e1e5b60" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6e1e5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6e1e4020"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6e1e41b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6e1e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6e1c8d60" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6e1c8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e1c7180"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e1c7310"/>
        <function-ref name="start" scoped="" ref="0x7faf6e1c74a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e1c7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7faf6e1c37c0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7faf6e1c37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7faf6e1c3b40"/>
        <function-ref name="request" scoped="" ref="0x7faf6e1c3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6e1be020" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6e1be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e1be3a0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e1be530"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e1be6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6e1be950" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6e1be950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e1becd0"/>
        <function-ref name="header" scoped="" ref="0x7faf6e1bee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7faf6e1c6840" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7faf6e1c6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6e1c6bc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6e1c6d50"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e1c4020"/>
        <function-ref name="done" scoped="" ref="0x7faf6e1c41b0"/>
        <function-ref name="standby" scoped="" ref="0x7faf6e1c4340"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e1c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6e1c2020" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6e1c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e1c23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e1c2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e1c26c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e1c2850"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e1c29e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e1c2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7faf6e1bf020" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7faf6e1bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6e1bf4a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6e1bf630"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6e1bf7c0"/>
        <function-ref name="done" scoped="" ref="0x7faf6e1bf950"/>
        <function-ref name="standby" scoped="" ref="0x7faf6e1bfae0"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6e1bfc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7faf6e1c2e00" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7faf6e1c2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7faf6e1c11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6e1c3060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6e1c3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e1c33e0"/>
        <function-ref name="header" scoped="" ref="0x7faf6e1c3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7faf6e1c0950" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7faf6e1c0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e1c0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7faf6e1c14b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7faf6e1c14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6e1c1830"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6e1c19c0"/>
        <function-ref name="start" scoped="" ref="0x7faf6e1c1b50"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e1c1ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6e1bc8c0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6e1bc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6e1bcc40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6e1bcdd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6e1bb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6e1bb1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6e1bb340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6e1bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7faf6e1c6270" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7faf6e1c6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6e1c65f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6e1bb760" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6e1bb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7faf6e1bbae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7faf6e1c0020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7faf6e1c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e1c03a0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e1c0530"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e1c06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6e1c4720" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6e1c4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e1c4aa0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6e1c4c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e1c4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7faf6e1bc120" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7faf6e1bc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7faf6e1bc4a0"/>
        <function-ref name="request" scoped="" ref="0x7faf6e1bc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7faf6e1c7880" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7faf6e1c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6e1c7c00"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6e1c7d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6e1c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7faf6df98760" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7faf6df98760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df98ae0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df98c70"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df98e00"/>
        <function-ref name="set" scoped="" ref="0x7faf6df97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6df9c7e0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df9c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df9cb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df9ccf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df9ce80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df9b030"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df9b1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df9b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6df99800" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6df99800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df99b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df99d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df98020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df981b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df98340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7faf6dfa0bb0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6dfa0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6df9d170"/>
        <function-ref name="clear" scoped="" ref="0x7faf6df9d8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6df9ea00"/>
        <function-ref name="set" scoped="" ref="0x7faf6df9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7faf6df9b760" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df9b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6df993d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7faf6dfa3d00" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6dfa3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6dfa12e0"/>
        <function-ref name="clear" scoped="" ref="0x7faf6dfa1a10"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6dfa2b60"/>
        <function-ref name="set" scoped="" ref="0x7faf6dfa0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7faf6cc94310" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7faf6cc94310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cc94690"/>
        <function-ref name="get" scoped="" ref="0x7faf6cc94820"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6cc949b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cc94b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6cc953b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6cc953b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cc95730"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6cc958c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6cc95a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6cc95be0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6cc95d70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6cc94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6cc902b0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6cc902b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6cc90630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6cc907c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6cc90950"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6cc90ae0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6cc90c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6cc90e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7faf6cc99630" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7faf6cc99630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6cc98ce0"/>
        <function-ref name="clear" scoped="" ref="0x7faf6cc96460"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6cc985b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cc96b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7faf6cc93020" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6cc93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6cc93c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7faf6cc921e0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7faf6cc921e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6cc92e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7faf6cc9d6f0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7faf6cc9d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6cc9bce0"/>
        <function-ref name="clear" scoped="" ref="0x7faf6cc9a460"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6cc9b5b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cc9ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faf6e167a60" loc="20:/home/cxf/Desktop/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7faf6e167a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6e1646b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7faf6e15f320" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7faf6e15f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e15c870"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e15ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6e15dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6e15d780"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6e15b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6e15ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e15d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6e15e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6e15c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6e15e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e15e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faf6e15b7d0" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7faf6e15b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6e159440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e163540" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e163540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e1638c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7faf6e14f060" loc="29:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7faf6e14f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6e14fe70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6e14e820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6e14e360"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6e14ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e155020" loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e155020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e1553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7faf6e155a10" loc="28:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7faf6e155a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e1512a0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e1522a0"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6e152c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e152760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6e151760"/>
        <function-ref name="start" scoped="" ref="0x7faf6e153890"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e153da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faf6e04b890" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6e04b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e0480d0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e0490d0"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6e049a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e049590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6e048590"/>
        <function-ref name="start" scoped="" ref="0x7faf6e04a6e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e04abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6e04b080" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6e04b080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7faf6ed7a9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7faf6ed7a9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6e04b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6e048bc0" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6e048bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6e046a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6e0454e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6e045020"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6e0459a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7faf6cc62190" loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6cc62190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6cc62510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6cc626a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6cc62830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6cc629c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6cc62b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6cc62ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6cc62e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6cc61030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faf6cc6f830" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6cc6f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6cc6b090"/>
        <function-ref name="fired" scoped="" ref="0x7faf6cc6c090"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6cc6ca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6cc6c550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6cc6b550"/>
        <function-ref name="start" scoped="" ref="0x7faf6cc6e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cc6ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6cc6f020" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6cc6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6cc6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6cc6bb80" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6cc6bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6cc6a9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6cc69360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6cc6ae70"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6cc69820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7faf6cc5e780" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7faf6cc5e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7faf6cc5eb00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7faf6cc5ec90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7faf6cc5ee20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7faf6cc5c020"/>
        <function-ref name="countBusy" scoped="" ref="0x7faf6cc5c1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7faf6cc5c340"/>
        <function-ref name="getAssr" scoped="" ref="0x7faf6cc5c4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7faf6cc5c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7faf6cc613e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7faf6cc613e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6cc5fe60"/>
        <function-ref name="fired" scoped="" ref="0x7faf6cc60a60"/>
        <function-ref name="get" scoped="" ref="0x7faf6cc60090"/>
        <function-ref name="reset" scoped="" ref="0x7faf6cc5f020"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6cc5e350"/>
        <function-ref name="set" scoped="" ref="0x7faf6cc60550"/>
        <function-ref name="start" scoped="" ref="0x7faf6cc5f4e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cc5f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6cc69dd0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6cc69dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6cc64350"/>
        <function-ref name="test" scoped="" ref="0x7faf6cc659a0"/>
        <function-ref name="get" scoped="" ref="0x7faf6cc67ac0"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6cc64810"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6cc64d20"/>
        <function-ref name="reset" scoped="" ref="0x7faf6cc669f0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6cc66530"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6cc65e60"/>
        <function-ref name="set" scoped="" ref="0x7faf6cc66020"/>
        <function-ref name="start" scoped="" ref="0x7faf6cc65020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cc654e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7faf6e0be020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6e0be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6e0be3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6e0be530"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6e0be6c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6e0be850"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6e0be9e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6e0beb70"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6e0bed00"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6e0bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7faf6e0b9a40" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7faf6e0b9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7faf6e0b9dc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7faf6e0b8020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7faf6e0b81b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7faf6e0b8340"/>
        <function-ref name="countBusy" scoped="" ref="0x7faf6e0b84d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7faf6e0b8660"/>
        <function-ref name="getAssr" scoped="" ref="0x7faf6e0b87f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7faf6e0b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faf6e0bd520" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7faf6e0bd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6e0b9020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e0bcb80"/>
        <function-ref name="get" scoped="" ref="0x7faf6e0bc1b0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6e0ba090"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6e0b94e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e0bc670"/>
        <function-ref name="start" scoped="" ref="0x7faf6e0ba550"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e0baa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6e0c6c70" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6e0c6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6e0bf020"/>
        <function-ref name="test" scoped="" ref="0x7faf6e0c0610"/>
        <function-ref name="get" scoped="" ref="0x7faf6e0c38e0"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6e0bf4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6e0bf9f0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6e0c27a0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6e0c22e0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6e0c0ad0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e0c3da0"/>
        <function-ref name="start" scoped="" ref="0x7faf6e0c2c60"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e0c0150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7faf6e0af2b0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6e0af2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6e0af630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6e0af7c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6e0af950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6e0afae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6e0afc70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6e0afe00"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6e0ae020"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6e0ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7faf6e0aaa70" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7faf6e0aaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7faf6e0aadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7faf6e0a9230" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7faf6e0a9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7faf6e0a95b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7faf6e0a9740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7faf6e0a98d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7faf6e0a9a60"/>
        <function-ref name="countBusy" scoped="" ref="0x7faf6e0a9bf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7faf6e0a9d80"/>
        <function-ref name="getAssr" scoped="" ref="0x7faf6e0a8020"/>
        <function-ref name="setAssr" scoped="" ref="0x7faf6e0a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faf6e0ae6b0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7faf6e0ae6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6e0aa110"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e0acda0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e0ac3d0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6e0ab2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6e0aa5d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6e0ac890"/>
        <function-ref name="start" scoped="" ref="0x7faf6e0ab760"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e0abc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6e0b4020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6e0b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6e0b0350"/>
        <function-ref name="test" scoped="" ref="0x7faf6e0b19a0"/>
        <function-ref name="get" scoped="" ref="0x7faf6e0b4c50"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6e0b0810"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6e0b0d20"/>
        <function-ref name="reset" scoped="" ref="0x7faf6e0b2b20"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6e0b2660"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6e0b1e60"/>
        <function-ref name="set" scoped="" ref="0x7faf6e0b2150"/>
        <function-ref name="start" scoped="" ref="0x7faf6e0b1020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e0b14e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7faf6e012490" loc="74:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7faf6e012490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6e012810"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6e0129a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7faf6e0161d0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6e0161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e014b30"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e0159f0"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6e0144e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e014020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6e012020"/>
        <function-ref name="start" scoped="" ref="0x7faf6e015020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e015530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6e01ccf0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6e01ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6e017220"/>
        <function-ref name="fired" scoped="" ref="0x7faf6e01a7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6e019590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6e019110"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6e017b20"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6e0176a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6e01ac40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6e01b940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6e019ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6e01be10"/>
        <function-ref name="stop" scoped="" ref="0x7faf6e01a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7faf6dfc2a00" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7faf6dfc2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6dfc2d80"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6dfc1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7faf6dfc7640" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7faf6dfc7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6dfc4c40"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dfc51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6dfc4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6dfc5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6dfc2590"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6dfc2110"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6dfc5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6dfc6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6dfc4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6dfc6860"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dfc6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6dfcd150" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6dfcd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6dfc9700"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dfccc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6dfcba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6dfcb5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6dfc7090"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6dfc9ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6dfcb110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6dfcdd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6dfc90d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6dfcc2a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dfcc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faf6dfbf790" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7faf6dfbf790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dfbe3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faf6dfbea60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6dfbea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dfb4890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6dfb3260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6dfb4d50"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dfb3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7faf6dfab320" loc="49:/home/cxf/Desktop/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7faf6dfab320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6dfa7870"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dfaae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6dfa9c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6dfa9780"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6dfa61e0"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6dfa7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6dfa9300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6dfaa020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6dfa7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6dfaa4f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dfaa9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6df92590" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df92590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df92910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df92aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df92c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df92dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df72020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6df724a0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6df724a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df72820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df729b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df72b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df72cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df72e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7faf6df939b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7faf6df939b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df93d50"/>
        <function-ref name="get" scoped="" ref="0x7faf6df92020"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df921b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df92340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6df6f2b0" loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6df6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6df6f630"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6df6f7c0"/>
        <function-ref name="start" scoped="" ref="0x7faf6df6f950"/>
        <function-ref name="stop" scoped="" ref="0x7faf6df6fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7faf6df6bb60" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df6bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7faf6df6a020"/>
        <function-ref name="request" scoped="" ref="0x7faf6df6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6df65440" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6df65440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6df657c0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6df65950"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6df65ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6df65d70" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6df65d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6df64180"/>
        <function-ref name="header" scoped="" ref="0x7faf6df64310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7faf6df6dc20" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7faf6df6dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6df6c020"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6df6c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6df6c340"/>
        <function-ref name="done" scoped="" ref="0x7faf6df6c4d0"/>
        <function-ref name="standby" scoped="" ref="0x7faf6df6c660"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6df6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6df6a400" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df6a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df6a780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df6a910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df6aaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df6ac30"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df6adc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7faf6df67410" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7faf6df67410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6df67890"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6df67a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6df67bb0"/>
        <function-ref name="done" scoped="" ref="0x7faf6df67d40"/>
        <function-ref name="standby" scoped="" ref="0x7faf6df65020"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6df651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7faf6df692b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7faf6df692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7faf6df69630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6df6b400" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df6b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6df6b780"/>
        <function-ref name="header" scoped="" ref="0x7faf6df6b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7faf6df68d70" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7faf6df68d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6df67180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7faf6df69920" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7faf6df69920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6df69ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6df69e30"/>
        <function-ref name="start" scoped="" ref="0x7faf6df68020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6df681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6df64d40" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6df64d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df630e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df63270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df63400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df63590"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df63720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df638b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7faf6df6d650" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7faf6df6d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6df6d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6df63b40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6df63b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7faf6df62020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7faf6df68440" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7faf6df68440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6df687c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6df68950"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6df68ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6df6ca40" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6df6ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6df6cdc0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6df6b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6df6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7faf6df645a0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7faf6df645a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7faf6df64920"/>
        <function-ref name="request" scoped="" ref="0x7faf6df64ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7faf6df6fd30" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7faf6df6fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6df6d0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6df6d270"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6df6d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7faf6df5a5c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df5a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7faf6df5a940"/>
        <function-ref name="request" scoped="" ref="0x7faf6df5aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7faf6df553b0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6df553b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df54ac0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df54570"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df54020"/>
        <function-ref name="set" scoped="" ref="0x7faf6df52090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7faf6df40ca0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7faf6df40ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df3f0a0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df3f230"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df3f3c0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df3f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7faf6df442e0" loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6df442e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6df43840"/>
        <function-ref name="clear" scoped="" ref="0x7faf6df41020"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6df43110"/>
        <function-ref name="set" scoped="" ref="0x7faf6df41750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7faf6df5e610" loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7faf6df5e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6df5e990"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6df5eb20"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6df5ecb0"/>
        <function-ref name="done" scoped="" ref="0x7faf6df5ee40"/>
        <function-ref name="standby" scoped="" ref="0x7faf6df5b020"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6df5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7faf6df3e470" loc="66:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6df3e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6df3e7f0"/>
        <function-ref name="wait" scoped="" ref="0x7faf6df3e980"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6df3eb10"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6df3eca0"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6df3ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7faf6df59e80" loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6df59e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df575e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df57090"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df58ad0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df57b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6df5ad90" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df5ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df59180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df59310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df594a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df59630"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df597c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df59950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6df451f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6df451f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df45670"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df45800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df45990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7faf6df45b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7faf6df45cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6df5bdd0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df5bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6df5a180"/>
        <function-ref name="header" scoped="" ref="0x7faf6df5a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faf6df4add0" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6df4add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7faf6e897d90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6df466e0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6df486b0"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6df46090"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6df48b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6df46ba0"/>
        <function-ref name="start" scoped="" ref="0x7faf6df49ca0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6df481f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7faf6df52940" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7faf6df52940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df4f090"/>
        <function-ref name="get" scoped="" ref="0x7faf6df51af0"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df515a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df4f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7faf6df4ba40" loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6df4ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6df4a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6df5b460" loc="43:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6df5b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6df5b7e0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6df5b970"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6df5bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7faf6df4fe70" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6df4fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df4d5e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df4d090"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df4ead0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df4db30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7faf6df3f8d0" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7faf6df3f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df3fc50"/>
        <function-ref name="get" scoped="" ref="0x7faf6df3fde0"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df3e020"/>
        <function-ref name="set" scoped="" ref="0x7faf6df3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7faf6df40110" loc="63:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7faf6df40110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df40490"/>
        <function-ref name="get" scoped="" ref="0x7faf6df40620"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df407b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df40940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7faf6df4b1e0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6df4b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7faf6df4b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7faf6df332d0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7faf6df332d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7faf6df33650"/>
        <function-ref name="request" scoped="" ref="0x7faf6df337e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7faf6df13d20" loc="74:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7faf6df13d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7faf6df19b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7faf6df2e0d0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7faf6df2e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df2d7f0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df2d2a0"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df2ed00"/>
        <function-ref name="set" scoped="" ref="0x7faf6df2dd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7faf6df11ca0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7faf6df11ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df100a0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df10230"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df103c0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df10550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7faf6df36b60" loc="47:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7faf6df36b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6df35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7faf6df0f780" loc="83:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7faf6df0f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7faf6df0c020"/>
        <function-ref name="clear" scoped="" ref="0x7faf6df0c750"/>
        <function-ref name="isValid" scoped="" ref="0x7faf6df0d7c0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df0ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7faf6df20980" loc="70:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7faf6df20980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6df20d00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6df1b020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6df1b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6df1b340"/>
        <function-ref name="get" scoped="" ref="0x7faf6df1b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6df1b660"/>
        <function-ref name="set" scoped="" ref="0x7faf6df1b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6df1b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7faf6df0a2e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7faf6df0a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6df0a660"/>
        <function-ref name="wait" scoped="" ref="0x7faf6df0a7f0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6df0a980"/>
        <function-ref name="isFree" scoped="" ref="0x7faf6df0ab10"/>
        <function-ref name="getNow" scoped="" ref="0x7faf6df0aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7faf6df352e0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7faf6df352e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7faf6df35660"/>
        <function-ref name="turnOn" scoped="" ref="0x7faf6df357f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7faf6df35980"/>
        <function-ref name="done" scoped="" ref="0x7faf6df35b10"/>
        <function-ref name="standby" scoped="" ref="0x7faf6df35ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7faf6df35e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7faf6df151a0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7faf6df151a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6df15dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7faf6df32b90" loc="55:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7faf6df32b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df2f2e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df31d40"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df317f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df2f830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7faf6df33aa0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7faf6df33aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df33e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6df32020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df321b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6df32340"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df324d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df32660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7faf6df21670" loc="69:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7faf6df21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6df219f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6df21b80"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6df21d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6df20020"/>
        <function-ref name="get" scoped="" ref="0x7faf6df201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6df20340"/>
        <function-ref name="set" scoped="" ref="0x7faf6df204d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6df20660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7faf6df12340" loc="77:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7faf6df12340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6df126c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7faf6df12850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7faf6df129e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7faf6df12b70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7faf6df12d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7faf6df34a90" loc="51:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7faf6df34a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6df34e10"/>
        <function-ref name="header" scoped="" ref="0x7faf6df33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7faf6de7a8b0" loc="847:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7faf6de7a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6de7ac30"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6de7adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7faf6df2b630" loc="57:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7faf6df2b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df2ae70"/>
        <function-ref name="get" scoped="" ref="0x7faf6df2a920"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df2a3d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df283f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7faf6df36020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7faf6df36020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7faf6ed7ad40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6df363a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7faf6df23b50" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7faf6df23b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6df22020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6df221b0"/>
        <function-ref name="request" scoped="" ref="0x7faf6df22340"/>
        <function-ref name="granted" scoped="" ref="0x7faf6df224d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6df22660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7faf6df24760" loc="64:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7faf6df24760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6df24be0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6df24d70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6df23020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6df231b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df23340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6df234d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df23660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6df237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7faf6df28c80" loc="58:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7faf6df28c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df253c0"/>
        <function-ref name="get" scoped="" ref="0x7faf6df27e30"/>
        <function-ref name="isSet" scoped="" ref="0x7faf6df278e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df25910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7faf6df34120" loc="50:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7faf6df34120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6df344a0"/>
        <function-ref name="ready" scoped="" ref="0x7faf6df34630"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6df347c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7faf6df16550" loc="72:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7faf6df16550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7faf6df168d0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6df16a60"/>
        <function-ref name="captured" scoped="" ref="0x7faf6df16bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7faf6df16d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7faf6df1caa0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6df1caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7faf6df1ce20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7faf6df21020"/>
        <function-ref name="splitRead" scoped="" ref="0x7faf6df211b0"/>
        <function-ref name="write" scoped="" ref="0x7faf6df21340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7faf6df108d0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7faf6df108d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df10c50"/>
        <function-ref name="get" scoped="" ref="0x7faf6df10de0"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df0f020"/>
        <function-ref name="set" scoped="" ref="0x7faf6df0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7faf6df11110" loc="79:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7faf6df11110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6df11490"/>
        <function-ref name="get" scoped="" ref="0x7faf6df11620"/>
        <function-ref name="setValue" scoped="" ref="0x7faf6df117b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6df11940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7faf6df24020" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7faf6df24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7faf6df243a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7faf6df0b6b0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7faf6df0b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7faf6df0ba30"/>
        <function-ref name="suspend" scoped="" ref="0x7faf6df0bbc0"/>
        <function-ref name="resume" scoped="" ref="0x7faf6df0bd50"/>
        <function-ref name="run" scoped="" ref="0x7faf6df0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7faf6de35b10" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7faf6de35b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6de34020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6de341b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6de34340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6de344d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6de34660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6de347f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6de34980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6de34b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7faf6de36880" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7faf6de36880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6de36c00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6de36d90"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6de35020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6de351b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6de35340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6de354d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6de35660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6de357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faf6de33c80" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6de33c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6de2f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6de304e0"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6de30e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6de309a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6de2f9a0"/>
        <function-ref name="start" scoped="" ref="0x7faf6de31ac0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6de30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7faf6de37060" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7faf6de37060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6de373e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6de37570"/>
        <function-ref name="request" scoped="" ref="0x7faf6de37700"/>
        <function-ref name="granted" scoped="" ref="0x7faf6de37890"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6de37a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7faf6de3be10" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7faf6de3be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6de381c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6de38350"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6de384e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6de38670"/>
        <function-ref name="get" scoped="" ref="0x7faf6de38800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6de38990"/>
        <function-ref name="set" scoped="" ref="0x7faf6de38b20"/>
        <function-ref name="clr" scoped="" ref="0x7faf6de38cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7faf6de34e30" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7faf6de34e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7faf6de331e0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6de33370"/>
        <function-ref name="captured" scoped="" ref="0x7faf6de33500"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7faf6de33690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7faf6de37ce0" loc="43:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6de37ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7faf6de360a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7faf6de36230"/>
        <function-ref name="splitRead" scoped="" ref="0x7faf6de363c0"/>
        <function-ref name="write" scoped="" ref="0x7faf6de36550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7faf6de2d060" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7faf6de2d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7faf6e897960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6de2dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7faf6de1d3d0" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7faf6de1d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6de1d750"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6de1d8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6de1da70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6de1dc00"/>
        <function-ref name="get" scoped="" ref="0x7faf6de1dd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6de1c020"/>
        <function-ref name="set" scoped="" ref="0x7faf6de1c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6de1c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7faf6de207f0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7faf6de207f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7faf6de1ee60"/>
        <function-ref name="test" scoped="" ref="0x7faf6de1e4e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6de274c0"/>
        <function-ref name="captured" scoped="" ref="0x7faf6de26020"/>
        <function-ref name="reset" scoped="" ref="0x7faf6de26530"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6de1e9a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6de27980"/>
        <function-ref name="start" scoped="" ref="0x7faf6de269f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6de1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7faf6de1c680" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7faf6de1c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6de1ca00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6de1cb90"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6de1cd20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6de1b020"/>
        <function-ref name="get" scoped="" ref="0x7faf6de1b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6de1b340"/>
        <function-ref name="set" scoped="" ref="0x7faf6de1b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6de1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7faf6de29680" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7faf6de29680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6de29a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7faf6de2ca10" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7faf6de2ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7faf6de2cd90"/>
        <function-ref name="disable" scoped="" ref="0x7faf6de29020"/>
        <function-ref name="captured" scoped="" ref="0x7faf6de291b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7faf6de29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7faf6de01ae0" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7faf6de01ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6de01e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6de0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7faf6de09840" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7faf6de09840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7faf6de09bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6de0c1f0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6de0c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6de0c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7faf6de0b020" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6de0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7faf6de0b3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7faf6de0b530"/>
        <function-ref name="splitRead" scoped="" ref="0x7faf6de0b6c0"/>
        <function-ref name="write" scoped="" ref="0x7faf6de0b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6de0a850" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6de0a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6de0abd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6de0ad60"/>
        <function-ref name="request" scoped="" ref="0x7faf6de02020"/>
        <function-ref name="granted" scoped="" ref="0x7faf6de021b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6de02340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7faf6ddbb190" loc="296:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7faf6ddbb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6ddbb510"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6ddbb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7faf6ddfc020" loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7faf6ddfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6ddfc3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6ddfc530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7faf6ddde430" loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7faf6ddde430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6ddde7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6ddde940"/>
        <function-ref name="request" scoped="" ref="0x7faf6dddead0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6dddec60"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6dddedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7faf6ddfee00" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7faf6ddfee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7faf6ddfd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6ddfe7e0" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6ddfe7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6ddfeb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7faf6ddfa020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7faf6ddfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7faf6ddfa3a0"/>
        <function-ref name="sleep" scoped="" ref="0x7faf6dddf980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7faf6ddfa6c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7faf6dddfb10"/>
        <function-ref name="initMaster" scoped="" ref="0x7faf6ddfa9e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7faf6ddfab70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7faf6ddfad00"/>
        <function-ref name="read" scoped="" ref="0x7faf6ddf9020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7faf6ddf91b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7faf6ddf9340"/>
        <function-ref name="setClock" scoped="" ref="0x7faf6ddf94d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faf6ddf9660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7faf6ddf97f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7faf6ddf9a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7faf6ddf9c10"/>
        <function-ref name="write" scoped="" ref="0x7faf6ddf9da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faf6dddf020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7faf6dddf1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7faf6dddf340"/>
        <function-ref name="getClock" scoped="" ref="0x7faf6dddf4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7faf6dddf660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7faf6ddfa530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7faf6ddfa850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7faf6dddf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7faf6ddfd480" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7faf6ddfd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7faf6ddfd800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7faf6ddfd990"/>
        <function-ref name="splitRead" scoped="" ref="0x7faf6ddfdb20"/>
        <function-ref name="write" scoped="" ref="0x7faf6ddfdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6ddfcd20" loc="95:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6ddfcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6ddfb0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6ddfb270"/>
        <function-ref name="request" scoped="" ref="0x7faf6ddfb400"/>
        <function-ref name="granted" scoped="" ref="0x7faf6ddfb590"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6ddfb720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faf6dddc130" loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6dddc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6dddc4b0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6dddc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7faf6dddc920" loc="101:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7faf6dddc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7faf6dddcca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7faf6dd8e3e0" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7faf6dd8e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7faf6dd8e760"/>
        <function-ref name="sleep" scoped="" ref="0x7faf6dd8cca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7faf6dd8ea80"/>
        <function-ref name="dataReady" scoped="" ref="0x7faf6dd8ce30"/>
        <function-ref name="initMaster" scoped="" ref="0x7faf6dd8eda0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7faf6dd8d020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7faf6dd8d1b0"/>
        <function-ref name="read" scoped="" ref="0x7faf6dd8d340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7faf6dd8d4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7faf6dd8d660"/>
        <function-ref name="setClock" scoped="" ref="0x7faf6dd8d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faf6dd8d980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7faf6dd8db10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7faf6dd8dda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7faf6dd8c020"/>
        <function-ref name="write" scoped="" ref="0x7faf6dd8c1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faf6dd8c340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7faf6dd8c4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7faf6dd8c660"/>
        <function-ref name="getClock" scoped="" ref="0x7faf6dd8c7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7faf6dd8c980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7faf6dd8e8f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7faf6dd8ec10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7faf6dd8cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7faf6dd80b10" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7faf6dd80b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6dd7f020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6dd7f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6dd7f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6dd7f4d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd7f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6dd7f7f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd7f980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6dd7fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7faf6dd83650" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7faf6dd83650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6dd839d0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6dd83b60"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6dd83cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6dd83e80"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd81030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6dd811c0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd81350"/>
        <function-ref name="clr" scoped="" ref="0x7faf6dd814e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7faf6dd84390" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7faf6dd84390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6dd84710"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6dd848a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6dd84a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6dd84bc0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd84d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6dd83020"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd831b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6dd83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7faf6dd82ac0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faf6dd82ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6dd82e40"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dd84020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7faf6dd7fe50" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7faf6dd7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7faf6dd7e210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7faf6dd88350" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7faf6dd88350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7faf6dd886d0"/>
        <function-ref name="sleep" scoped="" ref="0x7faf6dd86ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7faf6dd889f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7faf6dd86e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7faf6dd88d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7faf6dd87020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7faf6dd871b0"/>
        <function-ref name="read" scoped="" ref="0x7faf6dd87340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7faf6dd874d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7faf6dd87660"/>
        <function-ref name="setClock" scoped="" ref="0x7faf6dd877f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faf6dd87980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7faf6dd87b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7faf6dd87da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7faf6dd86020"/>
        <function-ref name="write" scoped="" ref="0x7faf6dd861b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7faf6dd86340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7faf6dd864d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7faf6dd86660"/>
        <function-ref name="getClock" scoped="" ref="0x7faf6dd867f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7faf6dd86980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7faf6dd88860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7faf6dd88b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7faf6dd86b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7faf6dd81800" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7faf6dd81800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6dd81b80"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6dd81d10"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6dd80020"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6dd801b0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd80340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6dd804d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd80660"/>
        <function-ref name="clr" scoped="" ref="0x7faf6dd807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6dd33020" loc="86:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6dd33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6dd333c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6dd33550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6dd320d0" loc="89:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6dd320d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6dd32470"/>
        <function-ref name="configure" scoped="" ref="0x7faf6dd32600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6dd34210" loc="85:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6dd34210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6dd345b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6dd34740"/>
        <function-ref name="request" scoped="" ref="0x7faf6dd348d0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6dd34a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6dd34bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6dd337a0" loc="87:/home/cxf/Desktop/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6dd337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6dd33b20"/>
        <function-ref name="userId" scoped="" ref="0x7faf6dd33cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6cbd0420" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6cbd0420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6cbd07a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faf6cbd0a30" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6cbd0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6cbd0db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6cbce020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6cbce1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6cbce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6cbcc850" loc="52:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6cbcc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6cbccbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6cbccd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6cbcb910" loc="56:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6cbcb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6cbcbcb0"/>
        <function-ref name="configure" scoped="" ref="0x7faf6cbcbe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faf6cbca120" loc="57:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7faf6cbca120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6cbca4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6cbca630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6cbca7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6cbca950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6cbcd9d0" loc="51:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6cbcd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6cbcdd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6cbcc020"/>
        <function-ref name="request" scoped="" ref="0x7faf6cbcc1b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6cbcc340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6cbcc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6cbcb020" loc="53:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6cbcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6cbcb3a0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6cbcb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faf6cbcac20" loc="69:/home/cxf/Desktop/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7faf6cbcac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6cbc9020"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6cbc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7faf6dd19d80" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6dd19d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7faf6dd21180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6dd21310"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6dd214a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6dd21630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6dd217c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6dd21950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6dd21ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6dd21c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7faf6dd21e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6dd20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faf6dd20530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7faf6dd20530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7faf6dd159a0"/>
        <function-ref name="test" scoped="" ref="0x7faf6dd15020"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd181b0"/>
        <function-ref name="captured" scoped="" ref="0x7faf6dd18b80"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dd160d0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dd154e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd18670"/>
        <function-ref name="start" scoped="" ref="0x7faf6dd16590"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dd16a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faf6dd14650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7faf6dd14650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6dd10110"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dd13da0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd133d0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dd112a0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dd105d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd13890"/>
        <function-ref name="start" scoped="" ref="0x7faf6dd11760"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dd11c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6dd2ab20" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6dd2ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6dd24e60"/>
        <function-ref name="test" scoped="" ref="0x7faf6dd244e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd27790"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6dd23350"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6dd23860"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dd25670"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dd251b0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dd249a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd27c50"/>
        <function-ref name="start" scoped="" ref="0x7faf6dd25b30"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dd24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7faf6dd06020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6dd06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7faf6dd063a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6dd06530"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6dd066c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6dd06850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6dd069e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6dd06b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6dd06d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6dd05020"/>
        <function-ref name="setControlC" scoped="" ref="0x7faf6dd051b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6dd05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7faf6dd005a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7faf6dd005a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6dcfc020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dcffc10"/>
        <function-ref name="get" scoped="" ref="0x7faf6dcff240"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dcfe110"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dcfc4e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dcff700"/>
        <function-ref name="start" scoped="" ref="0x7faf6dcfe5d0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dcfea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faf6dd05850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7faf6dd05850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7faf6dd02e60"/>
        <function-ref name="test" scoped="" ref="0x7faf6dd024e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd044c0"/>
        <function-ref name="captured" scoped="" ref="0x7faf6dd03020"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dd03530"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dd029a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd04980"/>
        <function-ref name="start" scoped="" ref="0x7faf6dd039f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dd02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7faf6dcfcba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7faf6dcfcba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6dcf9550"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dcfa1f0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dcfb7f0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dcfa6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dcf9a10"/>
        <function-ref name="set" scoped="" ref="0x7faf6dcfbcb0"/>
        <function-ref name="start" scoped="" ref="0x7faf6dcfab70"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dcf9090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7faf6dcf7120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7faf6dcf7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6dcf5a90"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dcf6770"/>
        <function-ref name="get" scoped="" ref="0x7faf6dcf7d50"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dcf6c30"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dcf4020"/>
        <function-ref name="set" scoped="" ref="0x7faf6dcf6260"/>
        <function-ref name="start" scoped="" ref="0x7faf6dcf5110"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dcf55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6dd0eb90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6dd0eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6dd08020"/>
        <function-ref name="test" scoped="" ref="0x7faf6dd09550"/>
        <function-ref name="get" scoped="" ref="0x7faf6dd0b7f0"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6dd084e0"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6dd089f0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dd0a6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dd0a1f0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dd09a10"/>
        <function-ref name="set" scoped="" ref="0x7faf6dd0bcb0"/>
        <function-ref name="start" scoped="" ref="0x7faf6dd0ab70"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dd09090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faf6dc266e0" loc="30:/home/cxf/Desktop/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6dc266e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TOne" ref="0x7faf6eca4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6dc22020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6dc24020"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6dc249a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6dc244e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6dc224e0"/>
        <function-ref name="start" scoped="" ref="0x7faf6dc255b0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dc25ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6dc70b50" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6dc70b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7faf6ed7a9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7faf6ed7a9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6dc63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6dc63410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6dc63410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6dc5f810"/>
        <function-ref name="test" scoped="" ref="0x7faf6dc61e60"/>
        <function-ref name="get" scoped="" ref="0x7faf6dc62090"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6dc5fcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6dc5e260"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dc61020"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dc62a60"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dc5f350"/>
        <function-ref name="set" scoped="" ref="0x7faf6dc62550"/>
        <function-ref name="start" scoped="" ref="0x7faf6dc614e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dc619a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7faf6cb9e610" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7faf6cb9e610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7faf6ed7a640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7faf6ed7a640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TOne" ref="0x7faf6eca4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6cb9b020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6cb9c020"/>
        <function-ref name="startAt" scoped="" ref="0x7faf6cb9c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6cb9c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7faf6cb9b4e0"/>
        <function-ref name="start" scoped="" ref="0x7faf6cb9d5b0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cb9dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7faf6cb85db0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7faf6cb85db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6cb819a0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6cb83530"/>
        <function-ref name="get" scoped="" ref="0x7faf6cb84a10"/>
        <function-ref name="reset" scoped="" ref="0x7faf6cb839f0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6cb81e60"/>
        <function-ref name="set" scoped="" ref="0x7faf6cb83020"/>
        <function-ref name="start" scoped="" ref="0x7faf6cb81020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cb814e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7faf6cb9ba30" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7faf6cb9ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6cb86e60"/>
        <function-ref name="test" scoped="" ref="0x7faf6cb864e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6cb9a6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6cb85350"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6cb85860"/>
        <function-ref name="reset" scoped="" ref="0x7faf6cb99590"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6cb990d0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6cb869a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6cb9ab70"/>
        <function-ref name="start" scoped="" ref="0x7faf6cb99a50"/>
        <function-ref name="stop" scoped="" ref="0x7faf6cb86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faf6dc1e3a0" loc="39:/home/cxf/Desktop/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7faf6dc1e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dc1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6dc1a200" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6dc1a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TOne" ref="0x7faf6eca4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dc19090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6dc19a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6dc19550"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dc17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6dc03020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6dc03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TOne" ref="0x7faf6eca4410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dc03e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6dc02800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6dc02340"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dc02cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6dc01280" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6dc01280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6dbfd810"/>
        <function-ref name="test" scoped="" ref="0x7faf6dbfee60"/>
        <function-ref name="get" scoped="" ref="0x7faf6dc00020"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6dbfdcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6dbfc260"/>
        <function-ref name="reset" scoped="" ref="0x7faf6dbfe020"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dc009f0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6dbfd350"/>
        <function-ref name="set" scoped="" ref="0x7faf6dc004e0"/>
        <function-ref name="start" scoped="" ref="0x7faf6dbfe4e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dbfe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7faf6dbda0f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7faf6dbda0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dbd9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6dbd99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6dbd94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dbd9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6dbdecf0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6dbdecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dbddb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6dbdc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6dbdc090"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dbdca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7faf6dbd7b60" loc="48:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7faf6dbd7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dbd67d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faf6dbd6e40" loc="49:/home/cxf/Desktop/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6dbd6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6dbd4ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6dbd3670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6dbd31b0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6dbd3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7faf6dbcc9a0" loc="36:/home/cxf/Desktop/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7faf6dbcc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7faf6dbc97e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6db6f710" loc="46:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6db6f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6db6fa90"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6db6fc20"/>
        <function-ref name="start" scoped="" ref="0x7faf6db6fdb0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6db6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6db6c7f0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6db6c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6db6cb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6db6cd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6db6a020"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6db6a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6db6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6db692b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6db692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6db69630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6db697c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6db69950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6db69ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6db69c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6db6ab20" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6db6ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6db69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6db66300" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6db66300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6db66680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6db66810"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6db669a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6db66b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6db66cc0"/>
        <function-ref name="get" scoped="" ref="0x7faf6db66e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6db65020"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6db65660"/>
        <function-ref name="set" scoped="" ref="0x7faf6db651b0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6db65340"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6db654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faf6db67800" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6db67800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6db67b80"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6db67d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6db66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6db68020" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6db68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6db683a0"/>
        <function-ref name="source" scoped="" ref="0x7faf6db68530"/>
        <function-ref name="address" scoped="" ref="0x7faf6db686c0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6db68850"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6db689e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6db68b70"/>
        <function-ref name="type" scoped="" ref="0x7faf6db68d00"/>
        <function-ref name="setType" scoped="" ref="0x7faf6db67020"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6db671b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6db67340"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6db674d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7faf6db03d90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7faf6db03d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6db01180"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6db01310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6db014a0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6db01630"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6db017c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7faf6db01a50" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7faf6db01a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6db01dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7faf6db63b40" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7faf6db63b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6db06020"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6db061b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6db06340"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6db064d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6db06660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7faf6db04720" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7faf6db04720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6db04aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7faf6db04c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6db04dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6db03020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7faf6db031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6db069e0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6db069e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6db06d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7faf6db03400" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7faf6db03400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7faf6db03780"/>
        <function-ref name="noAck" scoped="" ref="0x7faf6db03910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7faf6db03aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7faf6db05020" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7faf6db05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7faf6db053a0"/>
        <function-ref name="source" scoped="" ref="0x7faf6db05530"/>
        <function-ref name="address" scoped="" ref="0x7faf6db056c0"/>
        <function-ref name="destination" scoped="" ref="0x7faf6db05850"/>
        <function-ref name="setSource" scoped="" ref="0x7faf6db059e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7faf6db05b70"/>
        <function-ref name="type" scoped="" ref="0x7faf6db05d00"/>
        <function-ref name="setType" scoped="" ref="0x7faf6db04020"/>
        <function-ref name="isForMe" scoped="" ref="0x7faf6db041b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7faf6db04340"/>
        <function-ref name="localGroup" scoped="" ref="0x7faf6db044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6dafc4e0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6dafc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6dafc860"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6dafc9f0"/>
        <function-ref name="start" scoped="" ref="0x7faf6dafcb80"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dafcd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6dafa020" loc="52:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6dafa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faf6ea83020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6dafa3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6dafa530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6dafa6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6dafa850"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6dafa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6daffe60" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6daffe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6dafc210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6dafb4c0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6dafb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faf6ea83020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6dafb840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6daf9940" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6daf9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6daf9cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6daf9e50"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6daf8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6daf81b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6daf8340"/>
        <function-ref name="get" scoped="" ref="0x7faf6daf84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6daf8660"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6daf8ca0"/>
        <function-ref name="set" scoped="" ref="0x7faf6daf87f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6daf8980"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6daf8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7faf6daf9020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7faf6daf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faf6ea83020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7faf6daf93a0"/>
        <function-ref name="offset" scoped="" ref="0x7faf6daf9530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7faf6daf96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6dad4b70" loc="66:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6dad4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6dad3020"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6dad31b0"/>
        <function-ref name="start" scoped="" ref="0x7faf6dad3340"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dad34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7faf6da6de40" loc="332:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7faf6da6de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6da6c1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6da6c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7faf6dabe530" loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7faf6dabe530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6dabe8b0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6dabea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7faf6daa4d50" loc="191:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7faf6daa4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6daa3100"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6daa3290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6dad4520" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6dad4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6dad48a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7faf6dabc130" loc="75:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7faf6dabc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7faf6dabc4b0"/>
        <function-ref name="flush" scoped="" ref="0x7faf6dabc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7faf6da6f400" loc="322:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7faf6da6f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6da6f780"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6da6f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7faf6dac3410" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7faf6dac3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7faf6dac3790"/>
        <function-ref name="resetSend" scoped="" ref="0x7faf6dac3920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7faf6dac3ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7faf6dac3c40"/>
        <function-ref name="putData" scoped="" ref="0x7faf6dac3dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7faf6dacc020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7faf6dacc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6dacc430" loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6dacc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6dacc7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6dacc940"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6daccad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6daccc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6daccdf0"/>
        <function-ref name="get" scoped="" ref="0x7faf6dac9020"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6dac91b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6dac97f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6dac9340"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6dac94d0"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6dac9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7faf6da680c0" loc="341:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7faf6da680c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6da68440"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6da685d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7faf6dacda40" loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7faf6dacda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7faf6dacddc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7faf6dad2020"/>
        <function-ref name="startSend" scoped="" ref="0x7faf6dad21b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7faf6dad2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7faf6dad1080" loc="68:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faf6dad1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7faf6dad1400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7faf6dad1590"/>
        <function-ref name="endPacket" scoped="" ref="0x7faf6dad1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7faf6d99d020" loc="275:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7faf6d99d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d99d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d99d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7faf6d9a3de0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7faf6d9a3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faf6ea83020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d9a11c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7faf6d9a1350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7faf6d9a14e0"/>
        <function-ref name="cancel" scoped="" ref="0x7faf6d9a1670"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6d9a1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7faf6d99d800" loc="158:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7faf6d99d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d99db80"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d99dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7faf6d9a36c0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7faf6d9a36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faf6ea83020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7faf6d9a3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7faf6d9a1c20" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7faf6d9a1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7faf6ea83020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7faf6d9a0020"/>
        <function-ref name="offset" scoped="" ref="0x7faf6d9a01b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7faf6d9a0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6d99f920" loc="57:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6d99f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d99fca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d99fe30"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d99e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d99e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d99e340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d99e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d99e660"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d99eca0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d99e980"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d99e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d99eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7faf6d9a0e80" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7faf6d9a0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7faf6d99f220"/>
        <function-ref name="nextByte" scoped="" ref="0x7faf6d99f3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7faf6d99f540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7faf6d99f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7faf6d9a0590" loc="55:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7faf6d9a0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7faf6d9a0910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7faf6d9a0aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7faf6d9a0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7faf6d98dd20" loc="50:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7faf6d98dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d9960e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faf6d996270"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d996400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faf6d996590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faf6d996720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faf6d9968b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6d996a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7faf6d99be10" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7faf6d99be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7faf6d9981c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7faf6d998350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7faf6d9984e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7faf6d998670"/>
        <function-ref name="putData" scoped="" ref="0x7faf6d998800"/>
        <function-ref name="putDone" scoped="" ref="0x7faf6d998990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7faf6d998b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6d996cc0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6d996cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d9950a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d995230"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d9953c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d995550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d9956e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d995870"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d995a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d98b1b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d995b90"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d995d20"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d98b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faf6d96bd50" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7faf6d96bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d96e100"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d96e290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faf6d970960" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7faf6d970960"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d970ce0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faf6d970e70"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d96f030"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faf6d96f1c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faf6d96f350"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faf6d96f4e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6d96f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7faf6d970150" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7faf6d970150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d9704d0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d970660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faf6d969820" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7faf6d969820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d969ba0"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d969d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faf6d968080" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7faf6d968080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d968400"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faf6d968590"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d968720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faf6d9688b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faf6d968a40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faf6d968bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6d968d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faf6d967360" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6d967360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d9651b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d965b30"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d965670"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d964020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7faf6d969020" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7faf6d969020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d9693a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d969530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7faf6d920dd0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7faf6d920dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d91f180"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d91f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7faf6d91e610" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7faf6d91e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d91e990"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d91eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6d920020" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6d920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6d9203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7faf6d91f5a0" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7faf6d91f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7faf6d91f920"/>
        <function-ref name="receivedByte" scoped="" ref="0x7faf6d91fab0"/>
        <function-ref name="receive" scoped="" ref="0x7faf6d91fc40"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7faf6d91fdd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7faf6d91e020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7faf6d91e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7faf6d91e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7faf6d91bcc0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6d91bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d91ab60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d919550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d919090"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d919a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7faf6d91c620" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7faf6d91c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faf6d91c9a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faf6d91cb30"/>
        <function-ref name="rxDone" scoped="" ref="0x7faf6d91ccc0"/>
        <function-ref name="txDone" scoped="" ref="0x7faf6d91ce50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faf6d91b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faf6d91b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faf6d91b340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7faf6d91b4d0"/>
        <function-ref name="tx" scoped="" ref="0x7faf6d91b660"/>
        <function-ref name="rx" scoped="" ref="0x7faf6d91b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7faf6d920630" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7faf6d920630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d9209b0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d920b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7faf6d91edf0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7faf6d91edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d91c1c0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d91c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7faf6d8fc5f0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7faf6d8fc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faf6d8fc970"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faf6d8fcb00"/>
        <function-ref name="rxDone" scoped="" ref="0x7faf6d8fcc90"/>
        <function-ref name="txDone" scoped="" ref="0x7faf6d8fce20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faf6d8fb020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faf6d8fb1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faf6d8fb340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7faf6d8fb4d0"/>
        <function-ref name="tx" scoped="" ref="0x7faf6d8fb660"/>
        <function-ref name="rx" scoped="" ref="0x7faf6d8fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7faf6d8fadd0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7faf6d8fadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faf6d8f9180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faf6d8f9310"/>
        <function-ref name="rxDone" scoped="" ref="0x7faf6d8f94a0"/>
        <function-ref name="txDone" scoped="" ref="0x7faf6d8f9630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faf6d8f97c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faf6d8f9950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faf6d8f9ae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7faf6d8f9c70"/>
        <function-ref name="tx" scoped="" ref="0x7faf6d8f9e00"/>
        <function-ref name="rx" scoped="" ref="0x7faf6d8f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7faf6d8fdd20" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7faf6d8fdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8fc0e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8fc270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7faf6d8fbb80" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7faf6d8fbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8fa020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7faf6d8fa540" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7faf6d8fa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8fa8c0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8faa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7faf6d8fd480" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7faf6d8fd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8fd800"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8fd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7faf6d8f8d80" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7faf6d8f8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6d8f5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7faf6d8f3730" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7faf6d8f3730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faf6d8f3ab0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faf6d8f3c40"/>
        <function-ref name="rxDone" scoped="" ref="0x7faf6d8f3dd0"/>
        <function-ref name="txDone" scoped="" ref="0x7faf6d8f2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faf6d8f21b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faf6d8f2340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faf6d8f24d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7faf6d8f2660"/>
        <function-ref name="tx" scoped="" ref="0x7faf6d8f27f0"/>
        <function-ref name="rx" scoped="" ref="0x7faf6d8f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7faf6d8f2ce0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7faf6d8f2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6d8f10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7faf6d8f0650" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7faf6d8f0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7faf6d8f09d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7faf6d8f0b60"/>
        <function-ref name="rxDone" scoped="" ref="0x7faf6d8f0cf0"/>
        <function-ref name="txDone" scoped="" ref="0x7faf6d8f0e80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7faf6d8ef030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7faf6d8ef1c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7faf6d8ef350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7faf6d8ef4e0"/>
        <function-ref name="tx" scoped="" ref="0x7faf6d8ef670"/>
        <function-ref name="rx" scoped="" ref="0x7faf6d8ef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7faf6d8f5e30" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7faf6d8f5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8f31e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8f3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7faf6d8f1470" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7faf6d8f1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8f17f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7faf6d8f1d50" loc="121:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7faf6d8f1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8f0100"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8f0290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7faf6d8efb30" loc="124:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7faf6d8efb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7faf6d8ee020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7faf6d8ee1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7faf6d8ee340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7faf6d8ee4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7faf6d8ee660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7faf6d8ee980" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7faf6d8ee980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7faf6d8eed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7faf6d8f5550" loc="115:/home/cxf/Desktop/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7faf6d8f5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d8f58d0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8f5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6d88fbb0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6d88fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d88ca00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d88b4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d88b020"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d88b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6d889c50" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6d889c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TThree" ref="0x7faf6eca47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d886a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d8854e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d885020"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d8859a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7faf6d87ddc0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6d87ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7faf6d87c180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6d87c310"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6d87c4a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6d87c630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6d87c7c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6d87c950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6d87cae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6d87cc70"/>
        <function-ref name="setControlC" scoped="" ref="0x7faf6d87ce00"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6d87b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faf6d87b530" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7faf6d87b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7faf6d8779a0"/>
        <function-ref name="test" scoped="" ref="0x7faf6d877020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d87a1b0"/>
        <function-ref name="captured" scoped="" ref="0x7faf6d87ab80"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d8780d0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d8774e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d87a670"/>
        <function-ref name="start" scoped="" ref="0x7faf6d878590"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d878a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7faf6d876650" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7faf6d876650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6d872110"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d874da0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d8743d0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d8732a0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d8725d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d874890"/>
        <function-ref name="start" scoped="" ref="0x7faf6d873760"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d873c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6d884b30" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d884b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6d87ee60"/>
        <function-ref name="test" scoped="" ref="0x7faf6d87e4e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d881790"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6d87d350"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6d87d860"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d87f670"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d87f1b0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d87e9a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d881c50"/>
        <function-ref name="start" scoped="" ref="0x7faf6d87fb30"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d87e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7faf6d868020" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7faf6d868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7faf6d8683a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7faf6d868530"/>
        <function-ref name="getControlA" scoped="" ref="0x7faf6d8686c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7faf6d868850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7faf6d8689e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7faf6d868b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7faf6d868d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7faf6d867020"/>
        <function-ref name="setControlC" scoped="" ref="0x7faf6d8671b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7faf6d867340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7faf6d8625a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7faf6d8625a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6d85e020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d861c10"/>
        <function-ref name="get" scoped="" ref="0x7faf6d861240"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d860110"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d85e4e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d861700"/>
        <function-ref name="start" scoped="" ref="0x7faf6d8605d0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d860a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7faf6d867850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7faf6d867850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7faf6d863e60"/>
        <function-ref name="test" scoped="" ref="0x7faf6d8634e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d8664c0"/>
        <function-ref name="captured" scoped="" ref="0x7faf6d865020"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d865530"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d8639a0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d866980"/>
        <function-ref name="start" scoped="" ref="0x7faf6d8659f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7faf6d85eba0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7faf6d85eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6d85a550"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d85c1f0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d85d7f0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d85c6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d85aa10"/>
        <function-ref name="set" scoped="" ref="0x7faf6d85dcb0"/>
        <function-ref name="start" scoped="" ref="0x7faf6d85cb70"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d85a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7faf6d859120" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7faf6d859120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7faf6d857a90"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d858770"/>
        <function-ref name="get" scoped="" ref="0x7faf6d859d50"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d858c30"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d855020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d858260"/>
        <function-ref name="start" scoped="" ref="0x7faf6d857110"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d8575d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6d870b90" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d870b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6d869020"/>
        <function-ref name="test" scoped="" ref="0x7faf6d86b550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d86d7f0"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6d8694e0"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6d8699f0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d86c6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d86c1f0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d86ba10"/>
        <function-ref name="set" scoped="" ref="0x7faf6d86dcb0"/>
        <function-ref name="start" scoped="" ref="0x7faf6d86cb70"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d86b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6d7dbc60" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6d7dbc60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7faf6ed7a9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7faf6ed7a9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6d7da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6d7da410" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d7da410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6d7d7810"/>
        <function-ref name="test" scoped="" ref="0x7faf6d7d8e60"/>
        <function-ref name="get" scoped="" ref="0x7faf6d7d9090"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6d7d7cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6d7d5260"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d7d8020"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d7d9a60"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d7d7350"/>
        <function-ref name="set" scoped="" ref="0x7faf6d7d9550"/>
        <function-ref name="start" scoped="" ref="0x7faf6d7d84e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d7d89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6d7d33c0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6d7d33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TThree" ref="0x7faf6eca47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d7d1240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d7d1bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d7d1700"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d7d00d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6d7d0660" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d7d0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7faf6d7cca90"/>
        <function-ref name="test" scoped="" ref="0x7faf6d7cc110"/>
        <function-ref name="get" scoped="" ref="0x7faf6d7cf3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7faf6d7cb020"/>
        <function-ref name="getScale" scoped="" ref="0x7faf6d7cb530"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d7cd2a0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d7cfda0"/>
        <function-ref name="isOn" scoped="" ref="0x7faf6d7cc5d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d7cf890"/>
        <function-ref name="start" scoped="" ref="0x7faf6d7cd760"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d7cdc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7faf6d7c30f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7faf6d7c30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TThree" ref="0x7faf6eca47b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d7c2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d7c29a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d7c24e0"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d7c2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7faf6d7c7cd0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7faf6d7c7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ece8d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7faf6ece7180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7faf6d7c6b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7faf6d7c5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7faf6d7c5090"/>
        <function-ref name="overflow" scoped="" ref="0x7faf6d7c5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7faf6d7b61e0" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7faf6d7b61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7faf6d7b6560"/>
        <function-ref name="offset" scoped="" ref="0x7faf6d7b66f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7faf6d7b6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6d7a7bd0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseStationC.t1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d7a7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d79a110"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d79c6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d79b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d79b020"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d79aa10"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d79a590"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d79cb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d79d860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d79bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d79dd30"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d79c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7faf6d2e2020" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7faf6d2e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7faf6d2e23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7faf6d2e5810" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7faf6d2e5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2e4480"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d2e4900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7faf6d2e50a0" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7faf6d2e50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7faf6d2e5420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7faf6d2e79c0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="BaseStationC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7faf6d2e79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2e65f0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d2e6a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7faf6ca9dc50" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x7faf6ca9dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7faf6ca9c020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7faf6ca9c1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7faf6ca9c340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7faf6ca9c4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7faf6ca9c660"/>
        <function-ref name="reset" scoped="" ref="0x7faf6ca9c7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7faf6ca9c980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7faf6ca9cb10"/>
        <function-ref name="resetDone" scoped="" ref="0x7faf6ca9cca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7faf6ca9ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7faf6caa3e30" loc="48:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x7faf6caa3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7faf6caa21e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7faf6caa25d0" loc="49:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x7faf6caa25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6caa1200"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6caa1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7faf6caa4020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7faf6caa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7faf6caa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7faf6caa1c80" loc="51:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7faf6caa1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6ca9f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6ca9f230"/>
        <function-ref name="request" scoped="" ref="0x7faf6ca9f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6ca9f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6ca9f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7faf6ca9e7a0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x7faf6ca9e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7faf6ca9eb20"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7faf6ca9ecb0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7faf6ca9ee40"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7faf6ca9d020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7faf6ca9d1b0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6ca9d340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7faf6ca9d4d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7faf6ca9d660"/>
        <function-ref name="resetDone" scoped="" ref="0x7faf6ca9d7f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7faf6ca9d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7faf6ca9f9b0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x7faf6ca9f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6ca9fd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6ca9e020"/>
        <function-ref name="request" scoped="" ref="0x7faf6ca9e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6ca9e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6ca9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7faf6caa4790" loc="47:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="BaseStationC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7faf6caa4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6caa33b0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6caa3830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7faf6d7452c0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7faf6d7452c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7faf6d745640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7faf6d7457d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7faf6d745960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7faf6d745af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7faf6d745c80"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d745e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7faf6d744020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7faf6d7441b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7faf6d744340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7faf6d7444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d746020" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d7463a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d746530"/>
        <function-ref name="request" scoped="" ref="0x7faf6d7466c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d746850"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d7469e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7faf6d6c2610" loc="58:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7faf6d6c2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d6c2990"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d6c2b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d6c2cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d6c2e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7faf6d6ba2f0" loc="102:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x7faf6d6ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d6ba670"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d6ba800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7faf6d6bbac0" loc="103:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x7faf6d6bbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d6bbe40"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d6ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7faf6d6c4480" loc="57:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x7faf6d6c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6c4800"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6c4990"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6c4b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6c4cb0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6c4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6c2020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6c21b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7faf6d6c7c90" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x7faf6d6c7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7faf6d6c60a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7faf6d6c6230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7faf6d6c63c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7faf6d6c6550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7faf6d6c66e0"/>
        <function-ref name="reset" scoped="" ref="0x7faf6d6c6870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7faf6d6c6a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7faf6d6c6b90"/>
        <function-ref name="resetDone" scoped="" ref="0x7faf6d6c6d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7faf6d6c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7faf6d6c52f0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7faf6d6c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6c5670"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6c5800"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6c5990"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6c5b20"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6c5cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6c5e40"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6c4020"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6d6bc450" loc="62:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6d6bc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d6bc7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d6bc960"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d6bcaf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d6bcc80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d6bce10"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6bb020"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d6bb1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d6bb7f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6bb4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d6bb340"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d6bb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6d6c1240" loc="60:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d6c1240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d6be6e0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6c0c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d6bfa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d6bf5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d6bc020"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d6beb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d6bf170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d6c1e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d6be0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d6c0340"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d6c0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7faf6d6af730" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x7faf6d6af730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d6afab0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d6afc40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d6afdd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d6ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7faf6d6b0370" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7faf6d6b0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6b06f0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6b0880"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6b0a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6b0ba0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6b0d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6af020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6af1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7faf6d6b1020" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7faf6d6b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6b13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6b1530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6b16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6b1850"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6b19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6b1b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6b1d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d6b21d0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d6b21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d6b2550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d6b26e0"/>
        <function-ref name="request" scoped="" ref="0x7faf6d6b2870"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d6b2a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d6b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7faf6d69cd00" loc="36:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7faf6d69cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d69b0a0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d69b230"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d69b3c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d69b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7faf6d6937b0" loc="45:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7faf6d6937b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d693b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7faf6d6a74d0" loc="23:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7faf6d6a74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a7850"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a79e0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a7b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a7d00"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a61b0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a6340"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7faf6d6a4c90" loc="26:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7faf6d6a4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a3230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a3550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a3870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a3a00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7faf6d695bf0" loc="48:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7faf6d695bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d692020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7faf6d692a00" loc="50:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7faf6d692a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d691020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7faf6d6a0660" loc="30:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7faf6d6a0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a09e0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a0b70"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a0d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d69f020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d69f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d69f340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d69f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d69f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7faf6d6976a0" loc="42:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7faf6d6976a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d697a20"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d697bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d697d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d696020"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d696340"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6964d0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d696660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7faf6d6aa020" loc="21:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7faf6d6aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6aa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6aa530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6aa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6aa850"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6aa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6aab70"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6aad00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7faf6d6a67e0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7faf6d6a67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a6b60"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a6cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a6e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a5030"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a51c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a5350"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a54e0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7faf6d69a560" loc="38:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7faf6d69a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d69a8e0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d69aa70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d69ac00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d69ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7faf6d693e60" loc="46:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7faf6d693e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d695210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7faf6d698380" loc="41:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7faf6d698380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d698700"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d698890"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d698a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d698bb0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d698d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d697020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6971b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d697340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7faf6d6a2020" loc="27:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7faf6d6a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a2530"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a2850"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a2b70"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a2d00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7faf6d69c020" loc="35:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7faf6d69c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d69c4a0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d69c630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d69c7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d69c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7faf6d691350" loc="51:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7faf6d691350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d6916d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7faf6d69f980" loc="31:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7faf6d69f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d69fd00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d69e020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d69e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d69e340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d69e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d69e660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d69e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d69e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7faf6d6a9330" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7faf6d6a9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a96b0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a9840"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a99d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a9b60"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a9cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a9e80"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a7030"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7faf6d6a5980" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7faf6d6a5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a5d00"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a4340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a4660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a47f0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7faf6d695540" loc="47:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7faf6d695540"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d6958c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7faf6d692350" loc="49:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7faf6d692350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d6926d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7faf6d6a1340" loc="29:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7faf6d6a1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6a16c0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6a1850"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6a19e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6a1b70"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6a1d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6a0020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6a01b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7faf6d69b900" loc="37:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7faf6d69b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d69bc80"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d69be10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d69a020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d69a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7faf6d699130" loc="40:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7faf6d699130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6994b0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d699640"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6997d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d699960"/>
        <function-ref name="get" scoped="" ref="0x7faf6d699af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d699c80"/>
        <function-ref name="set" scoped="" ref="0x7faf6d699e10"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d698020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7faf6d691a00" loc="52:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7faf6d691a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d691d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7faf6d6aeca0" loc="20:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7faf6d6aeca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d6ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d6ab230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d6ab3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d6ab550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d6ab6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d6ab870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d6aba00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d6abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7faf6d69eca0" loc="32:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7faf6d69eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d69d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d69d230"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d69d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d69d550"/>
        <function-ref name="get" scoped="" ref="0x7faf6d69d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d69d870"/>
        <function-ref name="set" scoped="" ref="0x7faf6d69da00"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d69db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7faf6d690d10" loc="18:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7faf6d690d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7faf6d68c1a0" loc="21:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7faf6d68c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7faf6d68b020" loc="23:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7faf6d68b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7faf6d68d410" loc="19:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7faf6d68d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7faf6d68b6d0" loc="24:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7faf6d68b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7faf6d68dac0" loc="20:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7faf6d68dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7faf6d68c850" loc="22:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7faf6d68c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7faf6d68bd80" loc="25:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7faf6d68bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7faf6d68a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7faf6d673b70" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7faf6d673b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d672020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6721b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d672340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d6724d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d672660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d6727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7faf6d67cd10" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7faf6d67cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d67b0e0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d67b270"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d67b400"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d67b590"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d67b720"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d67b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7faf6d675b70" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7faf6d675b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d674020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6741b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d674340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d6744d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d674660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d6747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7faf6d672b70" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7faf6d672b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d671020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6711b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d671340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d6714d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d671660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d6717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7faf6d67bc30" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7faf6d67bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d676020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6761b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d676340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d6764d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d676660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d6767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7faf6d674b70" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7faf6d674b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d673020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6731b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d673340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d6734d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d673660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d6737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7faf6d677e20" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7faf6d677e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d67c1c0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d67c350"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d67c4e0"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d67c670"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d67c800"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d67c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7faf6d676b70" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7faf6d676b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d675020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d6751b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d675340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d6754d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d675660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d6757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7faf6d669830" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7faf6d669830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d669bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7faf6d66d230" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7faf6d66d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d66d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7faf6d66c8d0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7faf6d66c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d66cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7faf6d668020" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7faf6d668020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d6683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7faf6d66d9b0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7faf6d66d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d66dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7faf6d6690b0" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7faf6d6690b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d669430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7faf6d66ba00" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7faf6d66ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d66bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7faf6d66c150" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7faf6d66c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d66c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d64c3f0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d64c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d64c770"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d64c900"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d64ca90"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d64cc20"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d64cdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d637020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d6372f0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d6372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d637670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d634260" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d634260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d6345e0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d634770"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d634900"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d634a90"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d634c20"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d634db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d632100" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d632100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d632480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d62f0a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d62f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d62f420"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d62f5b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d62f740"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d62f8d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d62fa60"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d62fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d62e020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d62e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d62e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d62b020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d62b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d62b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d62b530"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d62b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d62b850"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d62b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d62bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d62be40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d62be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d62a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d627d60" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d627d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d626180"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d626310"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d6264a0"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d626630"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d6267c0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d626950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d626c20" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d626c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d625020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d623c90" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d623c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d6220a0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d622230"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d6223c0"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d622550"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d6226e0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d622870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d622b40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d622b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d621020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d61fc90" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d61fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d61e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d61e230"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d61e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d61e550"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d61e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d61e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d61eb40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d61eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d61c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7faf6d61ac90" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7faf6d61ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d6190a0"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d619230"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d6193c0"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d619550"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d6196e0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d619870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7faf6d619b40" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7faf6d619b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d618020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7faf6d5fd7a0" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5fd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d5fdb20"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d5fdcb0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5fde40"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d5fc020"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d5fc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d5fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7faf6d60cb50" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7faf6d60cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d5fd020"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5fd1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d5fd340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d5fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7faf6d5f92f0" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5f92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d5f9670"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d5f9800"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5f9990"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d5f9b20"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d5f9cb0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d5f9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7faf6d5fa680" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7faf6d5fa680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d5faa00"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5fab90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d5fad20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d5f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7faf6d5f6c20" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5f6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d5f5020"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d5f51b0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5f5340"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d5f54d0"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d5f5660"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d5f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7faf6d5f6120" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7faf6d5f6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d5f64a0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5f6630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d5f67c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d5f6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7faf6d5f27a0" loc="9:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7faf6d5f27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7faf6d5f2b20"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d5f2cb0"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5f2e40"/>
        <function-ref name="edge" scoped="" ref="0x7faf6d5f1020"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d5f11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7faf6d5f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7faf6d5f3b50" loc="8:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7faf6d5f3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7faf6d5f2020"/>
        <function-ref name="disable" scoped="" ref="0x7faf6d5f21b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7faf6d5f2340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7faf6d5f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6d5de460" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6d5de460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6d5de7e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6d5de970"/>
        <function-ref name="start" scoped="" ref="0x7faf6d5deb00"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d5dec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityData" ref="0x7faf6d5d6590" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7faf6d5d6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d5d6910"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d5d6aa0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5d6c30"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5d6dc0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7faf6d5cd380" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7faf6d5cd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d5cd700"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d5cd890"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d5cda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d5cdbb0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d5cdd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d5cc020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d5cc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d5cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7faf6d5ce190" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x7faf6d5ce190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d5ce510"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d5ce6a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d5ce830"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d5ce9c0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d5ceb50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d5cece0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d5cee70"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d5cd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityClock" ref="0x7faf6d5cf730" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7faf6d5cf730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d5cfab0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d5cfc40"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5cfdd0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5d6020"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityPower" ref="0x7faf6d5d2410" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7faf6d5d2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d5d2790"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d5d2920"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5d2ab0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5d2c40"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5d2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6d5cc630" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d5cc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d5cc9b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d5ccb40"/>
        <function-ref name="request" scoped="" ref="0x7faf6d5cccd0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d5cce60"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d5cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6d5dd110" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d5dd110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d5d9630"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d5dbb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d5da920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d5da4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d5d8020"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d5d9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d5da020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d5ddd00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d5d9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d5db220"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d5db6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6d5adc10" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d5adc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d5a8110"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d5ab6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d5aa4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d5aa020"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d5a8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d5a8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d5abb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d5ac860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d5aaab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d5acd30"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d5ab220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6d547020" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d547020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6d5473c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d547550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6d546cd0" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d546cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6d5440a0"/>
        <function-ref name="configure" scoped="" ref="0x7faf6d544230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6d5477a0" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d5477a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d547b20"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d547cb0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d547e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d546020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d5461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d548210" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d548210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d5485b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d548740"/>
        <function-ref name="request" scoped="" ref="0x7faf6d5488d0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d548a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d548bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6d546400" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d546400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d546780"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d546910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6c9cf810" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6c9cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6c9cfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faf6c9cfe20" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c9cfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c9cd1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c9cd350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c9cd4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c9cd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6c9cbd80" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c9cbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6c9ca180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c9ca310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6c9c9b60" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c9c9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6c9c8020"/>
        <function-ref name="configure" scoped="" ref="0x7faf6c9c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faf6c9c8440" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7faf6c9c8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c9c87c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c9c8950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c9c8ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c9c8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6c9ca560" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c9ca560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c9ca8e0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6c9caa70"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c9cac00"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c9cad90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c9c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6c9c7020" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6c9c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6c9c73a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6c9c7530"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6c9c76c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6c9c7850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6c9c79e0"/>
        <function-ref name="get" scoped="" ref="0x7faf6c9c7b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6c9c7d00"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6c9c54d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6c9c51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6c9c5020"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6c9c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6c9cb020" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c9cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c9cb3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c9cb550"/>
        <function-ref name="request" scoped="" ref="0x7faf6c9cb6e0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c9cb870"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c9cba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6c9c9270" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c9c9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6c9c95f0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6c9c9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faf6c9c57a0" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7faf6c9c57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c9c5b20"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c9c5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7faf6d541a10" loc="69:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6d541a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6d541d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6d515020"/>
        <function-ref name="start" scoped="" ref="0x7faf6d5151b0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d515340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faf6d515590" loc="71:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6d515590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faf6d515910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faf6d515b60" loc="72:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d515b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d514020"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d5141b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d514340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d5144d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d514660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faf6d5148b0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d5148b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d514c30"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d514dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7faf6c995b20" loc="61:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6c995b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6c994020"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6c9941b0"/>
        <function-ref name="start" scoped="" ref="0x7faf6c994340"/>
        <function-ref name="stop" scoped="" ref="0x7faf6c9944d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faf6c994720" loc="63:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6c994720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faf6c994aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7faf6c991160" loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7faf6c991160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c9914e0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c991670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faf6c994cf0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c994cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c9930a0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6c993230"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c9933c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c993550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c9936e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7faf6c991940" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7faf6c991940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c991cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c991e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7faf6c9953c0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7faf6c9953c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6c995740"/>
        <function-ref name="stop" scoped="" ref="0x7faf6c9958d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faf6c993930" loc="65:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c993930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6c993cb0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6c993e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDin" ref="0x7faf6d50ce00" loc="64:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x7faf6d50ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d50b1c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d50b350"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d50b4e0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d50b670"/>
        <function-ref name="close" scoped="" ref="0x7faf6d50b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_Y" ref="0x7faf6d50d270" loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x7faf6d50d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d50d5f0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d50d780"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d50d910"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d50daa0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d50dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityData" ref="0x7faf6d508700" loc="80:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x7faf6d508700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d508a80"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d508c10"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d508da0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d507020"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressurePower" ref="0x7faf6d505190" loc="89:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x7faf6d505190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d505510"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d5056a0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d505830"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5059c0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d505b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDout" ref="0x7faf6d50bbe0" loc="68:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x7faf6d50bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d50a020"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d50a1b0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d50a340"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d50a4d0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d50a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelThermopile_Select_Cnt" ref="0x7faf6d50aac0" loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x7faf6d50aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d50ae40"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d509020"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5091b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d509340"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost5Channel" ref="0x7faf6d5018c0" loc="106:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x7faf6d5018c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d501c40"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d501dd0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d500020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5001b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d500340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityPower" ref="0x7faf6d504020" loc="92:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x7faf6d504020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d5043a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d504530"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5046c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d504850"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5049e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityClock" ref="0x7faf6d5098a0" loc="77:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x7faf6d5098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d509c20"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d509db0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d508020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5081b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d508340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelEepromPower" ref="0x7faf6d504da0" loc="95:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelEepromPower" scoped="" ref="0x7faf6d504da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d503310"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d5034a0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d503630"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d5037c0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d503950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelLightPower" ref="0x7faf6d507560" loc="83:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7faf6d507560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d5078e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d507a70"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d507c00"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d507d90"/>
        <function-ref name="close" scoped="" ref="0x7faf6d506020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureClock" ref="0x7faf6d50c060" loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x7faf6d50c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d50c3e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d50c570"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d50c700"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d50c890"/>
        <function-ref name="close" scoped="" ref="0x7faf6d50ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d500b70" loc="110:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d500b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d4ff020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d4ff1b0"/>
        <function-ref name="request" scoped="" ref="0x7faf6d4ff340"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d4ff4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d4ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2PowerNull" ref="0x7faf6d5063d0" loc="86:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2PowerNull" scoped="" ref="0x7faf6d5063d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d506750"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d5068e0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d506a70"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d506c00"/>
        <function-ref name="close" scoped="" ref="0x7faf6d506d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_X" ref="0x7faf6d50e4c0" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x7faf6d50e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d50e840"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d50e9d0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d50eb60"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d50ecf0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d50ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccelPower" ref="0x7faf6d503d00" loc="98:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x7faf6d503d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d5020a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d502230"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5023c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d502550"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5026e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost33Channel" ref="0x7faf6d502aa0" loc="101:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x7faf6d502aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d502e20"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d501020"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d5011b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d501340"/>
        <function-ref name="close" scoped="" ref="0x7faf6d5014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6d4fcd80" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d4fcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6d4fb180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d4fb310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6d4fab40" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d4fab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6d4f9020"/>
        <function-ref name="configure" scoped="" ref="0x7faf6d4f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6d4fb560" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d4fb560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d4fb8e0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d4fba70"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d4fbc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d4fbd90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d4fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d4fc020" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d4fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d4fc3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d4fc550"/>
        <function-ref name="request" scoped="" ref="0x7faf6d4fc6e0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d4fc870"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d4fca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6d4fa270" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d4fa270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d4fa5f0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d4fa780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6c976cf0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6c976cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6c9750a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faf6c975330" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c975330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c9756b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c975840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c9759d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c975b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6c9723a0" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c9723a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6c972740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c9728d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6c970210" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c970210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6c9705b0"/>
        <function-ref name="configure" scoped="" ref="0x7faf6c970740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faf6c9709d0" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7faf6c9709d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c970d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c96e020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c96e1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c96e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6c972b20" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c972b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c971020"/>
        <function-ref name="requested" scoped="" ref="0x7faf6c9711b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c971340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c9714d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c971660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6c96e590" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6c96e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6c96e910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6c96eaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6c96ec30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6c96edc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6c96d020"/>
        <function-ref name="get" scoped="" ref="0x7faf6c96d1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6c96d340"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6c96d980"/>
        <function-ref name="set" scoped="" ref="0x7faf6c96d660"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6c96d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6c96d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6c973540" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c973540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c9738e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c973a70"/>
        <function-ref name="request" scoped="" ref="0x7faf6c973c00"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c973d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c972020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6c9718b0" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c9718b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6c971c30"/>
        <function-ref name="userId" scoped="" ref="0x7faf6c971dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faf6c96dc50" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7faf6c96dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c96c020"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c96c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7faf6d3195d0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7faf6d3195d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d319950"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d319ae0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d319c70"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d319e00"/>
        <function-ref name="close" scoped="" ref="0x7faf6d318020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7faf6d31e5d0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7faf6d31e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d31e950"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d31eae0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d31ec70"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d31ee00"/>
        <function-ref name="close" scoped="" ref="0x7faf6d31d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7faf6d31cc70" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7faf6d31cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d31a020"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d31a1b0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d31a340"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d31a4d0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d31a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7faf6d3182b0" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7faf6d3182b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d318630"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d3187c0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d318950"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d318ae0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d318c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7faf6d31d2b0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7faf6d31d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d31d630"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d31d7c0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d31d950"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d31dae0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d31dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7faf6d31a8f0" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7faf6d31a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d31ac70"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d31ae00"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d319020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d3191b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d319340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7faf6d31f910" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7faf6d31f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d31fc90"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d31fe20"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d31e020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d31e1b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d31e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7faf6d31c020" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7faf6d31c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d31c3a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d31c530"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d31c6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d31c850"/>
        <function-ref name="close" scoped="" ref="0x7faf6d31c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7faf6c934020" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7faf6c934020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c9343a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c934530"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c9346c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c934850"/>
        <function-ref name="close" scoped="" ref="0x7faf6c9349e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7faf6c9380a0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7faf6c9380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c938420"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c9385b0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c938740"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c9388d0"/>
        <function-ref name="close" scoped="" ref="0x7faf6c938a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7faf6c9365e0" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7faf6c9365e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c936960"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c936af0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c936c80"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c936e10"/>
        <function-ref name="close" scoped="" ref="0x7faf6c935020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7faf6c934c70" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7faf6c934c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c933020"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c9331b0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c933340"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c9334d0"/>
        <function-ref name="close" scoped="" ref="0x7faf6c933660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7faf6c938cf0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7faf6c938cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c9370a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c937230"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c9373c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c937550"/>
        <function-ref name="close" scoped="" ref="0x7faf6c9376e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7faf6c9352b0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7faf6c9352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c935630"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c9357c0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c935950"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c935ae0"/>
        <function-ref name="close" scoped="" ref="0x7faf6c935c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6c92e7b0" loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c92e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c92eb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c92ecc0"/>
        <function-ref name="request" scoped="" ref="0x7faf6c92ee50"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c92d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c92d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7faf6c933a30" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c933a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c9316b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6c92fc30"/>
        <function-ref name="write" scoped="" ref="0x7faf6c930330"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c92f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7faf6c9393f0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7faf6c9393f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c939770"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c939900"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c939a90"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c939c20"/>
        <function-ref name="close" scoped="" ref="0x7faf6c939db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7faf6c937970" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7faf6c937970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c937cf0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c937e80"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c936030"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c9361c0"/>
        <function-ref name="close" scoped="" ref="0x7faf6c936350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7faf6c90ebe0" loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7faf6c90ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c90d020"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c90d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7faf6c90f8b0" loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7faf6c90f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c90fc50"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c90fde0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c90e020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c90e1b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6c90e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6c90e590" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6c90e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6c90e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6c910060" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6c910060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6c9103e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6c910570"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6c910700"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6c910890"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6c910a20"/>
        <function-ref name="get" scoped="" ref="0x7faf6c910bb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6c910d40"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6c90f4d0"/>
        <function-ref name="set" scoped="" ref="0x7faf6c90f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6c90f020"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6c90f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6c911400" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c911400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c911780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c911910"/>
        <function-ref name="request" scoped="" ref="0x7faf6c911aa0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c911c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c911dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7faf6c916790" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c916790"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c9153f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6c913880"/>
        <function-ref name="write" scoped="" ref="0x7faf6c914020"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c914c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7faf6c90d480" loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7faf6c90d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c90d800"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c90d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6c92a120" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c92a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c92a4a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c92a630"/>
        <function-ref name="request" scoped="" ref="0x7faf6c92a7c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c92a950"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c92aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6c929020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c929020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c929c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6c925150"/>
        <function-ref name="write" scoped="" ref="0x7faf6c9278c0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c926510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d461530" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d461530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d4618b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d461a40"/>
        <function-ref name="request" scoped="" ref="0x7faf6d461bd0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d461d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6d460a20" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d460a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d45e6b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d45cc30"/>
        <function-ref name="write" scoped="" ref="0x7faf6d45d330"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d45c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6d457850" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d457850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6d457bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d457d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6d455570" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d455570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6d455910"/>
        <function-ref name="configure" scoped="" ref="0x7faf6d455aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6d456020" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d456020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d4563a0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d456530"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d4566c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d456850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d4569e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d458a80" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d458a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d458e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d457020"/>
        <function-ref name="request" scoped="" ref="0x7faf6d4571b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d457340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d4574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6d456c30" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d456c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d455020"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d4551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6c8d93b0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6c8d93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6c8d9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faf6c8d99c0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c8d99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c8d9d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c8d8020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c8d81b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c8d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6c8d6a60" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c8d6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6c8d6e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c8d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6c8d4790" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c8d4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6c8d4b30"/>
        <function-ref name="configure" scoped="" ref="0x7faf6c8d4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faf6c8d2020" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7faf6c8d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c8d23a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c8d2530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c8d26c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c8d2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6c8d5270" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c8d5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c8d55f0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6c8d5780"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c8d5910"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c8d5aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c8d5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6c8d2aa0" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6c8d2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6c8d2e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6c8d1020"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6c8d11b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6c8d1340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6c8d14d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6c8d1660"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6c8d17f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6c8d1e30"/>
        <function-ref name="set" scoped="" ref="0x7faf6c8d1b10"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6c8d1980"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6c8d1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6c8d7c80" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c8d7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c8d60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c8d6230"/>
        <function-ref name="request" scoped="" ref="0x7faf6c8d63c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c8d6550"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c8d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6c8d5e80" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c8d5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6c8d4220"/>
        <function-ref name="userId" scoped="" ref="0x7faf6c8d43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faf6c8d0160" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7faf6c8d0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c8d04e0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c8d0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faf6d451780" loc="62:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6d451780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faf6d451b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faf6d451d50" loc="63:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d451d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d446100"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d446290"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d446420"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d4465b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d446740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7faf6d451020" loc="60:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faf6d451020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d4513a0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d451530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faf6d446990" loc="64:/home/cxf/Desktop/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d446990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d446d10"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d445020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7faf6d4012a0" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7faf6d4012a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7faf6d401620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7faf6d4065a0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7faf6d4065a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d404240"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d4026d0"/>
        <function-ref name="write" scoped="" ref="0x7faf6d404e50"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d403a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6d4018b0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6d4018b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d401c30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d401dc0"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d400020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d4001b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d400340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d4004d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d400660"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d400ca0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d400980"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d4007f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d400b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d4428b0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d4428b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d442c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d442de0"/>
        <function-ref name="request" scoped="" ref="0x7faf6d40c020"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d40c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d40c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6d40c820" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d40c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d40b4c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d4089b0"/>
        <function-ref name="write" scoped="" ref="0x7faf6d409110"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d409d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7faf6d4076c0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7faf6d4076c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d407a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d407bf0"/>
        <function-ref name="request" scoped="" ref="0x7faf6d407d80"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d406020"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d4061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7faf6d392ba0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7faf6d392ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7faf6d391020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7faf6d3912f0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7faf6d3912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7faf6d391670"/>
        <function-ref name="sendCommand" scoped="" ref="0x7faf6d391800"/>
        <function-ref name="setStart" scoped="" ref="0x7faf6d391990"/>
        <function-ref name="status" scoped="" ref="0x7faf6d391b20"/>
        <function-ref name="hasAcks" scoped="" ref="0x7faf6d391cb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7faf6d391e40"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7faf6d390020"/>
        <function-ref name="read" scoped="" ref="0x7faf6d3901b0"/>
        <function-ref name="init" scoped="" ref="0x7faf6d390340"/>
        <function-ref name="enableAck" scoped="" ref="0x7faf6d3904d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7faf6d390660"/>
        <function-ref name="hasStart" scoped="" ref="0x7faf6d3907f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faf6d390980"/>
        <function-ref name="commandComplete" scoped="" ref="0x7faf6d390c10"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d390da0"/>
        <function-ref name="write" scoped="" ref="0x7faf6d38f020"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7faf6d38f1b0"/>
        <function-ref name="off" scoped="" ref="0x7faf6d38f340"/>
        <function-ref name="setStop" scoped="" ref="0x7faf6d38f4d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7faf6d38f660"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7faf6d38f7f0"/>
        <function-ref name="hasStop" scoped="" ref="0x7faf6d38f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7faf6d38fc50" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7faf6d38fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d38e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d38e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d38e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d38e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d38e660"/>
        <function-ref name="get" scoped="" ref="0x7faf6d38e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d38e980"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d38d020"/>
        <function-ref name="set" scoped="" ref="0x7faf6d38eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d38eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d38ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7faf6d38d2f0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7faf6d38d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d38d670"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d38d800"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d38d990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d38db20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d38dcb0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d38de40"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d38c020"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d38c660"/>
        <function-ref name="set" scoped="" ref="0x7faf6d38c340"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d38c1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d38c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7faf6d397570" loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7faf6d397570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6d3978f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d397a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6d397e30" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d397e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d396ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d392020"/>
        <function-ref name="write" scoped="" ref="0x7faf6d395710"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d3933c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7faf6d387500" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7faf6d387500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7faf6d387880"/>
        <function-ref name="sendCommand" scoped="" ref="0x7faf6d387a10"/>
        <function-ref name="setStart" scoped="" ref="0x7faf6d387ba0"/>
        <function-ref name="status" scoped="" ref="0x7faf6d387d30"/>
        <function-ref name="hasAcks" scoped="" ref="0x7faf6d386020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7faf6d3861b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7faf6d386340"/>
        <function-ref name="read" scoped="" ref="0x7faf6d3864d0"/>
        <function-ref name="init" scoped="" ref="0x7faf6d386660"/>
        <function-ref name="enableAck" scoped="" ref="0x7faf6d3867f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7faf6d386980"/>
        <function-ref name="hasStart" scoped="" ref="0x7faf6d386b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faf6d386ca0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7faf6d385020"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d3851b0"/>
        <function-ref name="write" scoped="" ref="0x7faf6d385340"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7faf6d3854d0"/>
        <function-ref name="off" scoped="" ref="0x7faf6d385660"/>
        <function-ref name="setStop" scoped="" ref="0x7faf6d3857f0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7faf6d385980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7faf6d385b10"/>
        <function-ref name="hasStop" scoped="" ref="0x7faf6d385ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7faf6d381020" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7faf6d381020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7faf6d3813a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7faf6d381530"/>
        <function-ref name="setStart" scoped="" ref="0x7faf6d3816c0"/>
        <function-ref name="status" scoped="" ref="0x7faf6d381850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7faf6d3819e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7faf6d381b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7faf6d381d00"/>
        <function-ref name="read" scoped="" ref="0x7faf6d380020"/>
        <function-ref name="init" scoped="" ref="0x7faf6d3801b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7faf6d380340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7faf6d3804d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7faf6d380660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7faf6d3807f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7faf6d380a80"/>
        <function-ref name="enable" scoped="" ref="0x7faf6d380c10"/>
        <function-ref name="write" scoped="" ref="0x7faf6d380da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7faf6d37f020"/>
        <function-ref name="off" scoped="" ref="0x7faf6d37f1b0"/>
        <function-ref name="setStop" scoped="" ref="0x7faf6d37f340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7faf6d37f4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7faf6d37f660"/>
        <function-ref name="hasStop" scoped="" ref="0x7faf6d37f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7faf6d37fb80" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7faf6d37fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d37e020"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d37e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d37e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d37e4d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d37e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d37e7f0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d37e980"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d37eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7faf6d37ee50" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7faf6d37ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7faf6d37d210"/>
        <function-ref name="isInput" scoped="" ref="0x7faf6d37d3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7faf6d37d530"/>
        <function-ref name="isOutput" scoped="" ref="0x7faf6d37d6c0"/>
        <function-ref name="get" scoped="" ref="0x7faf6d37d850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7faf6d37d9e0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d37db70"/>
        <function-ref name="clr" scoped="" ref="0x7faf6d37dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6d344230" loc="46:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6d344230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6d3445b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7faf6d344870" loc="47:/home/cxf/Desktop/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6d344870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6d344bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6d344d80"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6d343020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6d3431b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6d343340"/>
        <function-ref name="get" scoped="" ref="0x7faf6d3434d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6d343660"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6d343ca0"/>
        <function-ref name="set" scoped="" ref="0x7faf6d3437f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6d343980"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6d343b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7faf6d30e8f0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7faf6d30e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d30ec70"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d30ee00"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d30c020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d30c1b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d30c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7faf6d3128f0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7faf6d3128f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d312c70"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d312e00"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d311020"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d3111b0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d311340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7faf6d30f020" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7faf6d30f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d30f3a0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d30f530"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d30f6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d30f850"/>
        <function-ref name="close" scoped="" ref="0x7faf6d30f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7faf6d30c5d0" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7faf6d30c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d30c950"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d30cae0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d30cc70"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d30ce00"/>
        <function-ref name="close" scoped="" ref="0x7faf6d30b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7faf6d3115d0" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7faf6d3115d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d311950"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d311ae0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d311c70"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d311e00"/>
        <function-ref name="close" scoped="" ref="0x7faf6d310020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7faf6d30fc70" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7faf6d30fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d30e020"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d30e1b0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d30e340"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d30e4d0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d30e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7faf6d313b90" loc="43:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7faf6d313b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d312020"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d3121b0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d312340"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d3124d0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d312660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7faf6d3102b0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7faf6d3102b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d310630"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d3107c0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d310950"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d310ae0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d310c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x7faf6c846d10" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x7faf6c846d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c8440e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c844270"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c844400"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c844590"/>
        <function-ref name="close" scoped="" ref="0x7faf6c844720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7faf6c84ae40" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x7faf6c84ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c8491e0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c849370"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c849500"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c849690"/>
        <function-ref name="close" scoped="" ref="0x7faf6c849820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x7faf6c847440" loc="48:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x7faf6c847440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c8477c0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c847950"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c847ae0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c847c70"/>
        <function-ref name="close" scoped="" ref="0x7faf6c847e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x7faf6c8449b0" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x7faf6c8449b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c844d30"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c843020"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c8431b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c843340"/>
        <function-ref name="close" scoped="" ref="0x7faf6c8434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x7faf6c849ab0" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x7faf6c849ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c849e30"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c848020"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c8481b0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c848340"/>
        <function-ref name="close" scoped="" ref="0x7faf6c8484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x7faf6c8460c0" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x7faf6c8460c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c846440"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c8465d0"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c846760"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c8468f0"/>
        <function-ref name="close" scoped="" ref="0x7faf6c846a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6c83f550" loc="56:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c83f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c83f8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c83fa60"/>
        <function-ref name="request" scoped="" ref="0x7faf6c83fbf0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c83fd80"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c83e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7faf6c8438a0" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c8438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c842500"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6c8409b0"/>
        <function-ref name="write" scoped="" ref="0x7faf6c841150"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c841d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7faf6c84a1f0" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x7faf6c84a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c84a570"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c84a700"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c84a890"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c84aa20"/>
        <function-ref name="close" scoped="" ref="0x7faf6c84abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x7faf6c848760" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x7faf6c848760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c848ae0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c848c70"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c848e00"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c847020"/>
        <function-ref name="close" scoped="" ref="0x7faf6c8471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7faf6c81fa50" loc="74:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7faf6c81fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c81fdd0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c81e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7faf6c820720" loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x7faf6c820720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6c820ac0"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6c820c50"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6c820de0"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6c81f020"/>
        <function-ref name="close" scoped="" ref="0x7faf6c81f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6c81f400" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6c81f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6c81f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6c822e70" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6c822e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6c821220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6c8213b0"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6c821540"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6c8216d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6c821860"/>
        <function-ref name="get" scoped="" ref="0x7faf6c8219f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6c821b80"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6c820340"/>
        <function-ref name="set" scoped="" ref="0x7faf6c820020"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6c821d10"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6c8201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6c822260" loc="50:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c822260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c8225e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c822770"/>
        <function-ref name="request" scoped="" ref="0x7faf6c822900"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c822a90"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c822c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7faf6c827540" loc="49:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c827540"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c8261b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6c8236d0"/>
        <function-ref name="write" scoped="" ref="0x7faf6c826dc0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c825a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x7faf6c81e2f0" loc="73:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x7faf6c81e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c81e670"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c81e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6c83b020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c83b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c83b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c83b530"/>
        <function-ref name="request" scoped="" ref="0x7faf6c83b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c83b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c83b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6c83bd90" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6c83bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c8399e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6c836020"/>
        <function-ref name="write" scoped="" ref="0x7faf6c838620"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c8372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6d2f86a0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d2f86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d2f4c40"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d2f51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d2f4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d2f5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d2f3590"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d2f3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d2f5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d2f6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d2f4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d2f6860"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d2f6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7faf6d20cbc0" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="BaseStationC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7faf6d20cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d20b7e0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d20bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7faf6d20d310" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="BaseStationC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7faf6d20d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d20c020"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d20c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRRead" ref="0x7faf6c7e8da0" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRRead" scoped="" ref="0x7faf6c7e8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c7e79d0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c7e7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x7faf6c7ed370" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x7faf6c7ed370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c7eb020"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c7eb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLRead" ref="0x7faf6c7e95a0" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLRead" scoped="" ref="0x7faf6c7e95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c7e8200"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c7e8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLResource" ref="0x7faf6c7ebaa0" loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLResource" scoped="" ref="0x7faf6c7ebaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c7ebe20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c7ea020"/>
        <function-ref name="request" scoped="" ref="0x7faf6c7ea1b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c7ea340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c7ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x7faf6c7efb70" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x7faf6c7efb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6c7ee790"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6c7eec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRResource" ref="0x7faf6c7ea7a0" loc="40:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="BaseStationC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRResource" scoped="" ref="0x7faf6c7ea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c7eab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c7eacb0"/>
        <function-ref name="request" scoped="" ref="0x7faf6c7eae40"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c7e9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c7e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7faf6d2aeb90" loc="36:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7faf6d2aeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2ad7b0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d2adc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7faf6d2ab480" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7faf6d2ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2aa090"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d2aa510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d2afcb0" loc="35:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d2afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d2ae0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d2ae230"/>
        <function-ref name="request" scoped="" ref="0x7faf6d2ae3c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d2ae550"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d2ae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x7faf6d27dd60" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x7faf6d27dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d27b980"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d27be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7faf6d2737a0" loc="47:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7faf6d2737a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d273b20"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d273cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x7faf6d272800" loc="45:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x7faf6d272800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d272b80"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d272d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x7faf6d27a580" loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x7faf6d27a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2791b0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d279630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7faf6d274a50" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7faf6d274a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d274dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d273020"/>
        <function-ref name="request" scoped="" ref="0x7faf6d2731b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d273340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d2734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7faf6d279d10" loc="40:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d279d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d278980"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d276e60"/>
        <function-ref name="write" scoped="" ref="0x7faf6d2775c0"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d276250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7faf6d272020" loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDone" scoped="" ref="0x7faf6d272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d2723a0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d272530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d26dc90" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550C.nc">
      <component-ref qname="HplTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d26dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d26c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d26c230"/>
        <function-ref name="request" scoped="" ref="0x7faf6d26c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d26c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d26c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7faf6d269870" loc="37:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6d269870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6d269bf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6d269d80"/>
        <function-ref name="start" scoped="" ref="0x7faf6d268020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d2681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x7faf6d2572a0" loc="55:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x7faf6d2572a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d257620"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d2577b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x7faf6d2582a0" loc="54:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x7faf6d2582a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6d258620"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6d2587b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7faf6d25d9b0" loc="41:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7faf6d25d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d25dd30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d25c020"/>
        <function-ref name="request" scoped="" ref="0x7faf6d25c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d25c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d25c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelLightPower" ref="0x7faf6d268580" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x7faf6d268580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x7faf6d268900"/>
        <function-ref name="isOpen" scoped="" ref="0x7faf6d268a90"/>
        <function-ref name="openDone" scoped="" ref="0x7faf6d268c20"/>
        <function-ref name="closeDone" scoped="" ref="0x7faf6d268db0"/>
        <function-ref name="close" scoped="" ref="0x7faf6d266020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7faf6d25c7c0" loc="42:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d25c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d25cb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d25ccd0"/>
        <function-ref name="request" scoped="" ref="0x7faf6d25ce60"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d25a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d25a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7faf6d262ae0" loc="40:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d262ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d260790"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d25eca0"/>
        <function-ref name="write" scoped="" ref="0x7faf6d25f400"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d25e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7faf6d2664d0" loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d2664d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d263a20"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d264020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d264da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d264920"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d2624a0"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d262020"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d2644a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d265110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d263410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d2655e0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d265ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6d2353a0" loc="92:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6d2353a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6d235740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d2358d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6d2331f0" loc="96:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6d2331f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6d233590"/>
        <function-ref name="configure" scoped="" ref="0x7faf6d233720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6d235b20" loc="93:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d235b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d234020"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d2341b0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d234340"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d2344d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d234660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d236510" loc="91:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d236510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d2368b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d236a40"/>
        <function-ref name="request" scoped="" ref="0x7faf6d236bd0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d236d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d235020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6d2348b0" loc="94:/home/cxf/Desktop/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d2348b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d234c30"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d234dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7faf6c7b83b0" loc="44:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7faf6c7b83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7faf6c7b8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7faf6c7b89c0" loc="45:/home/cxf/Desktop/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7faf6c7b89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c7b8d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c7b7020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c7b71b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c7b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7faf6c7b4a60" loc="55:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7faf6c7b4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7faf6c7b4e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c7b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7faf6c7b2790" loc="60:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7faf6c7b2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7faf6c7b2b30"/>
        <function-ref name="configure" scoped="" ref="0x7faf6c7b2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7faf6c7b1020" loc="61:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7faf6c7b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7faf6c7b13a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7faf6c7b1530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7faf6c7b16c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7faf6c7b1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7faf6c7b3270" loc="56:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c7b3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c7b35f0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6c7b3780"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c7b3910"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c7b3aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c7b3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7faf6c7b1aa0" loc="62:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7faf6c7b1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7faf6c7b1e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7faf6c7b0020"/>
        <function-ref name="led1On" scoped="" ref="0x7faf6c7b01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7faf6c7b0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7faf6c7b04d0"/>
        <function-ref name="get" scoped="" ref="0x7faf6c7b0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7faf6c7b07f0"/>
        <function-ref name="led0On" scoped="" ref="0x7faf6c7b0e30"/>
        <function-ref name="set" scoped="" ref="0x7faf6c7b0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7faf6c7b0980"/>
        <function-ref name="led2Off" scoped="" ref="0x7faf6c7b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6c7b5c80" loc="54:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6c7b5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c7b40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6c7b4230"/>
        <function-ref name="request" scoped="" ref="0x7faf6c7b43c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c7b4550"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c7b46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7faf6c7b3e80" loc="57:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c7b3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6c7b2220"/>
        <function-ref name="userId" scoped="" ref="0x7faf6c7b23b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7faf6c7af160" loc="75:/home/cxf/Desktop/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7faf6c7af160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c7af4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c7af670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7faf6d2315b0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6d2315b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6d231930"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6d231ac0"/>
        <function-ref name="start" scoped="" ref="0x7faf6d231c50"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d231de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faf6d230060" loc="71:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6d230060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faf6d2303e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faf6d230630" loc="72:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6d230630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d2309b0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6d230b40"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d230cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d230e60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6d22e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faf6d22e270" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6d22e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6d22e5f0"/>
        <function-ref name="userId" scoped="" ref="0x7faf6d22e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7faf6c77e400" loc="61:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7faf6c77e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7faf6c77e780"/>
        <function-ref name="stopDone" scoped="" ref="0x7faf6c77e910"/>
        <function-ref name="start" scoped="" ref="0x7faf6c77eaa0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6c77ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7faf6c77ee80" loc="63:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7faf6c77ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7faf6c77d220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7faf6c77c8c0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7faf6c77c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c77cc40"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c77cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7faf6c77d470" loc="64:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7faf6c77d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6c77d7f0"/>
        <function-ref name="requested" scoped="" ref="0x7faf6c77d980"/>
        <function-ref name="granted" scoped="" ref="0x7faf6c77db10"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6c77dca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7faf6c77de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7faf6c77b100" loc="73:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7faf6c77b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7faf6c77b480"/>
        <function-ref name="runTask" scoped="" ref="0x7faf6c77b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7faf6c77fb30" loc="60:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7faf6c77fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7faf6c77e020"/>
        <function-ref name="stop" scoped="" ref="0x7faf6c77e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7faf6c77c0e0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7faf6c77c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7faf6c77c460"/>
        <function-ref name="userId" scoped="" ref="0x7faf6c77c5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7faf6d22a3d0" loc="45:/home/cxf/Desktop/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="HplTaos2550C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7faf6d22a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7faf6ecea9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7faf6ecead20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7faf6d226870"/>
        <function-ref name="fired" scoped="" ref="0x7faf6d229e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7faf6d228c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7faf6d228780"/>
        <function-ref name="getdt" scoped="" ref="0x7faf6d2251e0"/>
        <function-ref name="gett0" scoped="" ref="0x7faf6d226cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7faf6d228300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7faf6d229020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7faf6d226260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7faf6d2294f0"/>
        <function-ref name="stop" scoped="" ref="0x7faf6d2299c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d223020" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d223020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d2233a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d223530"/>
        <function-ref name="request" scoped="" ref="0x7faf6d2236c0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d223850"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d2239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6d223d90" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d223d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2229e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d21e020"/>
        <function-ref name="write" scoped="" ref="0x7faf6d221620"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d21f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7faf6d219dc0" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7faf6d219dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7faf6d218180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7faf6d218310"/>
        <function-ref name="request" scoped="" ref="0x7faf6d2184a0"/>
        <function-ref name="granted" scoped="" ref="0x7faf6d218630"/>
        <function-ref name="isOwner" scoped="" ref="0x7faf6d2187c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7faf6d218b70" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7faf6d218b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7faf6d4e0650"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7faf6d4e0910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7faf6d2177d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7faf6d214ca0"/>
        <function-ref name="write" scoped="" ref="0x7faf6d215400"/>
        <function-ref name="readDone" scoped="" ref="0x7faf6d214090"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7faf6ec5dd00" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7faf6ec5e8e0" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7faf6ec52b70" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7faf6ec528f0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7faf6ec55020" loc="31:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7faf6ec55aa0" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7faf6ec55820" loc="39:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7faf6ec545e0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7faf6ec54360" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7faf6ec52020" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7faf6ec410e0" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7faf6ec41810" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7faf6ec422b0" loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7faf6ec3f760" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6ec429b0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7faf6ec3f020" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6ec434c0" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7faf6ec43b90" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7faf6f72ec40" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7faf6ed5abf0" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7faf6ed5a3e0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7faf6ed52c50" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7faf6ed504f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7faf6ec9dac0" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7faf6ec7d1f0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7faf6ed14470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7faf6ecb5b80" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7faf6e8dd4e0" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6e8dd260" loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7faf6e8dcab0" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6e8dc830" loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faf6e8de860" loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6e8ddd30" loc="130:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7faf6e870060" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
              <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e8716d0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7faf6e871a20" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e871d50" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7faf6e8572a0" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e857020" loc="177:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7faf6e861d60" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e861ae0" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7faf6e8631f0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7faf6e863cb0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e863a30" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7faf6e85e7a0" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e85e1c0" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e85e510" loc="121:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7faf6e8602b0" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e862c40" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e860020" loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7faf6e85abf0" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e85a970" loc="147:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7faf6e858020" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e8599a0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7faf6e859cc0" loc="162:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7faf6ea86c10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7faf6e85c9f0" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e85c770" loc="136:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7faf6e856730" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7faf6e856150" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7faf6e8564a0" loc="187:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7faf6e855580" loc="195:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/cxf/Desktop/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7faf6e8407d0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7faf6e8407d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7faf6e83d0e0" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7faf6e83de10" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7faf6e8407d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6e83d860" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7faf6e83db80" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7faf6e8407d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faf6e86c110" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e874e30" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7faf6e86b2a0" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e86b020" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faf6e868620" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e868020" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e868350" loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faf6e8676d0" loc="106:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7faf6e86a730" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e86a170" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e86a4a0" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e84fa20" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e84fa20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7faf6e8457c0" loc="136:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faf6e849020" loc="83:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7faf6e848da0" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faf6e8487d0" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7faf6e848b10" loc="114:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7faf6e848020" loc="98:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7faf6e8448a0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7faf6e844020" loc="144:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7faf6e849800" loc="92:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7faf6e84c5b0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faf6e84c330" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7faf6e847dc0" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faf6e8477f0" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7faf6e847b30" loc="129:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7faf6e84a0b0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faf6e84cdf0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6e84a8b0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7faf6e87b410" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7faf6e87daa0" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7faf6e87de20" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e87b170" loc="80:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faf6e878a40" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e878440" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e878770" loc="135:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faf6e876b80" loc="123:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faf6e879790" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e879510" loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6e877cb0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e8776d0" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faf6e877a20" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7faf6e830020" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7faf6e8307d0" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7faf6e82f020" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7faf6e82d020" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7faf6e82c7d0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6e82b020" loc="117:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7faf6e82f7b0" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e82bb90" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7faf6e82b910" loc="134:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7faf6e831850" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7faf6e82d800" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7faf6e82c020" loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7faf6e7447f0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7faf6e7441e0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7faf6e744560" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7faf6e738e30" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e738810" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7faf6e738ba0" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7faf6e736020" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e737d70" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7faf6e738020" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7faf6e739520" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7faf6e7392a0" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7faf6e73e020" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e743cd0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7faf6e73d2a0" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e73d020" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7faf6e73c430" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e73c1b0" loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7faf6e72f390" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e72f110" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7faf6e733410" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e73bda0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7faf6e733180" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7faf6e731350" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e7310d0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7faf6e732830" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e732210" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7faf6e7325a0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7faf6e72e390" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e72e110" loc="71:/home/cxf/Desktop/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7faf6e72ad40" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7faf6e72a530" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7faf6e72a2b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7faf6e7295e0" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e7357a0" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e7357a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faf6e7359e0" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e7359e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7faf6e726840" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e7359e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e7265c0" loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7faf6e7239d0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e723750" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7faf6e7275f0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e727370" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e722d00" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e7359e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e722710" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7faf6e722a70" loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e7359e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7faf6e70c380" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7faf6e70c380"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7faf6e707550" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e7072d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6e709aa0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7faf6e70c380"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e709820" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7faf6e709020" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e70ccb0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e7062f0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7faf6e70c380"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e707ca0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7faf6e706060" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7faf6e70c380"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e6fdc60" loc="53:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e6fdc60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7faf6e6f95c0" loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7faf6e6fb490" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6fb210" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7faf6e6d9d00" loc="120:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7faf6e6dad00" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7faf6e6da390" loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7faf6e6d9530" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7faf6e6d78b0" loc="128:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7faf6e6d4e80" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6d4c00" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7faf6e6dba30" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7faf6e6d4490" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6d4210" loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7faf6e6d1990" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6d1370" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e6d1700" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7faf6e6d2be0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6d25c0" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e6d2950" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7faf6e6d0d20" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7faf6e895d60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6d0aa0" loc="49:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7faf6e6cfa50" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7faf6e895d60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6cf440" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7faf6e6cf7c0" loc="51:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7faf6e895d60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7faf6e6d0350" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6d00d0" loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7faf6e6cd1f0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7faf6e895d60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faf6e6e1130" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7faf6e6e2790" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7faf6e6e2b10" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e6e2e40" loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faf6e6dd810" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6dd210" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6e6dd540" loc="122:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faf6e6df960" loc="110:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faf6e6e0020" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6e1c70" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6e6df020" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6e09c0" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faf6e6e0d10" loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7faf6e690750" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7faf6e69c9b0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e69c730" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7faf6e68b2a0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e68b020" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7faf6e689a30" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6897b0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7faf6e68ea50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e68e7d0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7faf6e68f2e0" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e68f060" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7faf6e68c790" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e68c1b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e68c500" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7faf6e68e050" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e68fa40" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e68fd90" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7faf6e689020" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e68b9d0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7faf6e68bd20" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7faf6e69e960" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7faf6e694350" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7faf6e6915f0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e691370" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7faf6e694e60" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e694be0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7faf6e6929a0" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e692720" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7faf6e668c10" loc="60:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7faf6e669d50" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7faf6e897d90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7faf6e669ad0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7faf6e897d90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faf6e6684e0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7faf6e6692d0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7faf6e667460" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7faf6e897d90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7faf6e6608d0" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e660650" loc="70:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7faf6e664c10" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e664990" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faf6e662350" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7faf6e663ad0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6634f0" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7faf6e663840" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7faf6e6640b0" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e66be00" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7faf6e662de0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e662b60" loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faf6e6b0020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7faf6e6b16c0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6b1440" loc="40:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7faf6e6b0b50" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6b08d0" loc="52:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7faf6e6ae420" loc="59:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7faf6e6ad020" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6aed20" loc="65:/home/cxf/Desktop/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7faf6e69d2a0" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e69d020" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7faf6e6a4190" loc="86:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7faf6e6a69d0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6e6a63c0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7faf6e6a6740" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7faf6e6aa3f0" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6aa170" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7faf6e6a8020" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6aac80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7faf6e6a7020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6e6a8910" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7faf6e6a8c90" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7faf6e6b3a80" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7faf6e6ab910" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6ab370" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7faf6e6ab680" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7faf6e6a7b90" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6a7910" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7faf6e6770b0" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e678dd0" loc="131:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7faf6e679680" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e679400" loc="120:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7faf6e685df0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e685820" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7faf6e685b60" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7faf6e681020" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e682ca0" loc="75:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7faf6e671050" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e673a40" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e673d90" loc="156:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7faf6e682430" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6821b0" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7faf6e6785e0" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e678020" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7faf6e678350" loc="125:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7faf6e6809d0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6e6803c0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7faf6e680740" loc="88:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7faf6e6732a0" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e673020" loc="151:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7faf6e684920" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6846a0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7faf6e67d3f0" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e67d170" loc="99:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7faf6e67e8b0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6e67e2a0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7faf6e67e620" loc="94:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7faf6e66f820" loc="178:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7faf6e8941b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7faf6e671ad0" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e671850" loc="162:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7faf6e66f020" loc="173:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7faf6e895d60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7faf6e6746b0" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6740d0" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7faf6e674420" loc="146:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7faf6e681b20" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6818a0" loc="81:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7faf6e67abf0" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e67a620" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7faf6e67a960" loc="115:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7faf6e677e40" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e677870" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7faf6e677bb0" loc="136:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7faf6e66d2a0" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e66d020" loc="185:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7faf6e67c2b0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e67dbf0" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7faf6e67c020" loc="105:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7faf6e685040" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e688da0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7faf6e670680" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e670400" loc="168:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7faf6e675910" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e675690" loc="141:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7faf6e67cdb0" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e67cb30" loc="110:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7faf6e6a1e00" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6a1820" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7faf6e6a1b70" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7faf6e69f5e0" loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7faf6e6a2430" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6a21b0" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7faf6e6a1020" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6a2c40" loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7faf6e699c50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6999d0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7faf6e699110" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e6a3e20" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7faf6e6974d0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7faf6e696020" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e697d20" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e601d10" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e601d10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faf6e5fe020" loc="56:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7faf6e5fac50" loc="109:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faf6e5fdba0" loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7faf6e5fa2b0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7faf6e5fcbd0" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7faf6e5fa020" loc="103:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7faf6e5fc3b0" loc="88:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7faf6e5f9480" loc="116:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faf6e5feb80" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faf6e5fe900" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e5fe020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6e5fd3e0" loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/cxf/Desktop/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7faf6e5ea780" loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7faf6e5e90e0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7faf6e5e9a60" loc="79:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7faf6e5ea020" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7faf6e5b3020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e5b6d50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faf6e5b2b40" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e5b28c0" loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6e5b2020" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e5b3940" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faf6e5b3c90" loc="54:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7faf6e5ae630" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
              <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e5ae370" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7faf6e59cba0" loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7faf6e59ab10" loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7faf6e59a3b0" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7faf6e59c360" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7faf6e59fd00" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7faf6ea85020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7faf6e59c0d0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7faf6e4ec540" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7faf6e4ece70" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7faf6e4e6660" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7faf6e4eddb0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7faf6e4eec80" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7faf6e4e9530" loc="98:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7faf6e4dd740" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faf6e4e77a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7faf6e4dd4c0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faf6e4e77a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7faf6e4e0750" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7faf6e4de2a0" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faf6e4e77a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7faf6e4de020" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7faf6e4e77a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7faf6e4debb0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7faf6e4e77a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7faf6e379790" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
              <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e3794d0" loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7faf6e37cb20" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e37c8a0" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faf6e3662e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faf6e366060" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7faf6e366a80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6e367020" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faf6e36fd50" loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e367960" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faf6e3676e0" loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7faf6e36c0b0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faf6e36ddb0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7faf6e36b5f0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7faf6e36b370" loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7faf6e36cb80" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faf6e36c900" loc="62:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7faf6e36a110" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7faf6e36be20" loc="80:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7faf6e36d5b0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7faf6e36d330" loc="49:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7faf6ea85400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7faf6e2d5070" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7faf6e2d3120" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7faf6e2d3b70" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7faf6e2d38f0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7faf6e2d2350" loc="69:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7faf6e2d58d0" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7faf6e2d2bc0" loc="74:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7faf6e2d69f0" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e2d6770" loc="48:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7faf6e2cfdf0" loc="63:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6e2cf5c0" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6e2cf340" loc="56:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7faf6e25a350" loc="52:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7faf6e25dae0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7faf6f69d090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7faf6e22d360" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7faf6e22d360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7faf6e22a020" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7faf6e22d360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7faf6e22dc20" loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7faf6e22d360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7faf6e203700" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e203480" loc="55:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6e206510" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e206290" loc="40:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7faf6e2052f0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e206cd0" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7faf6e205060" loc="45:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e205d00" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6e205a80" loc="50:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7faf6e1d1350" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6e1d10d0" loc="52:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7faf6e1d58b0" loc="44:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6e14d4a0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6e14d4a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faf6e14d6e0" loc="57:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e14d6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7faf6e14c030" loc="64:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e14d6e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7faf6e14b190" loc="76:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7faf6e14c8b0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7faf6e14b8f0" loc="82:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7faf6e11db20" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7faf6e11e8e0" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7faf6e1215a0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7faf6e11d350" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7faf6e11d0d0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7faf6e11e110" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faf6e11fe30" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7faf6e11c5c0" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7faf6e11c340" loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7faf6e121d40" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7faf6e11f710" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faf6e11f490" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7faf6e10c910" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7faf6e10e880" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7faf6e10d030" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7faf6e10d860" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7faf6e10a190" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7faf6e10c0e0" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7faf6e10f5e0" loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7faf6ecceda0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7faf6eccd230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7faf6e10e040" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7faf6ecceda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7faf6eccd230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7faf6e10fda0" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7faf6ecceda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7faf6eccd230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7faf6e1190d0" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e1190d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7faf6e1169f0" loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faf6e118bf0" loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6e119a10" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e1190d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7faf6e117390" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7faf6e1141f0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e118440" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e1190d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7faf6e1181c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6e1190d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faf6e117b00" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6e116270" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7faf6e12e430" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6e12e430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7faf6e128020" loc="98:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7faf6e129020" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6e12ed60" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6e12e430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7faf6e128a00" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7faf6e128780" loc="104:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7faf6e127270" loc="110:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7faf6e12c7b0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7faf6e12c020" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7faf6e1297e0" loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6e12d760" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6e12e430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7faf6e12d4e0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7faf6e12e430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faf6e12b020" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6e12b770" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7faf6df1a920" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7faf6df1a920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7faf6df1ab60" loc="59:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6df1ab60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7faf6df136b0" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6df1ab60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7faf6df13430" loc="66:/home/cxf/Desktop/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6df1ab60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7faf6df17020" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7faf6df161f0" loc="66:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7faf6df179c0" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7faf6df17740" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7faf6df18760" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7faf6df1f810" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6df1f590" loc="62:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7faf6df1ebf0" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6df1e970" loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7faf6df1e0e0" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7faf6df1c6c0" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6df1c440" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7faf6de28360" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6de28360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7faf6de202a0" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7faf6de20020" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7faf6de21020" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7faf6de28ca0" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6de28360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7faf6de24110" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6de28360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7faf6de25e10" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6de28360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7faf6de248c0" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7faf6de217e0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7faf6de25670" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6de28360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7faf6de253f0" loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7faf6de28360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7faf6de23070" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6de237c0" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/cxf/Desktop/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faf6de062c0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7faf6de078b0" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7faf6de07c40" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6de06020" loc="70:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6de05800" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7faf6de03ae0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7faf6de03e70" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6de051e0" loc="82:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7faf6de05550" loc="83:/home/cxf/Desktop/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7faf6de094c0" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7faf6de09240" loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7faf6ddef560" loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7faf6dde54d0" loc="126:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7faf6ddeadd0" loc="117:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7faf6dde4020" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7faf6dde5c70" loc="128:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7faf6ddf0d80" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7faf6dde79e0" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7faf6dde7760" loc="122:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7faf6ddeb510" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7faf6ddeb290" loc="113:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7faf6ddee4e0" loc="97:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7faf6dde0c20" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7faf6dde09a0" loc="141:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7faf6ddebcb0" loc="114:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7faf6dde22a0" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7faf6dde2020" loc="131:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7faf6dde1270" loc="136:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7faf6dde6c80" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7faf6dde6a00" loc="125:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7faf6dde0270" loc="140:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7faf6dde97d0" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7faf6dde9550" loc="119:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7faf6dded020" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6ddeec40" loc="103:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7faf6ddea670" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7faf6ddea3f0" loc="116:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7faf6dde6270" loc="123:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7faf6dde4790" loc="129:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7faf6dde2a00" loc="132:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7faf6dde1a20" loc="138:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7faf6dde7020" loc="120:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7faf6ddefcf0" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7faf6ddeda20" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6dded7a0" loc="109:/home/cxf/Desktop/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7faf6dd85e10" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6dd826a0" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7faf6dd1e850" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7faf6dd1cde0" loc="87:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7faf6dd1f8f0" loc="79:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7faf6dd19020" loc="91:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7faf6dd1a810" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7faf6dd1a590" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7faf6dd1dc40" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faf6dd1d9c0" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7faf6dd19a20" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7faf6dd197a0" loc="92:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7faf6dd1e0e0" loc="80:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7faf6dd1c610" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faf6dd1c390" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7faf6dd1d2a0" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7faf6dd1d020" loc="82:/home/cxf/Desktop/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faf6db592f0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6db5cce0" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6db59060" loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7faf6db55890" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6db55290" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6db555c0" loc="125:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7faf6db549b0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7faf6db585f0" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6db58370" loc="89:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6db57ac0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6db574e0" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7faf6db57830" loc="100:/home/cxf/Desktop/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7faf6daf4670" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6daf4060" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7faf6daf43e0" loc="31:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7faf6daf7820" loc="15:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7faf6daf66d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7faf6daf60d0" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:133" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7faf6e880bf0"/>
                <typename><typedef-ref name="message_t" ref="0x7faf6e87d2e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7faf6daf6440" loc="23:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7faf6dac0760" loc="95:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7faf6dabe020" loc="105:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/cxf/Desktop/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7faf6dabde10" loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7faf6dabd6a0" loc="49:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7faf6dac8770" loc="56:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7faf6dac7be0" loc="72:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7faf6dac4840" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6dac45c0" loc="94:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7faf6dac54a0" loc="79:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7faf6dac7350" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6dac70d0" loc="65:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7faf6dac30e0" loc="100:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7faf6dac5d50" loc="85:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7faf6dacf0e0" loc="71:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7faf6dacfa10" loc="81:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7faf6dad0720" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7faf6dad04a0" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7faf6dacd5c0" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6dacd340" loc="91:/home/cxf/Desktop/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7faf6dacb270" loc="62:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7faf6daca020" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6dacbc10" loc="69:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7faf6dacaaf0" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6daca870" loc="80:/home/cxf/Desktop/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faf6d997de0" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faf6d997810" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6d997b50" loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7faf6d991ac0" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7faf6d991840" loc="79:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7faf6d98e930" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faf6d98e360" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6d98e6a0" loc="90:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7faf6d990740" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7faf6d98d2c0" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faf6d98c920" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6d98cc60" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7faf6d98d020" loc="99:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7faf6d991070" loc="72:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7faf6d992720" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7faf6d993db0" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7faf6d992130" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7faf6d992480" loc="57:/home/cxf/Desktop/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7faf6d96c5b0" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7faf6d96c330" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7faf6d96b430" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7faf6d96ce20" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7faf6d96b1a0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7faf6d958820" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7faf6d95a910" loc="42:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7faf6d954110" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6d956e60" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7faf6d956070" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7faf6d95d9b0" loc="40:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7faf6d95a190" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7faf6d9580e0" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7faf6d957020" loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7faf6d957950" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6d9576d0" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7faf6d956790" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7faf6d793a90" loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7faf6d77d910" loc="84:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6d77d340" loc="84:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7faf6d77d680" loc="84:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7faf6d77c190" loc="92:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7faf6d77eb50" loc="76:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7faf6d77f4e0" loc="61:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7faf6d77aaa0" loc="109:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7faf6d77a820" loc="109:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7faf6d781270" loc="47:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7faf6d7795c0" loc="116:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6d779340" loc="116:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7faf6d77a020" loc="100:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6d77c9c0" loc="100:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7faf6d77ccf0" loc="100:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7faf6d781c40" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6d7819c0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7faf6d77e2f0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7faf6d77fcd0" loc="69:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7faf6d77e060" loc="69:/home/cxf/Desktop/tinyos/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7faf6d735b10" loc="68:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7faf6d735350" loc="61:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7faf6d736b70" loc="54:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7faf6d7362b0" loc="53:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7faf6d6933e0" loc="20:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/cxf/Desktop/tinyos/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7faf6d679020" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7faf6d677ac0" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7faf6d67a780" loc="51:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7faf6d6772a0" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7faf6d677020" loc="70:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7faf6d67a020" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7faf6d6797d0" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7faf6d66b680" loc="48:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/cxf/Desktop/tinyos/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Channel" loc="38:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
      <documentation loc="32:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <short>&#10; Open or close a channel and retrieve the open status of the channel.</short>
        <long>&#10; Open or close a channel and retrieve the open status of the channel.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <function command="" provided="0" name="open" ref="0x7faf6d5d8e10" loc="44:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="39:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Open the channel.</short>
          <long>&#10; Open the channel.&#10; &#10; @return SUCCESS if the openDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOpen" ref="0x7faf6d5d1d90" loc="58:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="53:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Determine if the channel is open.</short>
          <long>&#10; Determine if the channel is open.&#10; &#10; @return TRUE if the channel is open, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="openDone" ref="0x7faf6d5d07b0" loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been opened.</short>
          <long>&#10; Notify the caller that the channel has been opened.&#10; &#10; @param error SUCCESS if the channel was opened without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6d5d0530" loc="65:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="closeDone" ref="0x7faf6d5cf2a0" loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been closed.</short>
          <long>&#10; Notify the caller that the channel has been closed.&#10; &#10; @param error SUCCESS if the channel was closed without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6d5cf020" loc="72:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x7faf6d5d1610" loc="51:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="46:/home/cxf/Desktop/tinyos/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Close the channel.</short>
          <long>&#10; Close the channel.&#10; &#10; @return SUCCESS if the closeDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7faf6d59dbe0" loc="56:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7faf6d59cca0" loc="73:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7faf6d59d350" loc="46:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7faf6d59c470" loc="65:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7faf6d59b620" loc="81:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/cxf/Desktop/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7faf6d53c120" loc="62:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/cxf/Desktop/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7faf6d4dfdb0" loc="59:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7faf6d4dfdb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7faf6d4dc400" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7faf6d4e0cf0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7faf6d4de710" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7faf6d4e0cf0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7faf6d4dea60" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7faf6d4dedb0" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7faf6d4dc150" loc="76:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7faf6d4d6cf0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6d4d6020" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7faf6d4d6370" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7faf6d4d66c0" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7faf6d4d6a40" loc="112:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7faf6d4da2d0" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7faf6d4e0cf0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7faf6d4db580" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7faf6d4e0cf0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7faf6d4db8d0" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7faf6d4dbc20" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7faf6d4da020" loc="92:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7faf6d4d7070" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7faf6d4d9380" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7faf6ed54600"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7faf6d4d96d0" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7faf6f69e5a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7faf6d4d9a20" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7faf6d4d9da0" loc="102:/home/cxf/Desktop/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7faf6d434d40" loc="46:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7faf6d3ef5b0" loc="54:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7faf6d3efcd0" loc="55:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7faf6d3eee20" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7faf6d3eeba0" loc="60:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7faf6d3f0e30" loc="52:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7faf6d3ea840" loc="65:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7faf6d3e5760" loc="84:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7faf6d3e92a0" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7faf6d3e9020" loc="67:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7faf6d3e30e0" loc="89:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7faf6d3f0020" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7faf6d3f4c60" loc="49:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7faf6d3ea110" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7faf6d3ebe30" loc="64:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7faf6d3e9b40" loc="68:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7faf6d3ed590" loc="61:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7faf6d3e8b50" loc="75:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7faf6d3ee4c0" loc="56:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7faf6d3e5020" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7faf6d3e6c60" loc="83:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7faf6d3e4990" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7faf6d3e4710" loc="88:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7faf6f69fa90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7faf6d3e8390" loc="72:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7faf6d3f06f0" loc="50:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7faf6d3eb020" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7faf6d3edc40" loc="62:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7faf6d3e65c0" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7faf6d3e6340" loc="81:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7faf6d3e4020" loc="85:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7faf6d3eb750" loc="63:/home/cxf/Desktop/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7faf6ed7b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
